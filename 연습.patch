Subject: [PATCH] 연습
---
Index: .idea/.gitignore
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/.gitignore b/.idea/.gitignore
new file mode 100644
--- /dev/null	(revision 74a8b684730665ca64dd7cf129c1f96483c96c29)
+++ b/.idea/.gitignore	(revision 74a8b684730665ca64dd7cf129c1f96483c96c29)
@@ -0,0 +1,3 @@
+# Default ignored files
+/shelf/
+/workspace.xml
Index: .idea/abc.iml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/abc.iml b/.idea/abc.iml
new file mode 100644
--- /dev/null	(revision 74a8b684730665ca64dd7cf129c1f96483c96c29)
+++ b/.idea/abc.iml	(revision 74a8b684730665ca64dd7cf129c1f96483c96c29)
@@ -0,0 +1,9 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<module type="JAVA_MODULE" version="4">
+  <component name="NewModuleRootManager" inherit-compiler-output="true">
+    <exclude-output />
+    <content url="file://$MODULE_DIR$" />
+    <orderEntry type="inheritedJdk" />
+    <orderEntry type="sourceFolder" forTests="false" />
+  </component>
+</module>
\ No newline at end of file
Index: .idea/compiler.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/compiler.xml b/.idea/compiler.xml
new file mode 100644
--- /dev/null	(revision 74a8b684730665ca64dd7cf129c1f96483c96c29)
+++ b/.idea/compiler.xml	(revision 74a8b684730665ca64dd7cf129c1f96483c96c29)
@@ -0,0 +1,21 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="CompilerConfiguration">
+    <annotationProcessing>
+      <profile default="true" name="Default" enabled="true" />
+      <profile name="Maven default annotation processors profile" enabled="true">
+        <sourceOutputDir name="target/generated-sources/annotations" />
+        <sourceTestOutputDir name="target/generated-test-sources/test-annotations" />
+        <outputRelativeToContentRoot value="true" />
+        <module name="bpro00" />
+        <module name="shop" />
+      </profile>
+    </annotationProcessing>
+  </component>
+  <component name="JavacSettings">
+    <option name="ADDITIONAL_OPTIONS_OVERRIDE">
+      <module name="bpro00" options="-parameters" />
+      <module name="shop" options="-parameters" />
+    </option>
+  </component>
+</project>
\ No newline at end of file
Index: .idea/encodings.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/encodings.xml b/.idea/encodings.xml
new file mode 100644
--- /dev/null	(revision 74a8b684730665ca64dd7cf129c1f96483c96c29)
+++ b/.idea/encodings.xml	(revision 74a8b684730665ca64dd7cf129c1f96483c96c29)
@@ -0,0 +1,9 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="Encoding" native2AsciiForPropertiesFiles="true" defaultCharsetForPropertiesFiles="UTF-8">
+    <file url="file://$PROJECT_DIR$/bpro00/src/main/java" charset="UTF-8" />
+    <file url="file://$PROJECT_DIR$/shop/shop/src/main/java" charset="UTF-8" />
+    <file url="file://$PROJECT_DIR$/shop/shop/target/generated-sources/java" charset="UTF-8" />
+    <file url="PROJECT" charset="UTF-8" />
+  </component>
+</project>
\ No newline at end of file
Index: .idea/jarRepositories.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/jarRepositories.xml b/.idea/jarRepositories.xml
new file mode 100644
--- /dev/null	(revision 74a8b684730665ca64dd7cf129c1f96483c96c29)
+++ b/.idea/jarRepositories.xml	(revision 74a8b684730665ca64dd7cf129c1f96483c96c29)
@@ -0,0 +1,20 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="RemoteRepositoriesConfiguration">
+    <remote-repository>
+      <option name="id" value="central" />
+      <option name="name" value="Central Repository" />
+      <option name="url" value="https://repo.maven.apache.org/maven2" />
+    </remote-repository>
+    <remote-repository>
+      <option name="id" value="central" />
+      <option name="name" value="Maven Central repository" />
+      <option name="url" value="https://repo1.maven.org/maven2" />
+    </remote-repository>
+    <remote-repository>
+      <option name="id" value="jboss.community" />
+      <option name="name" value="JBoss Community repository" />
+      <option name="url" value="https://repository.jboss.org/nexus/content/repositories/public/" />
+    </remote-repository>
+  </component>
+</project>
\ No newline at end of file
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/misc.xml b/.idea/misc.xml
new file mode 100644
--- /dev/null	(revision 74a8b684730665ca64dd7cf129c1f96483c96c29)
+++ b/.idea/misc.xml	(revision 74a8b684730665ca64dd7cf129c1f96483c96c29)
@@ -0,0 +1,15 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="ExternalStorageConfigurationManager" enabled="true" />
+  <component name="MavenProjectsManager">
+    <option name="originalFiles">
+      <list>
+        <option value="$PROJECT_DIR$/bpro00/pom.xml" />
+        <option value="$PROJECT_DIR$/shop/shop/pom.xml" />
+      </list>
+    </option>
+  </component>
+  <component name="ProjectRootManager" version="2" languageLevel="JDK_11" default="true" project-jdk-name="corretto-11" project-jdk-type="JavaSDK">
+    <output url="file://$PROJECT_DIR$/out" />
+  </component>
+</project>
\ No newline at end of file
Index: .idea/modules.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/modules.xml b/.idea/modules.xml
new file mode 100644
--- /dev/null	(revision 74a8b684730665ca64dd7cf129c1f96483c96c29)
+++ b/.idea/modules.xml	(revision 74a8b684730665ca64dd7cf129c1f96483c96c29)
@@ -0,0 +1,9 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="ProjectModuleManager">
+    <modules>
+      <module fileurl="file://$PROJECT_DIR$/.idea/abc.iml" filepath="$PROJECT_DIR$/.idea/abc.iml" />
+      <module fileurl="file://$PROJECT_DIR$/shop/shop/shop.iml" filepath="$PROJECT_DIR$/shop/shop/shop.iml" />
+    </modules>
+  </component>
+</project>
\ No newline at end of file
Index: .idea/uiDesigner.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/uiDesigner.xml b/.idea/uiDesigner.xml
new file mode 100644
--- /dev/null	(revision 74a8b684730665ca64dd7cf129c1f96483c96c29)
+++ b/.idea/uiDesigner.xml	(revision 74a8b684730665ca64dd7cf129c1f96483c96c29)
@@ -0,0 +1,124 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="Palette2">
+    <group name="Swing">
+      <item class="com.intellij.uiDesigner.HSpacer" tooltip-text="Horizontal Spacer" icon="/com/intellij/uiDesigner/icons/hspacer.svg" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="1" hsize-policy="6" anchor="0" fill="1" />
+      </item>
+      <item class="com.intellij.uiDesigner.VSpacer" tooltip-text="Vertical Spacer" icon="/com/intellij/uiDesigner/icons/vspacer.svg" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="6" hsize-policy="1" anchor="0" fill="2" />
+      </item>
+      <item class="javax.swing.JPanel" icon="/com/intellij/uiDesigner/icons/panel.svg" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="3" hsize-policy="3" anchor="0" fill="3" />
+      </item>
+      <item class="javax.swing.JScrollPane" icon="/com/intellij/uiDesigner/icons/scrollPane.svg" removable="false" auto-create-binding="false" can-attach-label="true">
+        <default-constraints vsize-policy="7" hsize-policy="7" anchor="0" fill="3" />
+      </item>
+      <item class="javax.swing.JButton" icon="/com/intellij/uiDesigner/icons/button.svg" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="3" anchor="0" fill="1" />
+        <initial-values>
+          <property name="text" value="Button" />
+        </initial-values>
+      </item>
+      <item class="javax.swing.JRadioButton" icon="/com/intellij/uiDesigner/icons/radioButton.svg" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="3" anchor="8" fill="0" />
+        <initial-values>
+          <property name="text" value="RadioButton" />
+        </initial-values>
+      </item>
+      <item class="javax.swing.JCheckBox" icon="/com/intellij/uiDesigner/icons/checkBox.svg" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="3" anchor="8" fill="0" />
+        <initial-values>
+          <property name="text" value="CheckBox" />
+        </initial-values>
+      </item>
+      <item class="javax.swing.JLabel" icon="/com/intellij/uiDesigner/icons/label.svg" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="0" anchor="8" fill="0" />
+        <initial-values>
+          <property name="text" value="Label" />
+        </initial-values>
+      </item>
+      <item class="javax.swing.JTextField" icon="/com/intellij/uiDesigner/icons/textField.svg" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="0" hsize-policy="6" anchor="8" fill="1">
+          <preferred-size width="150" height="-1" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JPasswordField" icon="/com/intellij/uiDesigner/icons/passwordField.svg" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="0" hsize-policy="6" anchor="8" fill="1">
+          <preferred-size width="150" height="-1" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JFormattedTextField" icon="/com/intellij/uiDesigner/icons/formattedTextField.svg" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="0" hsize-policy="6" anchor="8" fill="1">
+          <preferred-size width="150" height="-1" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JTextArea" icon="/com/intellij/uiDesigner/icons/textArea.svg" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3">
+          <preferred-size width="150" height="50" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JTextPane" icon="/com/intellij/uiDesigner/icons/textPane.svg" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3">
+          <preferred-size width="150" height="50" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JEditorPane" icon="/com/intellij/uiDesigner/icons/editorPane.svg" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3">
+          <preferred-size width="150" height="50" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JComboBox" icon="/com/intellij/uiDesigner/icons/comboBox.svg" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="0" hsize-policy="2" anchor="8" fill="1" />
+      </item>
+      <item class="javax.swing.JTable" icon="/com/intellij/uiDesigner/icons/table.svg" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3">
+          <preferred-size width="150" height="50" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JList" icon="/com/intellij/uiDesigner/icons/list.svg" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="6" hsize-policy="2" anchor="0" fill="3">
+          <preferred-size width="150" height="50" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JTree" icon="/com/intellij/uiDesigner/icons/tree.svg" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3">
+          <preferred-size width="150" height="50" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JTabbedPane" icon="/com/intellij/uiDesigner/icons/tabbedPane.svg" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="3" hsize-policy="3" anchor="0" fill="3">
+          <preferred-size width="200" height="200" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JSplitPane" icon="/com/intellij/uiDesigner/icons/splitPane.svg" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="3" hsize-policy="3" anchor="0" fill="3">
+          <preferred-size width="200" height="200" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JSpinner" icon="/com/intellij/uiDesigner/icons/spinner.svg" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="0" hsize-policy="6" anchor="8" fill="1" />
+      </item>
+      <item class="javax.swing.JSlider" icon="/com/intellij/uiDesigner/icons/slider.svg" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="6" anchor="8" fill="1" />
+      </item>
+      <item class="javax.swing.JSeparator" icon="/com/intellij/uiDesigner/icons/separator.svg" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3" />
+      </item>
+      <item class="javax.swing.JProgressBar" icon="/com/intellij/uiDesigner/icons/progressbar.svg" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="6" anchor="0" fill="1" />
+      </item>
+      <item class="javax.swing.JToolBar" icon="/com/intellij/uiDesigner/icons/toolbar.svg" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="6" anchor="0" fill="1">
+          <preferred-size width="-1" height="20" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JToolBar$Separator" icon="/com/intellij/uiDesigner/icons/toolbarSeparator.svg" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="0" anchor="0" fill="1" />
+      </item>
+      <item class="javax.swing.JScrollBar" icon="/com/intellij/uiDesigner/icons/scrollbar.svg" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="6" hsize-policy="0" anchor="0" fill="2" />
+      </item>
+    </group>
+  </component>
+</project>
\ No newline at end of file
Index: bpro00/.gitignore
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/bpro00/.gitignore b/bpro00/.gitignore
new file mode 100644
--- /dev/null	(revision 74a8b684730665ca64dd7cf129c1f96483c96c29)
+++ b/bpro00/.gitignore	(revision 74a8b684730665ca64dd7cf129c1f96483c96c29)
@@ -0,0 +1,33 @@
+HELP.md
+target/
+!.mvn/wrapper/maven-wrapper.jar
+!**/src/main/**/target/
+!**/src/test/**/target/
+
+### STS ###
+.apt_generated
+.classpath
+.factorypath
+.project
+.settings
+.springBeans
+.sts4-cache
+
+### IntelliJ IDEA ###
+.idea
+*.iws
+*.iml
+*.ipr
+
+### NetBeans ###
+/nbproject/private/
+/nbbuild/
+/dist/
+/nbdist/
+/.nb-gradle/
+build/
+!**/src/main/**/build/
+!**/src/test/**/build/
+
+### VS Code ###
+.vscode/
Index: bpro00/.mvn/wrapper/maven-wrapper.properties
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>NATIVE_TO_ASCII_UTF-8
===================================================================
diff --git a/bpro00/.mvn/wrapper/maven-wrapper.properties b/bpro00/.mvn/wrapper/maven-wrapper.properties
new file mode 100644
--- /dev/null	(revision 74a8b684730665ca64dd7cf129c1f96483c96c29)
+++ b/bpro00/.mvn/wrapper/maven-wrapper.properties	(revision 74a8b684730665ca64dd7cf129c1f96483c96c29)
@@ -0,0 +1,2 @@
+distributionUrl=https://repo.maven.apache.org/maven2/org/apache/maven/apache-maven/3.9.5/apache-maven-3.9.5-bin.zip
+wrapperUrl=https://repo.maven.apache.org/maven2/org/apache/maven/wrapper/maven-wrapper/3.2.0/maven-wrapper-3.2.0.jar
Index: bpro00/mvnw
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/bpro00/mvnw b/bpro00/mvnw
new file mode 100644
--- /dev/null	(revision 74a8b684730665ca64dd7cf129c1f96483c96c29)
+++ b/bpro00/mvnw	(revision 74a8b684730665ca64dd7cf129c1f96483c96c29)
@@ -0,0 +1,308 @@
+#!/bin/sh
+# ----------------------------------------------------------------------------
+# Licensed to the Apache Software Foundation (ASF) under one
+# or more contributor license agreements.  See the NOTICE file
+# distributed with this work for additional information
+# regarding copyright ownership.  The ASF licenses this file
+# to you under the Apache License, Version 2.0 (the
+# "License"); you may not use this file except in compliance
+# with the License.  You may obtain a copy of the License at
+#
+#    https://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing,
+# software distributed under the License is distributed on an
+# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
+# KIND, either express or implied.  See the License for the
+# specific language governing permissions and limitations
+# under the License.
+# ----------------------------------------------------------------------------
+
+# ----------------------------------------------------------------------------
+# Apache Maven Wrapper startup batch script, version 3.2.0
+#
+# Required ENV vars:
+# ------------------
+#   JAVA_HOME - location of a JDK home dir
+#
+# Optional ENV vars
+# -----------------
+#   MAVEN_OPTS - parameters passed to the Java VM when running Maven
+#     e.g. to debug Maven itself, use
+#       set MAVEN_OPTS=-Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=8000
+#   MAVEN_SKIP_RC - flag to disable loading of mavenrc files
+# ----------------------------------------------------------------------------
+
+if [ -z "$MAVEN_SKIP_RC" ] ; then
+
+  if [ -f /usr/local/etc/mavenrc ] ; then
+    . /usr/local/etc/mavenrc
+  fi
+
+  if [ -f /etc/mavenrc ] ; then
+    . /etc/mavenrc
+  fi
+
+  if [ -f "$HOME/.mavenrc" ] ; then
+    . "$HOME/.mavenrc"
+  fi
+
+fi
+
+# OS specific support.  $var _must_ be set to either true or false.
+cygwin=false;
+darwin=false;
+mingw=false
+case "$(uname)" in
+  CYGWIN*) cygwin=true ;;
+  MINGW*) mingw=true;;
+  Darwin*) darwin=true
+    # Use /usr/libexec/java_home if available, otherwise fall back to /Library/Java/Home
+    # See https://developer.apple.com/library/mac/qa/qa1170/_index.html
+    if [ -z "$JAVA_HOME" ]; then
+      if [ -x "/usr/libexec/java_home" ]; then
+        JAVA_HOME="$(/usr/libexec/java_home)"; export JAVA_HOME
+      else
+        JAVA_HOME="/Library/Java/Home"; export JAVA_HOME
+      fi
+    fi
+    ;;
+esac
+
+if [ -z "$JAVA_HOME" ] ; then
+  if [ -r /etc/gentoo-release ] ; then
+    JAVA_HOME=$(java-config --jre-home)
+  fi
+fi
+
+# For Cygwin, ensure paths are in UNIX format before anything is touched
+if $cygwin ; then
+  [ -n "$JAVA_HOME" ] &&
+    JAVA_HOME=$(cygpath --unix "$JAVA_HOME")
+  [ -n "$CLASSPATH" ] &&
+    CLASSPATH=$(cygpath --path --unix "$CLASSPATH")
+fi
+
+# For Mingw, ensure paths are in UNIX format before anything is touched
+if $mingw ; then
+  [ -n "$JAVA_HOME" ] && [ -d "$JAVA_HOME" ] &&
+    JAVA_HOME="$(cd "$JAVA_HOME" || (echo "cannot cd into $JAVA_HOME."; exit 1); pwd)"
+fi
+
+if [ -z "$JAVA_HOME" ]; then
+  javaExecutable="$(which javac)"
+  if [ -n "$javaExecutable" ] && ! [ "$(expr "\"$javaExecutable\"" : '\([^ ]*\)')" = "no" ]; then
+    # readlink(1) is not available as standard on Solaris 10.
+    readLink=$(which readlink)
+    if [ ! "$(expr "$readLink" : '\([^ ]*\)')" = "no" ]; then
+      if $darwin ; then
+        javaHome="$(dirname "\"$javaExecutable\"")"
+        javaExecutable="$(cd "\"$javaHome\"" && pwd -P)/javac"
+      else
+        javaExecutable="$(readlink -f "\"$javaExecutable\"")"
+      fi
+      javaHome="$(dirname "\"$javaExecutable\"")"
+      javaHome=$(expr "$javaHome" : '\(.*\)/bin')
+      JAVA_HOME="$javaHome"
+      export JAVA_HOME
+    fi
+  fi
+fi
+
+if [ -z "$JAVACMD" ] ; then
+  if [ -n "$JAVA_HOME"  ] ; then
+    if [ -x "$JAVA_HOME/jre/sh/java" ] ; then
+      # IBM's JDK on AIX uses strange locations for the executables
+      JAVACMD="$JAVA_HOME/jre/sh/java"
+    else
+      JAVACMD="$JAVA_HOME/bin/java"
+    fi
+  else
+    JAVACMD="$(\unset -f command 2>/dev/null; \command -v java)"
+  fi
+fi
+
+if [ ! -x "$JAVACMD" ] ; then
+  echo "Error: JAVA_HOME is not defined correctly." >&2
+  echo "  We cannot execute $JAVACMD" >&2
+  exit 1
+fi
+
+if [ -z "$JAVA_HOME" ] ; then
+  echo "Warning: JAVA_HOME environment variable is not set."
+fi
+
+# traverses directory structure from process work directory to filesystem root
+# first directory with .mvn subdirectory is considered project base directory
+find_maven_basedir() {
+  if [ -z "$1" ]
+  then
+    echo "Path not specified to find_maven_basedir"
+    return 1
+  fi
+
+  basedir="$1"
+  wdir="$1"
+  while [ "$wdir" != '/' ] ; do
+    if [ -d "$wdir"/.mvn ] ; then
+      basedir=$wdir
+      break
+    fi
+    # workaround for JBEAP-8937 (on Solaris 10/Sparc)
+    if [ -d "${wdir}" ]; then
+      wdir=$(cd "$wdir/.." || exit 1; pwd)
+    fi
+    # end of workaround
+  done
+  printf '%s' "$(cd "$basedir" || exit 1; pwd)"
+}
+
+# concatenates all lines of a file
+concat_lines() {
+  if [ -f "$1" ]; then
+    # Remove \r in case we run on Windows within Git Bash
+    # and check out the repository with auto CRLF management
+    # enabled. Otherwise, we may read lines that are delimited with
+    # \r\n and produce $'-Xarg\r' rather than -Xarg due to word
+    # splitting rules.
+    tr -s '\r\n' ' ' < "$1"
+  fi
+}
+
+log() {
+  if [ "$MVNW_VERBOSE" = true ]; then
+    printf '%s\n' "$1"
+  fi
+}
+
+BASE_DIR=$(find_maven_basedir "$(dirname "$0")")
+if [ -z "$BASE_DIR" ]; then
+  exit 1;
+fi
+
+MAVEN_PROJECTBASEDIR=${MAVEN_BASEDIR:-"$BASE_DIR"}; export MAVEN_PROJECTBASEDIR
+log "$MAVEN_PROJECTBASEDIR"
+
+##########################################################################################
+# Extension to allow automatically downloading the maven-wrapper.jar from Maven-central
+# This allows using the maven wrapper in projects that prohibit checking in binary data.
+##########################################################################################
+wrapperJarPath="$MAVEN_PROJECTBASEDIR/.mvn/wrapper/maven-wrapper.jar"
+if [ -r "$wrapperJarPath" ]; then
+    log "Found $wrapperJarPath"
+else
+    log "Couldn't find $wrapperJarPath, downloading it ..."
+
+    if [ -n "$MVNW_REPOURL" ]; then
+      wrapperUrl="$MVNW_REPOURL/org/apache/maven/wrapper/maven-wrapper/3.2.0/maven-wrapper-3.2.0.jar"
+    else
+      wrapperUrl="https://repo.maven.apache.org/maven2/org/apache/maven/wrapper/maven-wrapper/3.2.0/maven-wrapper-3.2.0.jar"
+    fi
+    while IFS="=" read -r key value; do
+      # Remove '\r' from value to allow usage on windows as IFS does not consider '\r' as a separator ( considers space, tab, new line ('\n'), and custom '=' )
+      safeValue=$(echo "$value" | tr -d '\r')
+      case "$key" in (wrapperUrl) wrapperUrl="$safeValue"; break ;;
+      esac
+    done < "$MAVEN_PROJECTBASEDIR/.mvn/wrapper/maven-wrapper.properties"
+    log "Downloading from: $wrapperUrl"
+
+    if $cygwin; then
+      wrapperJarPath=$(cygpath --path --windows "$wrapperJarPath")
+    fi
+
+    if command -v wget > /dev/null; then
+        log "Found wget ... using wget"
+        [ "$MVNW_VERBOSE" = true ] && QUIET="" || QUIET="--quiet"
+        if [ -z "$MVNW_USERNAME" ] || [ -z "$MVNW_PASSWORD" ]; then
+            wget $QUIET "$wrapperUrl" -O "$wrapperJarPath" || rm -f "$wrapperJarPath"
+        else
+            wget $QUIET --http-user="$MVNW_USERNAME" --http-password="$MVNW_PASSWORD" "$wrapperUrl" -O "$wrapperJarPath" || rm -f "$wrapperJarPath"
+        fi
+    elif command -v curl > /dev/null; then
+        log "Found curl ... using curl"
+        [ "$MVNW_VERBOSE" = true ] && QUIET="" || QUIET="--silent"
+        if [ -z "$MVNW_USERNAME" ] || [ -z "$MVNW_PASSWORD" ]; then
+            curl $QUIET -o "$wrapperJarPath" "$wrapperUrl" -f -L || rm -f "$wrapperJarPath"
+        else
+            curl $QUIET --user "$MVNW_USERNAME:$MVNW_PASSWORD" -o "$wrapperJarPath" "$wrapperUrl" -f -L || rm -f "$wrapperJarPath"
+        fi
+    else
+        log "Falling back to using Java to download"
+        javaSource="$MAVEN_PROJECTBASEDIR/.mvn/wrapper/MavenWrapperDownloader.java"
+        javaClass="$MAVEN_PROJECTBASEDIR/.mvn/wrapper/MavenWrapperDownloader.class"
+        # For Cygwin, switch paths to Windows format before running javac
+        if $cygwin; then
+          javaSource=$(cygpath --path --windows "$javaSource")
+          javaClass=$(cygpath --path --windows "$javaClass")
+        fi
+        if [ -e "$javaSource" ]; then
+            if [ ! -e "$javaClass" ]; then
+                log " - Compiling MavenWrapperDownloader.java ..."
+                ("$JAVA_HOME/bin/javac" "$javaSource")
+            fi
+            if [ -e "$javaClass" ]; then
+                log " - Running MavenWrapperDownloader.java ..."
+                ("$JAVA_HOME/bin/java" -cp .mvn/wrapper MavenWrapperDownloader "$wrapperUrl" "$wrapperJarPath") || rm -f "$wrapperJarPath"
+            fi
+        fi
+    fi
+fi
+##########################################################################################
+# End of extension
+##########################################################################################
+
+# If specified, validate the SHA-256 sum of the Maven wrapper jar file
+wrapperSha256Sum=""
+while IFS="=" read -r key value; do
+  case "$key" in (wrapperSha256Sum) wrapperSha256Sum=$value; break ;;
+  esac
+done < "$MAVEN_PROJECTBASEDIR/.mvn/wrapper/maven-wrapper.properties"
+if [ -n "$wrapperSha256Sum" ]; then
+  wrapperSha256Result=false
+  if command -v sha256sum > /dev/null; then
+    if echo "$wrapperSha256Sum  $wrapperJarPath" | sha256sum -c > /dev/null 2>&1; then
+      wrapperSha256Result=true
+    fi
+  elif command -v shasum > /dev/null; then
+    if echo "$wrapperSha256Sum  $wrapperJarPath" | shasum -a 256 -c > /dev/null 2>&1; then
+      wrapperSha256Result=true
+    fi
+  else
+    echo "Checksum validation was requested but neither 'sha256sum' or 'shasum' are available."
+    echo "Please install either command, or disable validation by removing 'wrapperSha256Sum' from your maven-wrapper.properties."
+    exit 1
+  fi
+  if [ $wrapperSha256Result = false ]; then
+    echo "Error: Failed to validate Maven wrapper SHA-256, your Maven wrapper might be compromised." >&2
+    echo "Investigate or delete $wrapperJarPath to attempt a clean download." >&2
+    echo "If you updated your Maven version, you need to update the specified wrapperSha256Sum property." >&2
+    exit 1
+  fi
+fi
+
+MAVEN_OPTS="$(concat_lines "$MAVEN_PROJECTBASEDIR/.mvn/jvm.config") $MAVEN_OPTS"
+
+# For Cygwin, switch paths to Windows format before running java
+if $cygwin; then
+  [ -n "$JAVA_HOME" ] &&
+    JAVA_HOME=$(cygpath --path --windows "$JAVA_HOME")
+  [ -n "$CLASSPATH" ] &&
+    CLASSPATH=$(cygpath --path --windows "$CLASSPATH")
+  [ -n "$MAVEN_PROJECTBASEDIR" ] &&
+    MAVEN_PROJECTBASEDIR=$(cygpath --path --windows "$MAVEN_PROJECTBASEDIR")
+fi
+
+# Provide a "standardized" way to retrieve the CLI args that will
+# work with both Windows and non-Windows executions.
+MAVEN_CMD_LINE_ARGS="$MAVEN_CONFIG $*"
+export MAVEN_CMD_LINE_ARGS
+
+WRAPPER_LAUNCHER=org.apache.maven.wrapper.MavenWrapperMain
+
+# shellcheck disable=SC2086 # safe args
+exec "$JAVACMD" \
+  $MAVEN_OPTS \
+  $MAVEN_DEBUG_OPTS \
+  -classpath "$MAVEN_PROJECTBASEDIR/.mvn/wrapper/maven-wrapper.jar" \
+  "-Dmaven.multiModuleProjectDirectory=${MAVEN_PROJECTBASEDIR}" \
+  ${WRAPPER_LAUNCHER} $MAVEN_CONFIG "$@"
Index: bpro00/mvnw.cmd
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/bpro00/mvnw.cmd b/bpro00/mvnw.cmd
new file mode 100644
--- /dev/null	(revision 74a8b684730665ca64dd7cf129c1f96483c96c29)
+++ b/bpro00/mvnw.cmd	(revision 74a8b684730665ca64dd7cf129c1f96483c96c29)
@@ -0,0 +1,205 @@
+@REM ----------------------------------------------------------------------------
+@REM Licensed to the Apache Software Foundation (ASF) under one
+@REM or more contributor license agreements.  See the NOTICE file
+@REM distributed with this work for additional information
+@REM regarding copyright ownership.  The ASF licenses this file
+@REM to you under the Apache License, Version 2.0 (the
+@REM "License"); you may not use this file except in compliance
+@REM with the License.  You may obtain a copy of the License at
+@REM
+@REM    https://www.apache.org/licenses/LICENSE-2.0
+@REM
+@REM Unless required by applicable law or agreed to in writing,
+@REM software distributed under the License is distributed on an
+@REM "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
+@REM KIND, either express or implied.  See the License for the
+@REM specific language governing permissions and limitations
+@REM under the License.
+@REM ----------------------------------------------------------------------------
+
+@REM ----------------------------------------------------------------------------
+@REM Apache Maven Wrapper startup batch script, version 3.2.0
+@REM
+@REM Required ENV vars:
+@REM JAVA_HOME - location of a JDK home dir
+@REM
+@REM Optional ENV vars
+@REM MAVEN_BATCH_ECHO - set to 'on' to enable the echoing of the batch commands
+@REM MAVEN_BATCH_PAUSE - set to 'on' to wait for a keystroke before ending
+@REM MAVEN_OPTS - parameters passed to the Java VM when running Maven
+@REM     e.g. to debug Maven itself, use
+@REM set MAVEN_OPTS=-Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=8000
+@REM MAVEN_SKIP_RC - flag to disable loading of mavenrc files
+@REM ----------------------------------------------------------------------------
+
+@REM Begin all REM lines with '@' in case MAVEN_BATCH_ECHO is 'on'
+@echo off
+@REM set title of command window
+title %0
+@REM enable echoing by setting MAVEN_BATCH_ECHO to 'on'
+@if "%MAVEN_BATCH_ECHO%" == "on"  echo %MAVEN_BATCH_ECHO%
+
+@REM set %HOME% to equivalent of $HOME
+if "%HOME%" == "" (set "HOME=%HOMEDRIVE%%HOMEPATH%")
+
+@REM Execute a user defined script before this one
+if not "%MAVEN_SKIP_RC%" == "" goto skipRcPre
+@REM check for pre script, once with legacy .bat ending and once with .cmd ending
+if exist "%USERPROFILE%\mavenrc_pre.bat" call "%USERPROFILE%\mavenrc_pre.bat" %*
+if exist "%USERPROFILE%\mavenrc_pre.cmd" call "%USERPROFILE%\mavenrc_pre.cmd" %*
+:skipRcPre
+
+@setlocal
+
+set ERROR_CODE=0
+
+@REM To isolate internal variables from possible post scripts, we use another setlocal
+@setlocal
+
+@REM ==== START VALIDATION ====
+if not "%JAVA_HOME%" == "" goto OkJHome
+
+echo.
+echo Error: JAVA_HOME not found in your environment. >&2
+echo Please set the JAVA_HOME variable in your environment to match the >&2
+echo location of your Java installation. >&2
+echo.
+goto error
+
+:OkJHome
+if exist "%JAVA_HOME%\bin\java.exe" goto init
+
+echo.
+echo Error: JAVA_HOME is set to an invalid directory. >&2
+echo JAVA_HOME = "%JAVA_HOME%" >&2
+echo Please set the JAVA_HOME variable in your environment to match the >&2
+echo location of your Java installation. >&2
+echo.
+goto error
+
+@REM ==== END VALIDATION ====
+
+:init
+
+@REM Find the project base dir, i.e. the directory that contains the folder ".mvn".
+@REM Fallback to current working directory if not found.
+
+set MAVEN_PROJECTBASEDIR=%MAVEN_BASEDIR%
+IF NOT "%MAVEN_PROJECTBASEDIR%"=="" goto endDetectBaseDir
+
+set EXEC_DIR=%CD%
+set WDIR=%EXEC_DIR%
+:findBaseDir
+IF EXIST "%WDIR%"\.mvn goto baseDirFound
+cd ..
+IF "%WDIR%"=="%CD%" goto baseDirNotFound
+set WDIR=%CD%
+goto findBaseDir
+
+:baseDirFound
+set MAVEN_PROJECTBASEDIR=%WDIR%
+cd "%EXEC_DIR%"
+goto endDetectBaseDir
+
+:baseDirNotFound
+set MAVEN_PROJECTBASEDIR=%EXEC_DIR%
+cd "%EXEC_DIR%"
+
+:endDetectBaseDir
+
+IF NOT EXIST "%MAVEN_PROJECTBASEDIR%\.mvn\jvm.config" goto endReadAdditionalConfig
+
+@setlocal EnableExtensions EnableDelayedExpansion
+for /F "usebackq delims=" %%a in ("%MAVEN_PROJECTBASEDIR%\.mvn\jvm.config") do set JVM_CONFIG_MAVEN_PROPS=!JVM_CONFIG_MAVEN_PROPS! %%a
+@endlocal & set JVM_CONFIG_MAVEN_PROPS=%JVM_CONFIG_MAVEN_PROPS%
+
+:endReadAdditionalConfig
+
+SET MAVEN_JAVA_EXE="%JAVA_HOME%\bin\java.exe"
+set WRAPPER_JAR="%MAVEN_PROJECTBASEDIR%\.mvn\wrapper\maven-wrapper.jar"
+set WRAPPER_LAUNCHER=org.apache.maven.wrapper.MavenWrapperMain
+
+set WRAPPER_URL="https://repo.maven.apache.org/maven2/org/apache/maven/wrapper/maven-wrapper/3.2.0/maven-wrapper-3.2.0.jar"
+
+FOR /F "usebackq tokens=1,2 delims==" %%A IN ("%MAVEN_PROJECTBASEDIR%\.mvn\wrapper\maven-wrapper.properties") DO (
+    IF "%%A"=="wrapperUrl" SET WRAPPER_URL=%%B
+)
+
+@REM Extension to allow automatically downloading the maven-wrapper.jar from Maven-central
+@REM This allows using the maven wrapper in projects that prohibit checking in binary data.
+if exist %WRAPPER_JAR% (
+    if "%MVNW_VERBOSE%" == "true" (
+        echo Found %WRAPPER_JAR%
+    )
+) else (
+    if not "%MVNW_REPOURL%" == "" (
+        SET WRAPPER_URL="%MVNW_REPOURL%/org/apache/maven/wrapper/maven-wrapper/3.2.0/maven-wrapper-3.2.0.jar"
+    )
+    if "%MVNW_VERBOSE%" == "true" (
+        echo Couldn't find %WRAPPER_JAR%, downloading it ...
+        echo Downloading from: %WRAPPER_URL%
+    )
+
+    powershell -Command "&{"^
+		"$webclient = new-object System.Net.WebClient;"^
+		"if (-not ([string]::IsNullOrEmpty('%MVNW_USERNAME%') -and [string]::IsNullOrEmpty('%MVNW_PASSWORD%'))) {"^
+		"$webclient.Credentials = new-object System.Net.NetworkCredential('%MVNW_USERNAME%', '%MVNW_PASSWORD%');"^
+		"}"^
+		"[Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12; $webclient.DownloadFile('%WRAPPER_URL%', '%WRAPPER_JAR%')"^
+		"}"
+    if "%MVNW_VERBOSE%" == "true" (
+        echo Finished downloading %WRAPPER_JAR%
+    )
+)
+@REM End of extension
+
+@REM If specified, validate the SHA-256 sum of the Maven wrapper jar file
+SET WRAPPER_SHA_256_SUM=""
+FOR /F "usebackq tokens=1,2 delims==" %%A IN ("%MAVEN_PROJECTBASEDIR%\.mvn\wrapper\maven-wrapper.properties") DO (
+    IF "%%A"=="wrapperSha256Sum" SET WRAPPER_SHA_256_SUM=%%B
+)
+IF NOT %WRAPPER_SHA_256_SUM%=="" (
+    powershell -Command "&{"^
+       "$hash = (Get-FileHash \"%WRAPPER_JAR%\" -Algorithm SHA256).Hash.ToLower();"^
+       "If('%WRAPPER_SHA_256_SUM%' -ne $hash){"^
+       "  Write-Output 'Error: Failed to validate Maven wrapper SHA-256, your Maven wrapper might be compromised.';"^
+       "  Write-Output 'Investigate or delete %WRAPPER_JAR% to attempt a clean download.';"^
+       "  Write-Output 'If you updated your Maven version, you need to update the specified wrapperSha256Sum property.';"^
+       "  exit 1;"^
+       "}"^
+       "}"
+    if ERRORLEVEL 1 goto error
+)
+
+@REM Provide a "standardized" way to retrieve the CLI args that will
+@REM work with both Windows and non-Windows executions.
+set MAVEN_CMD_LINE_ARGS=%*
+
+%MAVEN_JAVA_EXE% ^
+  %JVM_CONFIG_MAVEN_PROPS% ^
+  %MAVEN_OPTS% ^
+  %MAVEN_DEBUG_OPTS% ^
+  -classpath %WRAPPER_JAR% ^
+  "-Dmaven.multiModuleProjectDirectory=%MAVEN_PROJECTBASEDIR%" ^
+  %WRAPPER_LAUNCHER% %MAVEN_CONFIG% %*
+if ERRORLEVEL 1 goto error
+goto end
+
+:error
+set ERROR_CODE=1
+
+:end
+@endlocal & set ERROR_CODE=%ERROR_CODE%
+
+if not "%MAVEN_SKIP_RC%"=="" goto skipRcPost
+@REM check for post script, once with legacy .bat ending and once with .cmd ending
+if exist "%USERPROFILE%\mavenrc_post.bat" call "%USERPROFILE%\mavenrc_post.bat"
+if exist "%USERPROFILE%\mavenrc_post.cmd" call "%USERPROFILE%\mavenrc_post.cmd"
+:skipRcPost
+
+@REM pause the script if MAVEN_BATCH_PAUSE is set to 'on'
+if "%MAVEN_BATCH_PAUSE%"=="on" pause
+
+if "%MAVEN_TERMINATE_CMD%"=="on" exit %ERROR_CODE%
+
+cmd /C exit /B %ERROR_CODE%
Index: bpro00/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/bpro00/pom.xml b/bpro00/pom.xml
new file mode 100644
--- /dev/null	(revision 74a8b684730665ca64dd7cf129c1f96483c96c29)
+++ b/bpro00/pom.xml	(revision 74a8b684730665ca64dd7cf129c1f96483c96c29)
@@ -0,0 +1,73 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
+	<modelVersion>4.0.0</modelVersion>
+	<parent>
+		<groupId>org.springframework.boot</groupId>
+		<artifactId>spring-boot-starter-parent</artifactId>
+		<version>2.7.15</version>
+		<relativePath/> <!-- lookup parent from repository -->
+	</parent>
+	<groupId>com.keduit</groupId>
+	<artifactId>bpro00</artifactId>
+	<version>0.0.1-SNAPSHOT</version>
+	<name>bpro00</name>
+	<description>Temp project for Spring Boot</description>
+	<properties>
+		<java.version>11</java.version>
+	</properties>
+	<dependencies>
+		<dependency>
+			<groupId>org.springframework.boot</groupId>
+			<artifactId>spring-boot-starter-data-jpa</artifactId>
+		</dependency>
+		<dependency>
+			<groupId>org.springframework.boot</groupId>
+			<artifactId>spring-boot-starter-thymeleaf</artifactId>
+		</dependency>
+		<dependency>
+			<groupId>org.springframework.boot</groupId>
+			<artifactId>spring-boot-starter-web</artifactId>
+		</dependency>
+
+		<dependency>
+			<groupId>org.springframework.boot</groupId>
+			<artifactId>spring-boot-devtools</artifactId>
+			<scope>runtime</scope>
+			<optional>true</optional>
+		</dependency>
+		<dependency>
+			<groupId>com.mysql</groupId>
+			<artifactId>mysql-connector-j</artifactId>
+			<scope>runtime</scope>
+		</dependency>
+		<dependency>
+			<groupId>org.projectlombok</groupId>
+			<artifactId>lombok</artifactId>
+			<optional>true</optional>
+		</dependency>
+		<dependency>
+			<groupId>org.springframework.boot</groupId>
+			<artifactId>spring-boot-starter-test</artifactId>
+			<scope>test</scope>
+		</dependency>
+	</dependencies>
+
+	<build>
+		<plugins>
+			<plugin>
+				<groupId>org.springframework.boot</groupId>
+				<artifactId>spring-boot-maven-plugin</artifactId>
+				<configuration>
+					<excludes>
+						<exclude>
+							<groupId>org.projectlombok</groupId>
+							<artifactId>lombok</artifactId>
+						</exclude>
+					</excludes>
+				</configuration>
+			</plugin>
+		</plugins>
+	</build>
+
+</project>
Index: bpro00/src/main/java/com/keduit/bpro00/Bpro00Application.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/bpro00/src/main/java/com/keduit/bpro00/Bpro00Application.java b/bpro00/src/main/java/com/keduit/bpro00/Bpro00Application.java
new file mode 100644
--- /dev/null	(revision 74a8b684730665ca64dd7cf129c1f96483c96c29)
+++ b/bpro00/src/main/java/com/keduit/bpro00/Bpro00Application.java	(revision 74a8b684730665ca64dd7cf129c1f96483c96c29)
@@ -0,0 +1,13 @@
+package com.keduit.bpro00;
+
+import org.springframework.boot.SpringApplication;
+import org.springframework.boot.autoconfigure.SpringBootApplication;
+
+@SpringBootApplication
+public class Bpro00Application {
+
+	public static void main(String[] args) {
+		SpringApplication.run(Bpro00Application.class, args);
+	}
+
+}
Index: bpro00/src/main/java/com/keduit/bpro00/controller/SampleController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/bpro00/src/main/java/com/keduit/bpro00/controller/SampleController.java b/bpro00/src/main/java/com/keduit/bpro00/controller/SampleController.java
new file mode 100644
--- /dev/null	(revision 74a8b684730665ca64dd7cf129c1f96483c96c29)
+++ b/bpro00/src/main/java/com/keduit/bpro00/controller/SampleController.java	(revision 74a8b684730665ca64dd7cf129c1f96483c96c29)
@@ -0,0 +1,13 @@
+package com.keduit.bpro00.controller;
+
+import org.springframework.web.bind.annotation.GetMapping;
+import org.springframework.web.bind.annotation.RestController;
+
+@RestController
+public class SampleController {
+
+  @GetMapping("/hello")
+  public String[] hello(){
+    return new String[]{"Hello", "World"};
+  }
+}
Index: bpro00/src/main/java/com/keduit/bpro00/entity/Memo.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/bpro00/src/main/java/com/keduit/bpro00/entity/Memo.java b/bpro00/src/main/java/com/keduit/bpro00/entity/Memo.java
new file mode 100644
--- /dev/null	(revision 74a8b684730665ca64dd7cf129c1f96483c96c29)
+++ b/bpro00/src/main/java/com/keduit/bpro00/entity/Memo.java	(revision 74a8b684730665ca64dd7cf129c1f96483c96c29)
@@ -0,0 +1,32 @@
+package com.keduit.bpro00.entity;
+
+import lombok.*;
+
+import javax.persistence.*;
+
+// 부트에선 엔티티가 곧 테이블 생성이다.
+@Entity  // VO임을 선언.
+@Table(name="t_memo") // 테이블 네임.
+@ToString
+@Getter
+@Builder // 다른 클레스에서 Memo 클래스를 초기화할 필요 없이 바로 필드 접근 가능.
+@AllArgsConstructor // 모든 필드를 파라미터로 쓰는 생성자 생성.
+@NoArgsConstructor // 디폴트 생성자 생성.
+public class Memo {
+
+  /* @Id : primary key
+  *  @GeneratedValue(strategy = GenerationType. : 키 생성 전략
+  *   IDENTITY : mysql, mariadb -> auto increment
+  *   SEQUENCE : oracle, h2 -> 시퀀스 테이블 이용
+  *   AUTO : JPA구현체(부트 Hibernate)가 생성 방식을 결정
+  * */
+
+  @Id // 프라이머리키 설정.
+  @GeneratedValue(strategy = GenerationType.IDENTITY) // 1씩 늘어나도록 인덱스 설정. 시퀀스.
+  private Long mno;
+
+  // nullable = false : 낫널 길이  기본값은 255
+  @Column(length = 200, nullable = false)
+  private String memoText;
+
+}
\ No newline at end of file
Index: bpro00/src/main/java/com/keduit/bpro00/repository/MemoRepository.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/bpro00/src/main/java/com/keduit/bpro00/repository/MemoRepository.java b/bpro00/src/main/java/com/keduit/bpro00/repository/MemoRepository.java
new file mode 100644
--- /dev/null	(revision 74a8b684730665ca64dd7cf129c1f96483c96c29)
+++ b/bpro00/src/main/java/com/keduit/bpro00/repository/MemoRepository.java	(revision 74a8b684730665ca64dd7cf129c1f96483c96c29)
@@ -0,0 +1,25 @@
+package com.keduit.bpro00.repository;
+
+import com.keduit.bpro00.entity.Memo;
+import org.springframework.data.domain.Page;
+import org.springframework.data.domain.Pageable;
+import org.springframework.data.jpa.repository.JpaRepository;
+
+import java.util.List;
+
+
+public interface MemoRepository extends JpaRepository<Memo, Long> {
+                                // 여기서 JpaRepository<Memo, Long> 의 타입은 엔티티 명, id 타입.
+
+        // jsp 함수 (문법) 사용의 예. 함수 명만 으로 쿼리문법의 기능을 가진다.
+    // 다만 복잡한 쿼리문은 짜기 불리하므로 그런 경우엔 직접 쿼리문을 짤 수도 있다.
+    // 이 jsp 문법을 잘 다루기 전에 sql 문법 자체를 먼저 잘 알아야 한다.
+
+    // 간단한 crud는 이미 만들어져 있지만 커스텀 db접근 할경우 아래처럼
+    // jsp 문법을 사용해 메서드 시그니처 생성.
+    List<Memo> findByMnoBetweenOrderByMnoDesc(Long from, Long to);
+
+    Page<Memo> findByMnoBetween(Long from, Long to, Pageable pageable);
+
+    void deleteMemoByMnoLessThan(Long num);
+}
Index: bpro00/src/main/resources/application.properties
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>NATIVE_TO_ASCII_UTF-8
===================================================================
diff --git a/bpro00/src/main/resources/application.properties b/bpro00/src/main/resources/application.properties
new file mode 100644
--- /dev/null	(revision 74a8b684730665ca64dd7cf129c1f96483c96c29)
+++ b/bpro00/src/main/resources/application.properties	(revision 74a8b684730665ca64dd7cf129c1f96483c96c29)
@@ -0,0 +1,20 @@
+spring.application.name=bpro00
+server.port=8181
+
+spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
+spring.datasource.url=jdbc:mysql://localhost:3306/sqldb
+spring.datasource.username=root
+spring.datasource.password=1234
+
+#실행되는 쿼리를 콘솔에 출력
+spring.jpa.properties.hibernate.show_sql=true
+
+#콘솔창에 출력되는 쿼리를 가독성이 좋게 포맷팅
+spring.jpa.properties.hibernate.format_sql=true
+
+#쿼리에 물음표로 출력되는 바인드 파라미터 출력
+logging.level.org.hibernate.type.descriptor.sql=trace
+
+#데이터베이스 초기화 전략  create 는 영속성x update 영속성 o
+spring.jpa.hibernate.ddl-auto=update
+spring.jpa.database-platform=org.hibernate.dialect.MySQL8Dialect
\ No newline at end of file
Index: bpro00/src/test/java/com/keduit/bpro00/repository/Bpro00ApplicationTests.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/bpro00/src/test/java/com/keduit/bpro00/repository/Bpro00ApplicationTests.java b/bpro00/src/test/java/com/keduit/bpro00/repository/Bpro00ApplicationTests.java
new file mode 100644
--- /dev/null	(revision 74a8b684730665ca64dd7cf129c1f96483c96c29)
+++ b/bpro00/src/test/java/com/keduit/bpro00/repository/Bpro00ApplicationTests.java	(revision 74a8b684730665ca64dd7cf129c1f96483c96c29)
@@ -0,0 +1,13 @@
+package com.keduit.bpro00.repository;
+
+import org.junit.jupiter.api.Test;
+import org.springframework.boot.test.context.SpringBootTest;
+
+@SpringBootTest
+class Bpro00ApplicationTests {
+
+	@Test
+	void contextLoads() {
+	}
+
+}
Index: bpro00/src/test/java/com/keduit/bpro00/repository/MemoRepositoryTests.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/bpro00/src/test/java/com/keduit/bpro00/repository/MemoRepositoryTests.java b/bpro00/src/test/java/com/keduit/bpro00/repository/MemoRepositoryTests.java
new file mode 100644
--- /dev/null	(revision 74a8b684730665ca64dd7cf129c1f96483c96c29)
+++ b/bpro00/src/test/java/com/keduit/bpro00/repository/MemoRepositoryTests.java	(revision 74a8b684730665ca64dd7cf129c1f96483c96c29)
@@ -0,0 +1,161 @@
+package com.keduit.bpro00.repository;
+
+
+import com.keduit.bpro00.entity.Memo;
+import org.junit.jupiter.api.Test;
+import org.springframework.beans.factory.annotation.Autowired;
+import org.springframework.boot.test.context.SpringBootTest;
+import org.springframework.data.domain.Page;
+import org.springframework.data.domain.PageRequest;
+import org.springframework.data.domain.Pageable;
+import org.springframework.data.domain.Sort;
+import org.springframework.test.annotation.Commit;
+
+import javax.transaction.Transactional;
+import java.beans.Transient;
+import java.util.List;
+import java.util.Optional;
+import java.util.logging.SocketHandler;
+import java.util.stream.IntStream;
+
+@SpringBootTest
+public class MemoRepositoryTests {
+
+    @Autowired // 인터페이스 주입 memoRepository 로 모든 함수 다룰 수 있음.
+            // 의존성 주입.
+    MemoRepository memoRepository;
+
+    @Test
+    public void testClass(){
+        System.out.println(memoRepository.getClass().getName());
+    }
+
+    @Test
+    public void testInsertDummies(){
+        IntStream.range(1, 10).forEach(i->{
+           Memo memo = Memo.builder().memoText("Sample..." ).build();
+           memoRepository.save(memo);
+
+        });
+    }
+
+    @Test
+    public void testSelect(){
+        Long mno = 99L;
+
+        // null 체크를 위한 optional , findById()가 optional을 return.
+        Optional<Memo> result = memoRepository.findById(mno);
+
+        System.out.println("--------------------------------");
+        if(result.isPresent()){ // optional 클레스 함수. 값이 존재한다면 꺼낼 수 있음
+            // 핵심은 null일 경우에도 행동을 정할 수 있고, 예외를 회피할 수 있음.
+            Memo memo = result.get();
+            System.out.println(memo);
+        }
+        System.out.println("-------------------------");
+    }
+
+    // 핵심 중 하나인 트렌젝션. 이것을 사용하면 함수 내 모든 작업들이 트렌젝션으로 묶임.
+    // 함수 내 작업 실행 중 하나라도 예외 발생 시 함수 자체가 롤백됨.
+    @Transactional
+    @Test
+    public void testSelect2(){
+        Long mno = 79L;
+
+        // lazy 방식으로 쿼리를 처리 : 실제 객체가 필요한 순간까지 sql을 실행하지 않음.
+        // findById(mno); 와 getOne() 의 차이이다.
+        Memo memo = memoRepository.getOne(mno);
+
+        System.out.println("-----------------------");
+        System.out.println(memo);
+        System.out.println("--------------------");
+    }
+
+
+    // wlfa
+    @Test
+    public void testUpdate(){
+        // builder(). 필드에 접근하겠다. 그래서 mno값을 다룰 수 있음.
+        // memoRepository 를 사용 전 빌더 부분은 어떨때 사용하는지? 질문.
+        Memo memo = Memo.builder().mno(99L).memoText("update test....").build();
+
+        System.out.println("ddddddddddddddddd"+memoRepository.save(memo));
+
+    }
+
+    @Test
+    public  void delete(){
+        memoRepository.deleteById(89l);
+
+    }
+
+    @Test
+    public void testPageDefault(){
+        Pageable pageable = PageRequest.of(9,10); // 1page 10개
+        Page<Memo> result = memoRepository.findAll(pageable);
+        System.out.println(result);
+        System.out.println("----------------------------");
+        System.out.println("total pages: "+result.getTotalPages());
+        System.out.println("total count " + result.getTotalElements());
+        System.out.println("현재 페이지 번호 : " + result.getNumber());
+        System.out.println("페이지 당 데이터 갯수 : " + result.getSize());
+        System.out.println("다음페이지의 존재 여부 : " + result.hasNext());
+        System.out.println("시작페이지 여부 : " + result.isFirst() );
+        System.out.println("마지막 페이지 여부 : " + result.isLast() );
+        System.out.println("현제 페이지의 데이터 갯수 : " + result.getNumberOfElements());
+        System.out.println("getContent"+result.getContent());
+
+    }
+
+    @Test
+    public void testSort(){
+        Sort sort1 = Sort.by("mno").descending();
+        Sort sort2 = Sort.by("memoText").ascending();
+        Sort sortAll = sort1.and(sort2);
+        // 질문. mno 값이 같을땐 sort2 방식으로 정렬한다는것?
+
+//        Pageable pageable = PageRequest.of(0,10,sort1);
+        Pageable pageable = PageRequest.of(0,10,sortAll);
+        Page<Memo> result = memoRepository.findAll(pageable);
+
+        result.get().forEach(memo -> {
+            System.out.println(memo);
+        });
+    }
+
+    @Test
+    public void testQueryMethods(){
+        // between 이므로 2개의 파라미터 가짐. findBy는 접두사
+        // 두 Mno 사이의 값을 찾겠다. 단. OrderBy + 정렬법. 여기선 Mno를 내림차 정렬.
+        List<Memo> List = memoRepository.findByMnoBetweenOrderByMnoDesc(70L, 80L);
+
+        for (Memo memo : List){
+            System.out.println(memo);
+        }
+    }
+
+    @Test
+    public void testQueryMethodWithPagable(){
+
+        Pageable pageable = PageRequest.of(0,10,Sort.by("mno").descending());
+
+        // 이런식으로 3가지 파라미터를 받아 원하는 정렬법, 혹은 Pageable 를 사용할 수 있다.
+        Page<Memo> result = memoRepository.findByMnoBetween(10L,50L,pageable);
+
+        result.get().forEach(memo -> System.out.println(memo));
+
+        // 10부터 50까지이나 pagealbe 이며 디센딩이기에 마지막 페이지인 4페이지의 10개를 가져온다.
+        // 결과값음 41뷰터 50까지만 가져옴.
+    }
+
+
+    @Test
+    @Transactional // 삭제이므로 트렌젝셔널 필요.
+    @Commit // 커밋이 없는 디폴트 상태는 삭제이미로 안전을 위한 커밋. 롤백기능이 있다. 그리고 커밋이 없을 시 적용되지않는다?
+    public void testDeleteQueryMethods(){
+
+        // memo 엔티티에서 10번 보다 작은애들은 다 삭제하겠다.
+        memoRepository.deleteMemoByMnoLessThan(10L);
+
+    }
+}
Index: shop/.idea/compiler.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/shop/.idea/compiler.xml b/shop/.idea/compiler.xml
new file mode 100644
--- /dev/null	(revision 74a8b684730665ca64dd7cf129c1f96483c96c29)
+++ b/shop/.idea/compiler.xml	(revision 74a8b684730665ca64dd7cf129c1f96483c96c29)
@@ -0,0 +1,18 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="CompilerConfiguration">
+    <annotationProcessing>
+      <profile name="Maven default annotation processors profile" enabled="true">
+        <sourceOutputDir name="target/generated-sources/annotations" />
+        <sourceTestOutputDir name="target/generated-test-sources/test-annotations" />
+        <outputRelativeToContentRoot value="true" />
+        <module name="shop" />
+      </profile>
+    </annotationProcessing>
+  </component>
+  <component name="JavacSettings">
+    <option name="ADDITIONAL_OPTIONS_OVERRIDE">
+      <module name="shop" options="-parameters" />
+    </option>
+  </component>
+</project>
\ No newline at end of file
Index: shop/.idea/encodings.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/shop/.idea/encodings.xml b/shop/.idea/encodings.xml
new file mode 100644
--- /dev/null	(revision 74a8b684730665ca64dd7cf129c1f96483c96c29)
+++ b/shop/.idea/encodings.xml	(revision 74a8b684730665ca64dd7cf129c1f96483c96c29)
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="Encoding">
+    <file url="file://$PROJECT_DIR$/shop/src/main/java" charset="UTF-8" />
+  </component>
+</project>
\ No newline at end of file
Index: shop/.idea/jarRepositories.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/shop/.idea/jarRepositories.xml b/shop/.idea/jarRepositories.xml
new file mode 100644
--- /dev/null	(revision 74a8b684730665ca64dd7cf129c1f96483c96c29)
+++ b/shop/.idea/jarRepositories.xml	(revision 74a8b684730665ca64dd7cf129c1f96483c96c29)
@@ -0,0 +1,20 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="RemoteRepositoriesConfiguration">
+    <remote-repository>
+      <option name="id" value="central" />
+      <option name="name" value="Central Repository" />
+      <option name="url" value="https://repo.maven.apache.org/maven2" />
+    </remote-repository>
+    <remote-repository>
+      <option name="id" value="central" />
+      <option name="name" value="Maven Central repository" />
+      <option name="url" value="https://repo1.maven.org/maven2" />
+    </remote-repository>
+    <remote-repository>
+      <option name="id" value="jboss.community" />
+      <option name="name" value="JBoss Community repository" />
+      <option name="url" value="https://repository.jboss.org/nexus/content/repositories/public/" />
+    </remote-repository>
+  </component>
+</project>
\ No newline at end of file
Index: shop/.idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/shop/.idea/misc.xml b/shop/.idea/misc.xml
new file mode 100644
--- /dev/null	(revision 74a8b684730665ca64dd7cf129c1f96483c96c29)
+++ b/shop/.idea/misc.xml	(revision 74a8b684730665ca64dd7cf129c1f96483c96c29)
@@ -0,0 +1,14 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="ExternalStorageConfigurationManager" enabled="true" />
+  <component name="MavenProjectsManager">
+    <option name="originalFiles">
+      <list>
+        <option value="$PROJECT_DIR$/shop/pom.xml" />
+      </list>
+    </option>
+  </component>
+  <component name="ProjectRootManager" version="2" languageLevel="JDK_11" default="true" project-jdk-name="11" project-jdk-type="JavaSDK">
+    <output url="file://$PROJECT_DIR$/out" />
+  </component>
+</project>
\ No newline at end of file
Index: shop/.idea/modules.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/shop/.idea/modules.xml b/shop/.idea/modules.xml
new file mode 100644
--- /dev/null	(revision 74a8b684730665ca64dd7cf129c1f96483c96c29)
+++ b/shop/.idea/modules.xml	(revision 74a8b684730665ca64dd7cf129c1f96483c96c29)
@@ -0,0 +1,8 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="ProjectModuleManager">
+    <modules>
+      <module fileurl="file://$PROJECT_DIR$/.idea/shop.iml" filepath="$PROJECT_DIR$/.idea/shop.iml" />
+    </modules>
+  </component>
+</project>
\ No newline at end of file
Index: shop/.idea/shop.iml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/shop/.idea/shop.iml b/shop/.idea/shop.iml
new file mode 100644
--- /dev/null	(revision 74a8b684730665ca64dd7cf129c1f96483c96c29)
+++ b/shop/.idea/shop.iml	(revision 74a8b684730665ca64dd7cf129c1f96483c96c29)
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<module version="4">
+  <component name="AdditionalModuleElements">
+    <content url="file://$MODULE_DIR$" />
+  </component>
+</module>
\ No newline at end of file
Index: shop/.idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/shop/.idea/workspace.xml b/shop/.idea/workspace.xml
new file mode 100644
--- /dev/null	(revision 74a8b684730665ca64dd7cf129c1f96483c96c29)
+++ b/shop/.idea/workspace.xml	(revision 74a8b684730665ca64dd7cf129c1f96483c96c29)
@@ -0,0 +1,68 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="AutoImportSettings">
+    <option name="autoReloadType" value="SELECTIVE" />
+  </component>
+  <component name="ChangeListManager">
+    <list default="true" id="c1bd49cf-711d-4539-ad2c-5250853de5ec" name="Changes" comment="" />
+    <option name="SHOW_DIALOG" value="false" />
+    <option name="HIGHLIGHT_CONFLICTS" value="true" />
+    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
+    <option name="LAST_RESOLUTION" value="IGNORE" />
+  </component>
+  <component name="MarkdownSettingsMigration">
+    <option name="stateVersion" value="1" />
+  </component>
+  <component name="MavenImportPreferences">
+    <option name="importingSettings">
+      <MavenImportingSettings>
+        <option name="jdkForImporter" value="#JAVA_HOME" />
+        <option name="workspaceImportForciblyTurnedOn" value="true" />
+      </MavenImportingSettings>
+    </option>
+  </component>
+  <component name="MavenRunner">
+    <option name="jreName" value="#JAVA_HOME" />
+  </component>
+  <component name="ProjectColorInfo"><![CDATA[{
+  "associatedIndex": 3
+}]]></component>
+  <component name="ProjectId" id="2ebxO8F8dUk25vXrViY33JSq1Zu" />
+  <component name="ProjectViewState">
+    <option name="hideEmptyMiddlePackages" value="true" />
+    <option name="showLibraryContents" value="true" />
+  </component>
+  <component name="PropertiesComponent"><![CDATA[{
+  "keyToString": {
+    "RunOnceActivity.OpenProjectViewOnStart": "true",
+    "RunOnceActivity.ShowReadmeOnStart": "true",
+    "ignore.virus.scanning.warn.message": "true",
+    "kotlin-language-version-configured": "true",
+    "last_opened_file_path": "F:/myBoot/abc",
+    "project.structure.last.edited": "Problems",
+    "project.structure.proportion": "0.0",
+    "project.structure.side.proportion": "0.2",
+    "settings.editor.selected.configurable": "preferences.pluginManager"
+  }
+}]]></component>
+  <component name="SharedIndexes">
+    <attachedChunks>
+      <set>
+        <option value="jdk-11.0.21-corretto-11.0.21-4caba194b151-9f4ef98c" />
+        <option value="jdk-11.0.22-corretto-11.0.22-4caba194b151-868cef46" />
+        <option value="jdk-17.0.10-corretto-17.0.10-4caba194b151-5cd809f4" />
+      </set>
+    </attachedChunks>
+  </component>
+  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
+  <component name="TaskManager">
+    <task active="true" id="Default" summary="Default task">
+      <changelist id="c1bd49cf-711d-4539-ad2c-5250853de5ec" name="Changes" comment="" />
+      <created>1712187043458</created>
+      <option name="number" value="Default" />
+      <option name="presentableId" value="Default" />
+      <updated>1712187043458</updated>
+    </task>
+    <servers />
+  </component>
+</project>
\ No newline at end of file
Index: shop/shop/.gitignore
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/shop/shop/.gitignore b/shop/shop/.gitignore
new file mode 100644
--- /dev/null	(revision 74a8b684730665ca64dd7cf129c1f96483c96c29)
+++ b/shop/shop/.gitignore	(revision 74a8b684730665ca64dd7cf129c1f96483c96c29)
@@ -0,0 +1,33 @@
+HELP.md
+target/
+!.mvn/wrapper/maven-wrapper.jar
+!**/src/main/**/target/
+!**/src/test/**/target/
+
+### STS ###
+.apt_generated
+.classpath
+.factorypath
+.project
+.settings
+.springBeans
+.sts4-cache
+
+### IntelliJ IDEA ###
+.idea
+*.iws
+*.iml
+*.ipr
+
+### NetBeans ###
+/nbproject/private/
+/nbbuild/
+/dist/
+/nbdist/
+/.nb-gradle/
+build/
+!**/src/main/**/build/
+!**/src/test/**/build/
+
+### VS Code ###
+.vscode/
Index: shop/shop/.mvn/wrapper/maven-wrapper.properties
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>NATIVE_TO_ASCII_UTF-8
===================================================================
diff --git a/shop/shop/.mvn/wrapper/maven-wrapper.properties b/shop/shop/.mvn/wrapper/maven-wrapper.properties
new file mode 100644
--- /dev/null	(revision 74a8b684730665ca64dd7cf129c1f96483c96c29)
+++ b/shop/shop/.mvn/wrapper/maven-wrapper.properties	(revision 74a8b684730665ca64dd7cf129c1f96483c96c29)
@@ -0,0 +1,2 @@
+distributionUrl=https://repo.maven.apache.org/maven2/org/apache/maven/apache-maven/3.9.5/apache-maven-3.9.5-bin.zip
+wrapperUrl=https://repo.maven.apache.org/maven2/org/apache/maven/wrapper/maven-wrapper/3.2.0/maven-wrapper-3.2.0.jar
Index: shop/shop/mvnw
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/shop/shop/mvnw b/shop/shop/mvnw
new file mode 100644
--- /dev/null	(revision 74a8b684730665ca64dd7cf129c1f96483c96c29)
+++ b/shop/shop/mvnw	(revision 74a8b684730665ca64dd7cf129c1f96483c96c29)
@@ -0,0 +1,308 @@
+#!/bin/sh
+# ----------------------------------------------------------------------------
+# Licensed to the Apache Software Foundation (ASF) under one
+# or more contributor license agreements.  See the NOTICE file
+# distributed with this work for additional information
+# regarding copyright ownership.  The ASF licenses this file
+# to you under the Apache License, Version 2.0 (the
+# "License"); you may not use this file except in compliance
+# with the License.  You may obtain a copy of the License at
+#
+#    https://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing,
+# software distributed under the License is distributed on an
+# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
+# KIND, either express or implied.  See the License for the
+# specific language governing permissions and limitations
+# under the License.
+# ----------------------------------------------------------------------------
+
+# ----------------------------------------------------------------------------
+# Apache Maven Wrapper startup batch script, version 3.2.0
+#
+# Required ENV vars:
+# ------------------
+#   JAVA_HOME - location of a JDK home dir
+#
+# Optional ENV vars
+# -----------------
+#   MAVEN_OPTS - parameters passed to the Java VM when running Maven
+#     e.g. to debug Maven itself, use
+#       set MAVEN_OPTS=-Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=8000
+#   MAVEN_SKIP_RC - flag to disable loading of mavenrc files
+# ----------------------------------------------------------------------------
+
+if [ -z "$MAVEN_SKIP_RC" ] ; then
+
+  if [ -f /usr/local/etc/mavenrc ] ; then
+    . /usr/local/etc/mavenrc
+  fi
+
+  if [ -f /etc/mavenrc ] ; then
+    . /etc/mavenrc
+  fi
+
+  if [ -f "$HOME/.mavenrc" ] ; then
+    . "$HOME/.mavenrc"
+  fi
+
+fi
+
+# OS specific support.  $var _must_ be set to either true or false.
+cygwin=false;
+darwin=false;
+mingw=false
+case "$(uname)" in
+  CYGWIN*) cygwin=true ;;
+  MINGW*) mingw=true;;
+  Darwin*) darwin=true
+    # Use /usr/libexec/java_home if available, otherwise fall back to /Library/Java/Home
+    # See https://developer.apple.com/library/mac/qa/qa1170/_index.html
+    if [ -z "$JAVA_HOME" ]; then
+      if [ -x "/usr/libexec/java_home" ]; then
+        JAVA_HOME="$(/usr/libexec/java_home)"; export JAVA_HOME
+      else
+        JAVA_HOME="/Library/Java/Home"; export JAVA_HOME
+      fi
+    fi
+    ;;
+esac
+
+if [ -z "$JAVA_HOME" ] ; then
+  if [ -r /etc/gentoo-release ] ; then
+    JAVA_HOME=$(java-config --jre-home)
+  fi
+fi
+
+# For Cygwin, ensure paths are in UNIX format before anything is touched
+if $cygwin ; then
+  [ -n "$JAVA_HOME" ] &&
+    JAVA_HOME=$(cygpath --unix "$JAVA_HOME")
+  [ -n "$CLASSPATH" ] &&
+    CLASSPATH=$(cygpath --path --unix "$CLASSPATH")
+fi
+
+# For Mingw, ensure paths are in UNIX format before anything is touched
+if $mingw ; then
+  [ -n "$JAVA_HOME" ] && [ -d "$JAVA_HOME" ] &&
+    JAVA_HOME="$(cd "$JAVA_HOME" || (echo "cannot cd into $JAVA_HOME."; exit 1); pwd)"
+fi
+
+if [ -z "$JAVA_HOME" ]; then
+  javaExecutable="$(which javac)"
+  if [ -n "$javaExecutable" ] && ! [ "$(expr "\"$javaExecutable\"" : '\([^ ]*\)')" = "no" ]; then
+    # readlink(1) is not available as standard on Solaris 10.
+    readLink=$(which readlink)
+    if [ ! "$(expr "$readLink" : '\([^ ]*\)')" = "no" ]; then
+      if $darwin ; then
+        javaHome="$(dirname "\"$javaExecutable\"")"
+        javaExecutable="$(cd "\"$javaHome\"" && pwd -P)/javac"
+      else
+        javaExecutable="$(readlink -f "\"$javaExecutable\"")"
+      fi
+      javaHome="$(dirname "\"$javaExecutable\"")"
+      javaHome=$(expr "$javaHome" : '\(.*\)/bin')
+      JAVA_HOME="$javaHome"
+      export JAVA_HOME
+    fi
+  fi
+fi
+
+if [ -z "$JAVACMD" ] ; then
+  if [ -n "$JAVA_HOME"  ] ; then
+    if [ -x "$JAVA_HOME/jre/sh/java" ] ; then
+      # IBM's JDK on AIX uses strange locations for the executables
+      JAVACMD="$JAVA_HOME/jre/sh/java"
+    else
+      JAVACMD="$JAVA_HOME/bin/java"
+    fi
+  else
+    JAVACMD="$(\unset -f command 2>/dev/null; \command -v java)"
+  fi
+fi
+
+if [ ! -x "$JAVACMD" ] ; then
+  echo "Error: JAVA_HOME is not defined correctly." >&2
+  echo "  We cannot execute $JAVACMD" >&2
+  exit 1
+fi
+
+if [ -z "$JAVA_HOME" ] ; then
+  echo "Warning: JAVA_HOME environment variable is not set."
+fi
+
+# traverses directory structure from process work directory to filesystem root
+# first directory with .mvn subdirectory is considered project base directory
+find_maven_basedir() {
+  if [ -z "$1" ]
+  then
+    echo "Path not specified to find_maven_basedir"
+    return 1
+  fi
+
+  basedir="$1"
+  wdir="$1"
+  while [ "$wdir" != '/' ] ; do
+    if [ -d "$wdir"/.mvn ] ; then
+      basedir=$wdir
+      break
+    fi
+    # workaround for JBEAP-8937 (on Solaris 10/Sparc)
+    if [ -d "${wdir}" ]; then
+      wdir=$(cd "$wdir/.." || exit 1; pwd)
+    fi
+    # end of workaround
+  done
+  printf '%s' "$(cd "$basedir" || exit 1; pwd)"
+}
+
+# concatenates all lines of a file
+concat_lines() {
+  if [ -f "$1" ]; then
+    # Remove \r in case we run on Windows within Git Bash
+    # and check out the repository with auto CRLF management
+    # enabled. Otherwise, we may read lines that are delimited with
+    # \r\n and produce $'-Xarg\r' rather than -Xarg due to word
+    # splitting rules.
+    tr -s '\r\n' ' ' < "$1"
+  fi
+}
+
+log() {
+  if [ "$MVNW_VERBOSE" = true ]; then
+    printf '%s\n' "$1"
+  fi
+}
+
+BASE_DIR=$(find_maven_basedir "$(dirname "$0")")
+if [ -z "$BASE_DIR" ]; then
+  exit 1;
+fi
+
+MAVEN_PROJECTBASEDIR=${MAVEN_BASEDIR:-"$BASE_DIR"}; export MAVEN_PROJECTBASEDIR
+log "$MAVEN_PROJECTBASEDIR"
+
+##########################################################################################
+# Extension to allow automatically downloading the maven-wrapper.jar from Maven-central
+# This allows using the maven wrapper in projects that prohibit checking in binary data.
+##########################################################################################
+wrapperJarPath="$MAVEN_PROJECTBASEDIR/.mvn/wrapper/maven-wrapper.jar"
+if [ -r "$wrapperJarPath" ]; then
+    log "Found $wrapperJarPath"
+else
+    log "Couldn't find $wrapperJarPath, downloading it ..."
+
+    if [ -n "$MVNW_REPOURL" ]; then
+      wrapperUrl="$MVNW_REPOURL/org/apache/maven/wrapper/maven-wrapper/3.2.0/maven-wrapper-3.2.0.jar"
+    else
+      wrapperUrl="https://repo.maven.apache.org/maven2/org/apache/maven/wrapper/maven-wrapper/3.2.0/maven-wrapper-3.2.0.jar"
+    fi
+    while IFS="=" read -r key value; do
+      # Remove '\r' from value to allow usage on windows as IFS does not consider '\r' as a separator ( considers space, tab, new line ('\n'), and custom '=' )
+      safeValue=$(echo "$value" | tr -d '\r')
+      case "$key" in (wrapperUrl) wrapperUrl="$safeValue"; break ;;
+      esac
+    done < "$MAVEN_PROJECTBASEDIR/.mvn/wrapper/maven-wrapper.properties"
+    log "Downloading from: $wrapperUrl"
+
+    if $cygwin; then
+      wrapperJarPath=$(cygpath --path --windows "$wrapperJarPath")
+    fi
+
+    if command -v wget > /dev/null; then
+        log "Found wget ... using wget"
+        [ "$MVNW_VERBOSE" = true ] && QUIET="" || QUIET="--quiet"
+        if [ -z "$MVNW_USERNAME" ] || [ -z "$MVNW_PASSWORD" ]; then
+            wget $QUIET "$wrapperUrl" -O "$wrapperJarPath" || rm -f "$wrapperJarPath"
+        else
+            wget $QUIET --http-user="$MVNW_USERNAME" --http-password="$MVNW_PASSWORD" "$wrapperUrl" -O "$wrapperJarPath" || rm -f "$wrapperJarPath"
+        fi
+    elif command -v curl > /dev/null; then
+        log "Found curl ... using curl"
+        [ "$MVNW_VERBOSE" = true ] && QUIET="" || QUIET="--silent"
+        if [ -z "$MVNW_USERNAME" ] || [ -z "$MVNW_PASSWORD" ]; then
+            curl $QUIET -o "$wrapperJarPath" "$wrapperUrl" -f -L || rm -f "$wrapperJarPath"
+        else
+            curl $QUIET --user "$MVNW_USERNAME:$MVNW_PASSWORD" -o "$wrapperJarPath" "$wrapperUrl" -f -L || rm -f "$wrapperJarPath"
+        fi
+    else
+        log "Falling back to using Java to download"
+        javaSource="$MAVEN_PROJECTBASEDIR/.mvn/wrapper/MavenWrapperDownloader.java"
+        javaClass="$MAVEN_PROJECTBASEDIR/.mvn/wrapper/MavenWrapperDownloader.class"
+        # For Cygwin, switch paths to Windows format before running javac
+        if $cygwin; then
+          javaSource=$(cygpath --path --windows "$javaSource")
+          javaClass=$(cygpath --path --windows "$javaClass")
+        fi
+        if [ -e "$javaSource" ]; then
+            if [ ! -e "$javaClass" ]; then
+                log " - Compiling MavenWrapperDownloader.java ..."
+                ("$JAVA_HOME/bin/javac" "$javaSource")
+            fi
+            if [ -e "$javaClass" ]; then
+                log " - Running MavenWrapperDownloader.java ..."
+                ("$JAVA_HOME/bin/java" -cp .mvn/wrapper MavenWrapperDownloader "$wrapperUrl" "$wrapperJarPath") || rm -f "$wrapperJarPath"
+            fi
+        fi
+    fi
+fi
+##########################################################################################
+# End of extension
+##########################################################################################
+
+# If specified, validate the SHA-256 sum of the Maven wrapper jar file
+wrapperSha256Sum=""
+while IFS="=" read -r key value; do
+  case "$key" in (wrapperSha256Sum) wrapperSha256Sum=$value; break ;;
+  esac
+done < "$MAVEN_PROJECTBASEDIR/.mvn/wrapper/maven-wrapper.properties"
+if [ -n "$wrapperSha256Sum" ]; then
+  wrapperSha256Result=false
+  if command -v sha256sum > /dev/null; then
+    if echo "$wrapperSha256Sum  $wrapperJarPath" | sha256sum -c > /dev/null 2>&1; then
+      wrapperSha256Result=true
+    fi
+  elif command -v shasum > /dev/null; then
+    if echo "$wrapperSha256Sum  $wrapperJarPath" | shasum -a 256 -c > /dev/null 2>&1; then
+      wrapperSha256Result=true
+    fi
+  else
+    echo "Checksum validation was requested but neither 'sha256sum' or 'shasum' are available."
+    echo "Please install either command, or disable validation by removing 'wrapperSha256Sum' from your maven-wrapper.properties."
+    exit 1
+  fi
+  if [ $wrapperSha256Result = false ]; then
+    echo "Error: Failed to validate Maven wrapper SHA-256, your Maven wrapper might be compromised." >&2
+    echo "Investigate or delete $wrapperJarPath to attempt a clean download." >&2
+    echo "If you updated your Maven version, you need to update the specified wrapperSha256Sum property." >&2
+    exit 1
+  fi
+fi
+
+MAVEN_OPTS="$(concat_lines "$MAVEN_PROJECTBASEDIR/.mvn/jvm.config") $MAVEN_OPTS"
+
+# For Cygwin, switch paths to Windows format before running java
+if $cygwin; then
+  [ -n "$JAVA_HOME" ] &&
+    JAVA_HOME=$(cygpath --path --windows "$JAVA_HOME")
+  [ -n "$CLASSPATH" ] &&
+    CLASSPATH=$(cygpath --path --windows "$CLASSPATH")
+  [ -n "$MAVEN_PROJECTBASEDIR" ] &&
+    MAVEN_PROJECTBASEDIR=$(cygpath --path --windows "$MAVEN_PROJECTBASEDIR")
+fi
+
+# Provide a "standardized" way to retrieve the CLI args that will
+# work with both Windows and non-Windows executions.
+MAVEN_CMD_LINE_ARGS="$MAVEN_CONFIG $*"
+export MAVEN_CMD_LINE_ARGS
+
+WRAPPER_LAUNCHER=org.apache.maven.wrapper.MavenWrapperMain
+
+# shellcheck disable=SC2086 # safe args
+exec "$JAVACMD" \
+  $MAVEN_OPTS \
+  $MAVEN_DEBUG_OPTS \
+  -classpath "$MAVEN_PROJECTBASEDIR/.mvn/wrapper/maven-wrapper.jar" \
+  "-Dmaven.multiModuleProjectDirectory=${MAVEN_PROJECTBASEDIR}" \
+  ${WRAPPER_LAUNCHER} $MAVEN_CONFIG "$@"
Index: shop/shop/mvnw.cmd
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/shop/shop/mvnw.cmd b/shop/shop/mvnw.cmd
new file mode 100644
--- /dev/null	(revision 74a8b684730665ca64dd7cf129c1f96483c96c29)
+++ b/shop/shop/mvnw.cmd	(revision 74a8b684730665ca64dd7cf129c1f96483c96c29)
@@ -0,0 +1,205 @@
+@REM ----------------------------------------------------------------------------
+@REM Licensed to the Apache Software Foundation (ASF) under one
+@REM or more contributor license agreements.  See the NOTICE file
+@REM distributed with this work for additional information
+@REM regarding copyright ownership.  The ASF licenses this file
+@REM to you under the Apache License, Version 2.0 (the
+@REM "License"); you may not use this file except in compliance
+@REM with the License.  You may obtain a copy of the License at
+@REM
+@REM    https://www.apache.org/licenses/LICENSE-2.0
+@REM
+@REM Unless required by applicable law or agreed to in writing,
+@REM software distributed under the License is distributed on an
+@REM "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
+@REM KIND, either express or implied.  See the License for the
+@REM specific language governing permissions and limitations
+@REM under the License.
+@REM ----------------------------------------------------------------------------
+
+@REM ----------------------------------------------------------------------------
+@REM Apache Maven Wrapper startup batch script, version 3.2.0
+@REM
+@REM Required ENV vars:
+@REM JAVA_HOME - location of a JDK home dir
+@REM
+@REM Optional ENV vars
+@REM MAVEN_BATCH_ECHO - set to 'on' to enable the echoing of the batch commands
+@REM MAVEN_BATCH_PAUSE - set to 'on' to wait for a keystroke before ending
+@REM MAVEN_OPTS - parameters passed to the Java VM when running Maven
+@REM     e.g. to debug Maven itself, use
+@REM set MAVEN_OPTS=-Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=8000
+@REM MAVEN_SKIP_RC - flag to disable loading of mavenrc files
+@REM ----------------------------------------------------------------------------
+
+@REM Begin all REM lines with '@' in case MAVEN_BATCH_ECHO is 'on'
+@echo off
+@REM set title of command window
+title %0
+@REM enable echoing by setting MAVEN_BATCH_ECHO to 'on'
+@if "%MAVEN_BATCH_ECHO%" == "on"  echo %MAVEN_BATCH_ECHO%
+
+@REM set %HOME% to equivalent of $HOME
+if "%HOME%" == "" (set "HOME=%HOMEDRIVE%%HOMEPATH%")
+
+@REM Execute a user defined script before this one
+if not "%MAVEN_SKIP_RC%" == "" goto skipRcPre
+@REM check for pre script, once with legacy .bat ending and once with .cmd ending
+if exist "%USERPROFILE%\mavenrc_pre.bat" call "%USERPROFILE%\mavenrc_pre.bat" %*
+if exist "%USERPROFILE%\mavenrc_pre.cmd" call "%USERPROFILE%\mavenrc_pre.cmd" %*
+:skipRcPre
+
+@setlocal
+
+set ERROR_CODE=0
+
+@REM To isolate internal variables from possible post scripts, we use another setlocal
+@setlocal
+
+@REM ==== START VALIDATION ====
+if not "%JAVA_HOME%" == "" goto OkJHome
+
+echo.
+echo Error: JAVA_HOME not found in your environment. >&2
+echo Please set the JAVA_HOME variable in your environment to match the >&2
+echo location of your Java installation. >&2
+echo.
+goto error
+
+:OkJHome
+if exist "%JAVA_HOME%\bin\java.exe" goto init
+
+echo.
+echo Error: JAVA_HOME is set to an invalid directory. >&2
+echo JAVA_HOME = "%JAVA_HOME%" >&2
+echo Please set the JAVA_HOME variable in your environment to match the >&2
+echo location of your Java installation. >&2
+echo.
+goto error
+
+@REM ==== END VALIDATION ====
+
+:init
+
+@REM Find the project base dir, i.e. the directory that contains the folder ".mvn".
+@REM Fallback to current working directory if not found.
+
+set MAVEN_PROJECTBASEDIR=%MAVEN_BASEDIR%
+IF NOT "%MAVEN_PROJECTBASEDIR%"=="" goto endDetectBaseDir
+
+set EXEC_DIR=%CD%
+set WDIR=%EXEC_DIR%
+:findBaseDir
+IF EXIST "%WDIR%"\.mvn goto baseDirFound
+cd ..
+IF "%WDIR%"=="%CD%" goto baseDirNotFound
+set WDIR=%CD%
+goto findBaseDir
+
+:baseDirFound
+set MAVEN_PROJECTBASEDIR=%WDIR%
+cd "%EXEC_DIR%"
+goto endDetectBaseDir
+
+:baseDirNotFound
+set MAVEN_PROJECTBASEDIR=%EXEC_DIR%
+cd "%EXEC_DIR%"
+
+:endDetectBaseDir
+
+IF NOT EXIST "%MAVEN_PROJECTBASEDIR%\.mvn\jvm.config" goto endReadAdditionalConfig
+
+@setlocal EnableExtensions EnableDelayedExpansion
+for /F "usebackq delims=" %%a in ("%MAVEN_PROJECTBASEDIR%\.mvn\jvm.config") do set JVM_CONFIG_MAVEN_PROPS=!JVM_CONFIG_MAVEN_PROPS! %%a
+@endlocal & set JVM_CONFIG_MAVEN_PROPS=%JVM_CONFIG_MAVEN_PROPS%
+
+:endReadAdditionalConfig
+
+SET MAVEN_JAVA_EXE="%JAVA_HOME%\bin\java.exe"
+set WRAPPER_JAR="%MAVEN_PROJECTBASEDIR%\.mvn\wrapper\maven-wrapper.jar"
+set WRAPPER_LAUNCHER=org.apache.maven.wrapper.MavenWrapperMain
+
+set WRAPPER_URL="https://repo.maven.apache.org/maven2/org/apache/maven/wrapper/maven-wrapper/3.2.0/maven-wrapper-3.2.0.jar"
+
+FOR /F "usebackq tokens=1,2 delims==" %%A IN ("%MAVEN_PROJECTBASEDIR%\.mvn\wrapper\maven-wrapper.properties") DO (
+    IF "%%A"=="wrapperUrl" SET WRAPPER_URL=%%B
+)
+
+@REM Extension to allow automatically downloading the maven-wrapper.jar from Maven-central
+@REM This allows using the maven wrapper in projects that prohibit checking in binary data.
+if exist %WRAPPER_JAR% (
+    if "%MVNW_VERBOSE%" == "true" (
+        echo Found %WRAPPER_JAR%
+    )
+) else (
+    if not "%MVNW_REPOURL%" == "" (
+        SET WRAPPER_URL="%MVNW_REPOURL%/org/apache/maven/wrapper/maven-wrapper/3.2.0/maven-wrapper-3.2.0.jar"
+    )
+    if "%MVNW_VERBOSE%" == "true" (
+        echo Couldn't find %WRAPPER_JAR%, downloading it ...
+        echo Downloading from: %WRAPPER_URL%
+    )
+
+    powershell -Command "&{"^
+		"$webclient = new-object System.Net.WebClient;"^
+		"if (-not ([string]::IsNullOrEmpty('%MVNW_USERNAME%') -and [string]::IsNullOrEmpty('%MVNW_PASSWORD%'))) {"^
+		"$webclient.Credentials = new-object System.Net.NetworkCredential('%MVNW_USERNAME%', '%MVNW_PASSWORD%');"^
+		"}"^
+		"[Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12; $webclient.DownloadFile('%WRAPPER_URL%', '%WRAPPER_JAR%')"^
+		"}"
+    if "%MVNW_VERBOSE%" == "true" (
+        echo Finished downloading %WRAPPER_JAR%
+    )
+)
+@REM End of extension
+
+@REM If specified, validate the SHA-256 sum of the Maven wrapper jar file
+SET WRAPPER_SHA_256_SUM=""
+FOR /F "usebackq tokens=1,2 delims==" %%A IN ("%MAVEN_PROJECTBASEDIR%\.mvn\wrapper\maven-wrapper.properties") DO (
+    IF "%%A"=="wrapperSha256Sum" SET WRAPPER_SHA_256_SUM=%%B
+)
+IF NOT %WRAPPER_SHA_256_SUM%=="" (
+    powershell -Command "&{"^
+       "$hash = (Get-FileHash \"%WRAPPER_JAR%\" -Algorithm SHA256).Hash.ToLower();"^
+       "If('%WRAPPER_SHA_256_SUM%' -ne $hash){"^
+       "  Write-Output 'Error: Failed to validate Maven wrapper SHA-256, your Maven wrapper might be compromised.';"^
+       "  Write-Output 'Investigate or delete %WRAPPER_JAR% to attempt a clean download.';"^
+       "  Write-Output 'If you updated your Maven version, you need to update the specified wrapperSha256Sum property.';"^
+       "  exit 1;"^
+       "}"^
+       "}"
+    if ERRORLEVEL 1 goto error
+)
+
+@REM Provide a "standardized" way to retrieve the CLI args that will
+@REM work with both Windows and non-Windows executions.
+set MAVEN_CMD_LINE_ARGS=%*
+
+%MAVEN_JAVA_EXE% ^
+  %JVM_CONFIG_MAVEN_PROPS% ^
+  %MAVEN_OPTS% ^
+  %MAVEN_DEBUG_OPTS% ^
+  -classpath %WRAPPER_JAR% ^
+  "-Dmaven.multiModuleProjectDirectory=%MAVEN_PROJECTBASEDIR%" ^
+  %WRAPPER_LAUNCHER% %MAVEN_CONFIG% %*
+if ERRORLEVEL 1 goto error
+goto end
+
+:error
+set ERROR_CODE=1
+
+:end
+@endlocal & set ERROR_CODE=%ERROR_CODE%
+
+if not "%MAVEN_SKIP_RC%"=="" goto skipRcPost
+@REM check for post script, once with legacy .bat ending and once with .cmd ending
+if exist "%USERPROFILE%\mavenrc_post.bat" call "%USERPROFILE%\mavenrc_post.bat"
+if exist "%USERPROFILE%\mavenrc_post.cmd" call "%USERPROFILE%\mavenrc_post.cmd"
+:skipRcPost
+
+@REM pause the script if MAVEN_BATCH_PAUSE is set to 'on'
+if "%MAVEN_BATCH_PAUSE%"=="on" pause
+
+if "%MAVEN_TERMINATE_CMD%"=="on" exit %ERROR_CODE%
+
+cmd /C exit /B %ERROR_CODE%
Index: shop/shop/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/shop/shop/pom.xml b/shop/shop/pom.xml
new file mode 100644
--- /dev/null	(revision 74a8b684730665ca64dd7cf129c1f96483c96c29)
+++ b/shop/shop/pom.xml	(revision 74a8b684730665ca64dd7cf129c1f96483c96c29)
@@ -0,0 +1,149 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
+	<modelVersion>4.0.0</modelVersion>
+	<parent>
+		<groupId>org.springframework.boot</groupId>
+		<artifactId>spring-boot-starter-parent</artifactId>
+		<version>2.7.15</version>
+		<relativePath/> <!-- lookup parent from repository -->
+	</parent>
+	<groupId>com.keduit</groupId>
+	<artifactId>shop</artifactId>
+	<version>0.0.1-SNAPSHOT</version>
+	<name>shop</name>
+	<description>shop project for Spring Boot</description>
+	<properties>
+		<java.version>11</java.version>
+	</properties>
+	<dependencies>
+		<dependency>
+			<groupId>org.springframework.boot</groupId>
+			<artifactId>spring-boot-starter-data-jpa</artifactId>
+		</dependency>
+		<dependency>
+			<groupId>org.springframework.boot</groupId>
+			<artifactId>spring-boot-starter-thymeleaf</artifactId>
+		</dependency>
+		<dependency>
+			<groupId>org.springframework.boot</groupId>
+			<artifactId>spring-boot-starter-web</artifactId>
+		</dependency>
+
+
+		<dependency>
+			<groupId>org.springframework.boot</groupId>
+			<artifactId>spring-boot-devtools</artifactId>
+			<scope>runtime</scope>
+			<optional>true</optional>
+		</dependency>
+		<!-- https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-security -->
+		<dependency>
+			<groupId>org.springframework.boot</groupId>
+			<artifactId>spring-boot-starter-security</artifactId>
+		</dependency>
+		<!-- https://mvnrepository.com/artifact/org.springframework.security/spring-security-test -->
+		<dependency>
+			<groupId>org.springframework.security</groupId>
+			<artifactId>spring-security-test</artifactId>
+			<scope>test</scope>
+		</dependency>
+		<!-- https://mvnrepository.com/artifact/org.thymeleaf.extras/thymeleaf-extras-springsecurity5 -->
+		<dependency>
+			<groupId>org.thymeleaf.extras</groupId>
+			<artifactId>thymeleaf-extras-springsecurity5</artifactId>
+		</dependency>
+
+
+
+		<dependency>
+			<groupId>com.mysql</groupId>
+			<artifactId>mysql-connector-j</artifactId>
+			<scope>runtime</scope>
+		</dependency>
+		<dependency>
+			<groupId>org.projectlombok</groupId>
+			<artifactId>lombok</artifactId>
+			<optional>true</optional>
+		</dependency>
+		<dependency>
+			<groupId>org.springframework.boot</groupId>
+			<artifactId>spring-boot-starter-test</artifactId>
+			<scope>test</scope>
+		</dependency>
+        <!-- https://mvnrepository.com/artifact/com.querydsl/querydsl-jpa -->
+        <dependency>
+            <groupId>com.querydsl</groupId>
+            <artifactId>querydsl-jpa</artifactId>
+            <version>5.0.0</version>
+        </dependency>
+        <!-- https://mvnrepository.com/artifact/com.querydsl/querydsl-apt -->
+        <dependency>
+            <groupId>com.querydsl</groupId>
+            <artifactId>querydsl-apt</artifactId>
+            <version>5.0.0</version>
+        </dependency>
+		<!-- https://mvnrepository.com/artifact/nz.net.ultraq.thymeleaf/thymeleaf-layout-dialect -->
+		<!-- 페이지 레이아웃 잡기위한 의존성 주입. 메이븐에 검색.-->
+		<dependency>
+			<groupId>nz.net.ultraq.thymeleaf</groupId>
+			<artifactId>thymeleaf-layout-dialect</artifactId>
+		</dependency>
+		<dependency>
+			<groupId>org.springframework.boot</groupId>
+			<artifactId>spring-boot-starter-validation</artifactId>
+		</dependency>
+		<dependency>
+			<groupId>org.springframework.boot</groupId>
+			<artifactId>spring-boot-autoconfigure</artifactId>
+			<version>2.7.15</version>
+		</dependency>
+
+		<!-- 모델 메퍼 -->
+		<!-- https://mvnrepository.com/artifact/org.modelmapper/modelmapper -->
+		<dependency>
+			<groupId>org.modelmapper</groupId>
+			<artifactId>modelmapper</artifactId>
+			<version>3.0.0</version>
+		</dependency>
+
+
+
+
+	</dependencies>
+
+
+	<build>
+		<plugins>
+			<plugin>
+				<groupId>org.springframework.boot</groupId>
+				<artifactId>spring-boot-maven-plugin</artifactId>
+				<configuration>
+					<excludes>
+						<exclude>
+							<groupId>org.projectlombok</groupId>
+							<artifactId>lombok</artifactId>
+						</exclude>
+					</excludes>
+				</configuration>
+			</plugin>
+            <plugin>
+                <groupId>com.mysema.maven</groupId>
+                <artifactId>apt-maven-plugin</artifactId>
+                <version>1.1.3</version>
+                <executions>
+                    <execution>
+                        <goals>
+                            <goal>process</goal>
+                        </goals>
+                        <configuration>
+                            <outputDirectory>target/generated-sources/java</outputDirectory>
+                            <processor>com.querydsl.apt.jpa.JPAAnnotationProcessor</processor>
+                        </configuration>
+                    </execution>
+                </executions>
+            </plugin>
+		</plugins>
+	</build>
+
+</project>
Index: shop/shop/src/main/java/com/keduit/shop/ShopApplication.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/shop/shop/src/main/java/com/keduit/shop/ShopApplication.java b/shop/shop/src/main/java/com/keduit/shop/ShopApplication.java
new file mode 100644
--- /dev/null	(revision 74a8b684730665ca64dd7cf129c1f96483c96c29)
+++ b/shop/shop/src/main/java/com/keduit/shop/ShopApplication.java	(revision 74a8b684730665ca64dd7cf129c1f96483c96c29)
@@ -0,0 +1,13 @@
+package com.keduit.shop;
+
+import org.springframework.boot.SpringApplication;
+import org.springframework.boot.autoconfigure.SpringBootApplication;
+
+@SpringBootApplication
+public class ShopApplication {
+
+	public static void main(String[] args) {
+		SpringApplication.run(ShopApplication.class, args);
+	}
+
+}
Index: shop/shop/src/main/java/com/keduit/shop/config/AuditConfig.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/shop/shop/src/main/java/com/keduit/shop/config/AuditConfig.java b/shop/shop/src/main/java/com/keduit/shop/config/AuditConfig.java
new file mode 100644
--- /dev/null	(revision 74a8b684730665ca64dd7cf129c1f96483c96c29)
+++ b/shop/shop/src/main/java/com/keduit/shop/config/AuditConfig.java	(revision 74a8b684730665ca64dd7cf129c1f96483c96c29)
@@ -0,0 +1,19 @@
+package com.keduit.shop.config;
+
+import org.springframework.context.annotation.Bean;
+import org.springframework.context.annotation.Configuration;
+import org.springframework.data.domain.AuditorAware;
+import org.springframework.data.jpa.repository.config.EnableJpaAuditing;
+
+@Configuration
+@EnableJpaAuditing // JPA 의 Auditing 기능을 활성화 함.
+public class AuditConfig {
+
+
+    // 등록자와 수정자를 처리하는 AditorAware를 빈으로 등록.
+    @Bean
+    public AuditorAware<String> auditorProvider(){
+
+        return new AuditorAwareImpl();
+    }
+}
Index: shop/shop/src/main/java/com/keduit/shop/config/AuditorAwareImpl.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/shop/shop/src/main/java/com/keduit/shop/config/AuditorAwareImpl.java b/shop/shop/src/main/java/com/keduit/shop/config/AuditorAwareImpl.java
new file mode 100644
--- /dev/null	(revision 74a8b684730665ca64dd7cf129c1f96483c96c29)
+++ b/shop/shop/src/main/java/com/keduit/shop/config/AuditorAwareImpl.java	(revision 74a8b684730665ca64dd7cf129c1f96483c96c29)
@@ -0,0 +1,23 @@
+package com.keduit.shop.config;
+
+import org.springframework.data.domain.AuditorAware;
+import org.springframework.security.core.Authentication;
+import org.springframework.security.core.context.SecurityContextHolder;
+
+import java.util.Optional;
+
+// 스프링 JPA의 Auditing기능을 이용하여
+// 엔티티가 저장, 수정 될 때 자동으로
+// 등록일, 수정일, 등록자, 수정자등을 입력해 줌.
+public class AuditorAwareImpl implements AuditorAware<String> {
+    @Override
+    public Optional<String> getCurrentAuditor() {
+        Authentication authentication = SecurityContextHolder.getContext().getAuthentication();
+        String userid = "";
+        if (authentication != null){
+//      현재 로그인한 사용자의 정보를 조회하여 사용자의 이름을 가져옴.
+            userid = authentication.getName();
+        }
+        return Optional.of(userid);
+    }
+}
Index: shop/shop/src/main/java/com/keduit/shop/config/CustomAuthenticationEntryPoint.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/shop/shop/src/main/java/com/keduit/shop/config/CustomAuthenticationEntryPoint.java b/shop/shop/src/main/java/com/keduit/shop/config/CustomAuthenticationEntryPoint.java
new file mode 100644
--- /dev/null	(revision 74a8b684730665ca64dd7cf129c1f96483c96c29)
+++ b/shop/shop/src/main/java/com/keduit/shop/config/CustomAuthenticationEntryPoint.java	(revision 74a8b684730665ca64dd7cf129c1f96483c96c29)
@@ -0,0 +1,27 @@
+package com.keduit.shop.config;
+
+import org.springframework.security.core.AuthenticationException;
+import org.springframework.security.web.AuthenticationEntryPoint;
+
+import javax.servlet.ServletException;
+import javax.servlet.http.HttpServletRequest;
+import javax.servlet.http.HttpServletResponse;
+import java.io.IOException;
+
+public class CustomAuthenticationEntryPoint implements AuthenticationEntryPoint {
+
+
+    @Override
+    public void commence(HttpServletRequest request, HttpServletResponse response, AuthenticationException authException) throws IOException, ServletException {
+        // ajax 비동기 통신의 경우 http request header 에 XMLHttpRequest라는 값을 넣어줌.
+        // 이때 인증되지 않은 사용자 (로그인 안한) 가 ajax로 리소스 요청을 한 경우 401
+        // 나머지는 로그인을 유도 (리다이렉트)함
+
+        // 만약 비동기통신으로 데이터를 주고 싶다면 토큰을 받고 체크하는 식으로 코드를 추가해야함.
+        if("XMLHttpRequest".equals(request.getHeader("x-requested-with"))) {
+            response.sendError((HttpServletResponse.SC_UNAUTHORIZED), "Unauthorized");
+        }else{
+            response.sendRedirect("/members/login");
+        }
+    }
+}
\ No newline at end of file
Index: shop/shop/src/main/java/com/keduit/shop/config/SecurityConfig.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/shop/shop/src/main/java/com/keduit/shop/config/SecurityConfig.java b/shop/shop/src/main/java/com/keduit/shop/config/SecurityConfig.java
new file mode 100644
--- /dev/null	(revision 74a8b684730665ca64dd7cf129c1f96483c96c29)
+++ b/shop/shop/src/main/java/com/keduit/shop/config/SecurityConfig.java	(revision 74a8b684730665ca64dd7cf129c1f96483c96c29)
@@ -0,0 +1,66 @@
+package com.keduit.shop.config;
+
+import org.springframework.boot.autoconfigure.security.servlet.PathRequest;
+import org.springframework.context.annotation.Bean;
+import org.springframework.context.annotation.Configuration;
+import org.springframework.security.config.annotation.web.builders.HttpSecurity;
+import org.springframework.security.config.annotation.web.configuration.EnableWebSecurity;
+import org.springframework.security.config.annotation.web.configuration.WebSecurityCustomizer;
+import org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;
+import org.springframework.security.crypto.password.PasswordEncoder;
+import org.springframework.security.web.SecurityFilterChain;
+import org.springframework.security.web.util.matcher.AntPathRequestMatcher;
+
+@Configuration
+@EnableWebSecurity
+public class SecurityConfig {
+    // 여기서 로그인을 컨트롤러에서 post방식으로 받지 않는 이유는
+    // 비밀번호, 즉 보안과 연관되어 있기 때문이다
+    // 비밀번호를 다룰땐 항상 post가 아닌 여기서 처리해야한다.
+    @Bean
+    public SecurityFilterChain filterChain(HttpSecurity http) throws Exception{
+        System.out.println("----------------- SecurityFilterChain ----------------");
+
+        http.formLogin()
+                // 로그인 처리 화면
+                .loginPage("/members/login")
+                .defaultSuccessUrl("/")
+                .usernameParameter("email")   //loadUserByUsername(String email)로 실행
+                .failureUrl("/members/login/error")
+                .and()
+                .logout()
+                // 로그아웃 처리 url
+                .logoutRequestMatcher(new AntPathRequestMatcher("/members/logout"))
+                .logoutSuccessUrl("/");
+
+//    permitAll(): 모든 사용자가 인증(로그인) 없이 해당 경로에 접근 가능
+//    hasRole("ADMIN"): 관리자인 경우 /admin/으로 접근하는 경로를 통과시킴
+//    anyRequest().authenticated() 위의 경우 이외의 페이지는 인증 절차가 필요.
+        http.authorizeRequests()
+                .mvcMatchers("/", "/members/**",
+                        "/item/**", "/images/**", "error", "favicon.io").permitAll()
+                .mvcMatchers("/admin/**").hasRole("ADMIN")
+                .anyRequest().authenticated();
+
+//    인증되지 않은 사용자가 리소스 접근하여 실패했을 때 처리하는 핸들러 등록
+        http.exceptionHandling()
+                .authenticationEntryPoint(new CustomAuthenticationEntryPoint());
+
+        return http.build();
+
+    }
+
+    @Bean
+    public PasswordEncoder passwordEncoder(){
+        return new BCryptPasswordEncoder();
+    }
+
+    //  /resource/static 폴더의 하위 파일은 인증에서 제외시킴.
+    @Bean
+    public WebSecurityCustomizer webSecurityCustomizer(){
+        return (web)-> web.ignoring()
+                .requestMatchers(PathRequest.toStaticResources().atCommonLocations());
+        //toStaticResources() 은 정적 파일. css,js,img 등 얘네들은 누구나 볼 수 있게 함?해야됌?
+    }
+
+}
Index: shop/shop/src/main/java/com/keduit/shop/config/WebMvcConfig.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/shop/shop/src/main/java/com/keduit/shop/config/WebMvcConfig.java b/shop/shop/src/main/java/com/keduit/shop/config/WebMvcConfig.java
new file mode 100644
--- /dev/null	(revision 74a8b684730665ca64dd7cf129c1f96483c96c29)
+++ b/shop/shop/src/main/java/com/keduit/shop/config/WebMvcConfig.java	(revision 74a8b684730665ca64dd7cf129c1f96483c96c29)
@@ -0,0 +1,27 @@
+package com.keduit.shop.config;
+
+
+import org.springframework.beans.factory.annotation.Value;
+import org.springframework.context.annotation.Configuration;
+import org.springframework.web.servlet.config.annotation.ResourceHandlerRegistry;
+import org.springframework.web.servlet.config.annotation.WebMvcConfigurer;
+
+import javax.validation.Valid;
+
+@Configuration
+public class WebMvcConfig implements WebMvcConfigurer {
+
+    //  application.properties에 설정한 "uploadPath" 프로퍼티의 값을 읽어옴.
+    @Value("${uploadPath}")
+    String uploadPath;
+
+    //  url이 /images/** 로 시작하는 경우(접근 경로)  uploadPath에 설정한
+//  폴더를 기준으로 파일을 읽도록 설정
+//  .addResourceLocations(uploadPath): 로컬 컴퓨터에서 읽어올 root경로를 설정
+//  uploadPath: 실제 파일 경로
+    @Override
+    public void addResourceHandlers(ResourceHandlerRegistry registry) {
+        registry.addResourceHandler("/images/**")
+                .addResourceLocations(uploadPath);
+    }
+}
Index: shop/shop/src/main/java/com/keduit/shop/constant/ItemSellStatus.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/shop/shop/src/main/java/com/keduit/shop/constant/ItemSellStatus.java b/shop/shop/src/main/java/com/keduit/shop/constant/ItemSellStatus.java
new file mode 100644
--- /dev/null	(revision 74a8b684730665ca64dd7cf129c1f96483c96c29)
+++ b/shop/shop/src/main/java/com/keduit/shop/constant/ItemSellStatus.java	(revision 74a8b684730665ca64dd7cf129c1f96483c96c29)
@@ -0,0 +1,5 @@
+package com.keduit.shop.constant;
+
+public enum ItemSellStatus {
+    SELL, SOLD_OUT
+}
Index: shop/shop/src/main/java/com/keduit/shop/constant/OrderStatus.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/shop/shop/src/main/java/com/keduit/shop/constant/OrderStatus.java b/shop/shop/src/main/java/com/keduit/shop/constant/OrderStatus.java
new file mode 100644
--- /dev/null	(revision 74a8b684730665ca64dd7cf129c1f96483c96c29)
+++ b/shop/shop/src/main/java/com/keduit/shop/constant/OrderStatus.java	(revision 74a8b684730665ca64dd7cf129c1f96483c96c29)
@@ -0,0 +1,5 @@
+package com.keduit.shop.constant;
+
+public enum OrderStatus {
+    ORDER, CANCLE,
+}
Index: shop/shop/src/main/java/com/keduit/shop/constant/Role.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/shop/shop/src/main/java/com/keduit/shop/constant/Role.java b/shop/shop/src/main/java/com/keduit/shop/constant/Role.java
new file mode 100644
--- /dev/null	(revision 74a8b684730665ca64dd7cf129c1f96483c96c29)
+++ b/shop/shop/src/main/java/com/keduit/shop/constant/Role.java	(revision 74a8b684730665ca64dd7cf129c1f96483c96c29)
@@ -0,0 +1,5 @@
+package com.keduit.shop.constant;
+
+public enum Role {
+    USER, ADMIN
+}
Index: shop/shop/src/main/java/com/keduit/shop/controller/CartController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/shop/shop/src/main/java/com/keduit/shop/controller/CartController.java b/shop/shop/src/main/java/com/keduit/shop/controller/CartController.java
new file mode 100644
--- /dev/null	(revision 74a8b684730665ca64dd7cf129c1f96483c96c29)
+++ b/shop/shop/src/main/java/com/keduit/shop/controller/CartController.java	(revision 74a8b684730665ca64dd7cf129c1f96483c96c29)
@@ -0,0 +1,100 @@
+package com.keduit.shop.controller;
+
+import com.keduit.shop.dto.CartDetailDTO;
+import com.keduit.shop.dto.CartItemDTO;
+import com.keduit.shop.dto.CartOrderDTO;
+import com.keduit.shop.service.CartService;
+import lombok.RequiredArgsConstructor;
+import org.springframework.http.HttpStatus;
+import org.springframework.http.ResponseEntity;
+import org.springframework.stereotype.Controller;
+import org.springframework.ui.Model;
+import org.springframework.validation.BindingResult;
+import org.springframework.validation.FieldError;
+import org.springframework.web.bind.annotation.*;
+
+import javax.validation.Valid;
+import java.security.Principal;
+import java.util.List;
+
+@Controller
+@RequiredArgsConstructor
+public class CartController {
+
+    private final CartService cartService;
+
+    @PostMapping("/cart")
+    public @ResponseBody ResponseEntity order(@RequestBody @Valid CartItemDTO cartItemDTO,
+                                              BindingResult bindingResult, Principal principal) { // valid의 리턴값을 가져오는게 Binding?
+        if (bindingResult.hasErrors()) {
+            StringBuilder sb = new StringBuilder();
+            List<FieldError> fieldErrorList = bindingResult.getFieldErrors(); // 에러나면 이거 보내주자
+            for (FieldError fieldError : fieldErrorList) {
+                sb.append(fieldError.getDefaultMessage());
+            }
+            return new ResponseEntity(sb.toString(), HttpStatus.BAD_REQUEST);
+        }
+
+        String email = principal.getName();
+        Long cartItemId;
+
+        try {
+            cartItemId = cartService.addCart(cartItemDTO, email);
+        } catch (Exception e) {
+            return new ResponseEntity(e.getMessage(), HttpStatus.BAD_REQUEST);
+        }
+        return new ResponseEntity(cartItemId, HttpStatus.OK);
+    }
+
+    @GetMapping("/cart")
+    public String orderHist(Principal principal, Model model) {
+        List<CartDetailDTO> cartDetailDTOList = cartService.getCartList(principal.getName());
+        model.addAttribute("cartItems", cartDetailDTOList);
+
+        return "cart/cartList";
+    }
+
+    // put : 전체수정, patch: 일부수정
+
+    @PatchMapping("/cartItem/{cartItemId}")
+    public @ResponseBody ResponseEntity updateCartItem(
+            @PathVariable("cartItemId") Long cartItemId,
+            int count, Principal principal) {
+        if (count <= 0) {
+            return new ResponseEntity("최소 1개 이상 담아주세요.", HttpStatus.BAD_REQUEST);
+        } else if (!cartService.validateCartItem(cartItemId, principal.getName())) {
+            return new ResponseEntity("수정 권한이 없습니다", HttpStatus.FORBIDDEN);
+        }
+        cartService.updateCartItemCount(cartItemId, count);
+        return new ResponseEntity(cartItemId, HttpStatus.OK);
+    }
+
+    @DeleteMapping("/cartItem/{cartItemId}")
+    public @ResponseBody ResponseEntity deleteCartItem(
+            @PathVariable("cartItemId") Long cartItemId, Principal principal) {
+        if (!cartService.validateCartItem(cartItemId, principal.getName())) {
+            return new ResponseEntity("수정 권한이 없습니다.", HttpStatus.FORBIDDEN);
+        }
+        cartService.deleteCartItem(cartItemId);
+        return new ResponseEntity(cartItemId, HttpStatus.OK);
+    }
+
+    @PostMapping("/cart/orders")
+    public @ResponseBody ResponseEntity orderCartItem(
+            @RequestBody CartOrderDTO cartOrderDTO, Principal principal) {
+        List<CartOrderDTO> cartOrderDTOList = cartOrderDTO.getCartOrderDTOList();
+
+        if (cartOrderDTOList == null || cartOrderDTOList.size() == 0) {
+            return new ResponseEntity("주문할 상품을 선택해주세요.", HttpStatus.BAD_REQUEST);
+        }
+        for (CartOrderDTO cartOrder : cartOrderDTOList) {
+            if (!cartService.validateCartItem(cartOrder.getCartItemId(), principal.getName())) {
+                return new ResponseEntity("주문 권한이 없습니다.", HttpStatus.FORBIDDEN);
+            }
+        }
+
+        Long orderId = cartService.orderCartItem(cartOrderDTOList, principal.getName());
+        return new ResponseEntity(orderId, HttpStatus.OK);
+
+    }
+}
Index: shop/shop/src/main/java/com/keduit/shop/controller/ItemController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/shop/shop/src/main/java/com/keduit/shop/controller/ItemController.java b/shop/shop/src/main/java/com/keduit/shop/controller/ItemController.java
new file mode 100644
--- /dev/null	(revision 74a8b684730665ca64dd7cf129c1f96483c96c29)
+++ b/shop/shop/src/main/java/com/keduit/shop/controller/ItemController.java	(revision 74a8b684730665ca64dd7cf129c1f96483c96c29)
@@ -0,0 +1,104 @@
+package com.keduit.shop.controller;
+
+import com.keduit.shop.dto.ItemFormDTO;
+import com.keduit.shop.dto.ItemSearchDTO;
+import com.keduit.shop.entity.Item;
+import com.keduit.shop.service.ItemService;
+import lombok.RequiredArgsConstructor;
+import org.springframework.data.domain.Page;
+import org.springframework.data.domain.PageRequest;
+import org.springframework.data.domain.Pageable;
+import org.springframework.stereotype.Controller;
+import org.springframework.ui.Model;
+import org.springframework.validation.BindingResult;
+import org.springframework.web.bind.annotation.GetMapping;
+import org.springframework.web.bind.annotation.PathVariable;
+import org.springframework.web.bind.annotation.PostMapping;
+import org.springframework.web.bind.annotation.RequestParam;
+import org.springframework.web.multipart.MultipartFile;
+
+import javax.validation.Valid;
+import java.util.List;
+import java.util.Optional;
+
+@Controller
+@RequiredArgsConstructor
+public class ItemController {
+
+    private final ItemService itemService;
+
+    @GetMapping("/admin/item/new")
+    public String itemForm(Model model) {
+
+        model.addAttribute("itemFormDTO", new ItemFormDTO());
+
+        return "item/itemForm";
+    }
+
+    @PostMapping("/admin/item/new")  // 바인딩리절트는 검증결과를 가지고잇음
+    public String itemNew(@Valid ItemFormDTO itemFormDTO, BindingResult bindingResult, Model model,
+                          @RequestParam("itemImgFile") List<MultipartFile> itemImgFileList) {
+        if (bindingResult.hasErrors()) {
+            return "item/itemForm";
+        }
+
+        if (itemImgFileList.get(0).isEmpty() && itemFormDTO.getId() == null) {
+            model.addAttribute("errorMessage", "첫번째 상품 이미지는 필수 입력");
+            return "item/itemForm";
+        }
+
+        try {
+            itemService.saveItem(itemFormDTO, itemImgFileList);
+        } catch (Exception e) {
+            model.addAttribute("errorMessage", "상품 등록 중 에러가 발생하였습니다.");
+            return "item/itemForm";
+        }
+        return "redirect:/";
+    }
+    // 여기서 부터 공부!!
+    @PostMapping("/admin/item/{itemId}")
+    public String itemUpdate(@Valid ItemFormDTO itemFormDTO,
+                             BindingResult bindingResult,
+                             @RequestParam("itemImgFile") List<MultipartFile> itemImgFileList,
+                             Model model) {
+        if (bindingResult.hasErrors()) {
+            return "item/itemForm";
+        }
+
+        if (itemImgFileList.get(0).isEmpty() && itemFormDTO.getId() == null) {
+            model.addAttribute("errorMessage", "첫번째 상품이미지는 필수 입력입니다.");
+            return "item/itemForm";
+        }
+
+        try {
+            itemService.updateItem(itemFormDTO, itemImgFileList);
+        } catch (Exception e) {
+            model.addAttribute("errorMessage", "상품 수정 중 에러가 발생했습니다.");
+            return "item/itemForm";
+        }
+        return "redirect:/";
+    }
+
+    @GetMapping({"/admin/items", "/admin/items/{page}"})
+    public String itemManage(ItemSearchDTO itemSearchDTO,
+                             @PathVariable("page") Optional<Integer> page,
+                             Model model) {
+        // 한페이지에 몇개씩 뿌리고 싶은가? 페이지가 존재할경우? 페이지를 가져오고? 페이지가 존재하지 않을경우?
+        // 3개씩 뿌려라?
+        Pageable pageable = PageRequest.of(page.isPresent() ? page.get() : 0, 3);
+        Page<Item> items = itemService.getAdminItemPage(itemSearchDTO, pageable);
+        System.out.println("----- items.getContent() : " + items.getContent());
+        System.out.println("----- itemSearchDTO : " + itemSearchDTO);
+        model.addAttribute("items", items);
+        model.addAttribute("itemSearchDTO", itemSearchDTO);
+        model.addAttribute("maxPage", 5);
+        return "item/itemMng";
+    }
+
+    @GetMapping("/item/{itemId}")
+    public String itemDtl(Model model, @PathVariable("itemId") Long itemId){
+        ItemFormDTO itemFormDTO = itemService.getItemDtl(itemId);
+        model.addAttribute("item",itemFormDTO);
+        return "item/itemDtl";
+    }
+}
Index: shop/shop/src/main/java/com/keduit/shop/controller/MainController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/shop/shop/src/main/java/com/keduit/shop/controller/MainController.java b/shop/shop/src/main/java/com/keduit/shop/controller/MainController.java
new file mode 100644
--- /dev/null	(revision 74a8b684730665ca64dd7cf129c1f96483c96c29)
+++ b/shop/shop/src/main/java/com/keduit/shop/controller/MainController.java	(revision 74a8b684730665ca64dd7cf129c1f96483c96c29)
@@ -0,0 +1,35 @@
+package com.keduit.shop.controller;
+
+import com.keduit.shop.dto.ItemSearchDTO;
+import com.keduit.shop.dto.MainItemDTO;
+import com.keduit.shop.service.ItemService;
+import lombok.RequiredArgsConstructor;
+import org.springframework.data.domain.Page;
+import org.springframework.data.domain.PageRequest;
+import org.springframework.data.domain.Pageable;
+import org.springframework.stereotype.Controller;
+import org.springframework.ui.Model;
+import org.springframework.web.bind.annotation.GetMapping;
+
+import java.util.Optional;
+
+@RequiredArgsConstructor
+@Controller
+public class MainController {
+
+    private final ItemService itemService;
+
+    @GetMapping("/")
+    public String main(ItemSearchDTO itemSearchDTO,
+                       Optional<Integer> page,
+                       Model model){
+        Pageable pageable = PageRequest.of(page.isPresent()? page.get() : 0, 6);
+
+        Page<MainItemDTO> items = itemService.getMainItemPage(itemSearchDTO, pageable);
+        model.addAttribute("items", items);
+        model.addAttribute("itemSearchDTO",itemSearchDTO);
+        model.addAttribute("maxPage",5);
+
+        return "main";
+    }
+}
Index: shop/shop/src/main/java/com/keduit/shop/controller/MemberController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/shop/shop/src/main/java/com/keduit/shop/controller/MemberController.java b/shop/shop/src/main/java/com/keduit/shop/controller/MemberController.java
new file mode 100644
--- /dev/null	(revision 74a8b684730665ca64dd7cf129c1f96483c96c29)
+++ b/shop/shop/src/main/java/com/keduit/shop/controller/MemberController.java	(revision 74a8b684730665ca64dd7cf129c1f96483c96c29)
@@ -0,0 +1,72 @@
+package com.keduit.shop.controller;
+
+import com.keduit.shop.dto.MemberFormDTO;
+import com.keduit.shop.entity.Member;
+import com.keduit.shop.service.MemberService;
+import lombok.RequiredArgsConstructor;
+import org.springframework.security.crypto.password.PasswordEncoder;
+import org.springframework.stereotype.Controller;
+import org.springframework.ui.Model;
+import org.springframework.validation.BindingResult;
+import org.springframework.web.bind.annotation.GetMapping;
+import org.springframework.web.bind.annotation.PostMapping;
+import org.springframework.web.bind.annotation.RequestMapping;
+
+import javax.validation.Valid;
+
+@Controller
+@RequestMapping("/members") // 이곳으로 올때는 memberS S를 붙여서 불러야함. 헷갈릴 수 있음
+@RequiredArgsConstructor
+public class MemberController {
+
+    private final MemberService memberService;
+
+    private final PasswordEncoder passwordEncoder;
+
+    @GetMapping("/new")
+    public String memberForm(Model model){
+
+        // DTO의 set,get을 사용할 수 있도록??
+        model.addAttribute("memberFormDTO", new MemberFormDTO());
+        return "member/memberForm";
+    }
+
+//    @PostMapping("/new")
+//    public String memberForm(MemberFormDTO memberFormDTO){
+//        Member member = Member.createMember(memberFormDTO, passwordEncoder);
+//        memberService.saveMember(member);
+//
+//        return "redirect:/";
+//    }
+
+    @PostMapping("/new")
+    public String newMember(@Valid MemberFormDTO memberFormDTO,
+                            BindingResult bindingResult, Model model){
+        // memberFormDTO 의 유효성 체크 결과를확인 -> 에러이면 다시 입력 폼을 리턴
+        if(bindingResult.hasErrors()){
+            return "member/memberForm";
+        }
+        try{
+            Member member = Member.createMember(memberFormDTO, passwordEncoder);
+            memberService.saveMember(member);
+        }catch (IllegalStateException e){
+            model.addAttribute("errorMessage", e.getMessage());
+            return "member/memberForm";
+        }
+        return "redirect:/";
+    }
+
+    @GetMapping("/login")
+    public String loginMember(){
+        return "/member/memberLoginForm";
+    }
+    
+    @GetMapping("/login/error")
+    public String loginError(Model model){
+        model.addAttribute("loginErrorMsg","아이디 혹은 비밀번호를 확인해주세요");
+
+        // 에러 발생 시 여기로 와서 메시지를 에튜리부트 받은 후 다시 돌아간다!
+
+        return "member/memberLoginForm";
+    }
+}
Index: shop/shop/src/main/java/com/keduit/shop/controller/OrderController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/shop/shop/src/main/java/com/keduit/shop/controller/OrderController.java b/shop/shop/src/main/java/com/keduit/shop/controller/OrderController.java
new file mode 100644
--- /dev/null	(revision 74a8b684730665ca64dd7cf129c1f96483c96c29)
+++ b/shop/shop/src/main/java/com/keduit/shop/controller/OrderController.java	(revision 74a8b684730665ca64dd7cf129c1f96483c96c29)
@@ -0,0 +1,89 @@
+package com.keduit.shop.controller;
+
+
+import com.keduit.shop.dto.OrderDTO;
+import com.keduit.shop.dto.OrderHistDTO;
+import com.keduit.shop.service.OrderService;
+import lombok.RequiredArgsConstructor;
+import org.springframework.data.domain.Page;
+import org.springframework.data.domain.PageRequest;
+import org.springframework.data.domain.Pageable;
+import org.springframework.http.HttpStatus;
+import org.springframework.http.ResponseEntity;
+import org.springframework.stereotype.Controller;
+import org.springframework.ui.Model;
+import org.springframework.validation.BindingResult;
+import org.springframework.validation.FieldError;
+import org.springframework.web.bind.annotation.*;
+
+import javax.validation.Valid;
+import java.security.Principal;
+import java.util.List;
+import java.util.Optional;
+
+@Controller
+@RequiredArgsConstructor
+public class OrderController {
+
+    private final OrderService orderService;
+
+    @PostMapping("/order")
+    public @ResponseBody ResponseEntity order(@RequestBody @Valid OrderDTO orderDTO,
+                                           BindingResult bindingResult, Principal principal){
+        
+        // 비동기 처리를 위해 @RequestBody , @ResponseBody를 사용
+        // @ResponseBody : 자바 객체를 HTTP요청의 body로 전달
+        // @RequestBody: HTTP 요청의 본문 Body 에 담긴 내용을 자바 객체로 전달
+        
+        // 주문 정보를 받는 orderDTO객체에 데이터 바인딩 시 에러가 있는지 검사
+        if(bindingResult.hasErrors()){
+            StringBuilder sb = new StringBuilder();
+            List<FieldError> fieldErrors = bindingResult.getFieldErrors();
+            for (FieldError fieldError: fieldErrors){
+                sb.append(fieldError.getDefaultMessage());
+            }
+            return new ResponseEntity<String>(sb.toString(), HttpStatus.BAD_REQUEST );
+        }
+        // principal : @Controller 에노테이션이 선언된 클래스에서 
+        // 메소드 인자로 pricipal을 넘겨줄 경우 해당 객체에 직접 접근이 가능하며,
+        // pricipal 객체에서 현재 로그인 한 회원의 이메일 정보를 조회함
+        String email = principal.getName();
+        Long orderId;
+
+        try{
+            // 화면에서 넘어온 주문 정보와 이메일 정보를 이용하여 주문로직을 가진 service를 호출함
+            orderId = orderService.order(orderDTO, email);
+        }catch (Exception e){
+            return new ResponseEntity(e.getMessage(), HttpStatus.BAD_REQUEST);
+        }
+        // 결과값으로 생성된 주문 번호와 요청이 성공임을 나타내는 Http응답을 반환
+        return new ResponseEntity(orderId, HttpStatus.OK);
+    }
+
+    @GetMapping({"/orders", "/orders/{page}"})
+    public String orderHist(@PathVariable("page")Optional<Integer> page,
+                            Principal principal, Model model){
+        Pageable pageable = PageRequest.of(page.isPresent()? page.get() : 0, 4  );
+
+        Page<OrderHistDTO> orderHistDTOList =
+                orderService.getOrderList(principal.getName(), pageable);
+
+        System.out.println(orderHistDTOList.stream().findFirst()+"---------------------------");
+        model.addAttribute("orders",orderHistDTOList);
+        model.addAttribute("page", pageable.getPageNumber());
+        model.addAttribute("maxPage", 5);
+        return "order/orderHist";
+    }
+
+    // url = "/order/" + orderId + "/cancel"
+    @PostMapping("/order/{orderId}/cancel")
+    public @ResponseBody ResponseEntity cancelOrder(@PathVariable("orderId") Long orderId,
+                                                    Principal principal){
+        if(!orderService.validateOrder(orderId, principal.getName())){
+            return new ResponseEntity("주문 취소 권한이 없습니다.", HttpStatus.FORBIDDEN);
+        }
+
+        orderService.cancelOrder(orderId);
+        return new ResponseEntity<Long>(orderId, HttpStatus.OK);
+    }
+}
Index: shop/shop/src/main/java/com/keduit/shop/controller/ThymeleafExController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/shop/shop/src/main/java/com/keduit/shop/controller/ThymeleafExController.java b/shop/shop/src/main/java/com/keduit/shop/controller/ThymeleafExController.java
new file mode 100644
--- /dev/null	(revision 74a8b684730665ca64dd7cf129c1f96483c96c29)
+++ b/shop/shop/src/main/java/com/keduit/shop/controller/ThymeleafExController.java	(revision 74a8b684730665ca64dd7cf129c1f96483c96c29)
@@ -0,0 +1,105 @@
+package com.keduit.shop.controller;
+
+import com.keduit.shop.dto.ItemDTO;
+import org.springframework.stereotype.Controller;
+import org.springframework.ui.Model;
+import org.springframework.web.bind.annotation.GetMapping;
+import org.springframework.web.bind.annotation.RequestMapping;
+
+import java.time.LocalDateTime;
+import java.util.ArrayList;
+import java.util.List;
+
+
+@Controller
+@RequestMapping("/thymeleaf")
+public class ThymeleafExController {
+
+
+    // jsp 에서 태그립 ( c: ~~ ) 대신 사용하는것이 thymeleaf
+    @GetMapping("/ex01")
+    public String thymeleafExample01(Model model){
+        model.addAttribute("data","타입리프 예제입니다. ");
+        return "thymeleafEx/thymeleafEx01";
+    }
+
+    @GetMapping("/ex02")
+    public String thymeleafExample02(Model model){
+        ItemDTO itemDto = new ItemDTO();
+        itemDto.setItemNm("테스트 상품명");
+        itemDto.setItemDetail("테스트 상세설명");
+        itemDto.setPrice(10000);
+        itemDto.setRegTime(LocalDateTime.now());
+
+        model.addAttribute("itemDTO",itemDto);
+
+        return "thymeleafEx/thymeleafEx02";
+    }
+
+    @GetMapping("/ex03")
+    public String thymeleafExampl03(Model model){
+        List<ItemDTO> itemDTOList = new ArrayList<ItemDTO>();
+
+        for (int i = 1; i <= 10; i++) {
+        ItemDTO itemDTO = new ItemDTO();
+        itemDTO.setItemNm("테스트 상품" + i);
+        itemDTO.setItemDetail("테스트 상세 설명" + i);
+        itemDTO.setPrice(1000 * i);
+        itemDTO.setRegTime(LocalDateTime.now());
+        itemDTOList.add(itemDTO);
+        }
+        model.addAttribute("itemDTOList", itemDTOList);
+        return "thymeleafEx/thymeleafEx03";
+
+    }
+
+    @GetMapping("/ex04")
+    public String thymeleafExampl04(Model model){
+        List<ItemDTO> itemDTOList = new ArrayList<ItemDTO>();
+
+        for (int i = 1; i <= 10; i++) {
+            ItemDTO itemDTO = new ItemDTO();
+            itemDTO.setItemNm("테스트 상품" + i);
+            itemDTO.setItemDetail("테스트 상세 설명" + i);
+            itemDTO.setPrice(1000 * i);
+            itemDTO.setRegTime(LocalDateTime.now());
+            itemDTOList.add(itemDTO);
+        }
+        model.addAttribute("itemDTOList", itemDTOList);
+        return "thymeleafEx/thymeleafEx04";
+
+    }
+
+    @GetMapping("/ex05")
+    public String thymeleafExampl05(Model model){
+        List<ItemDTO> itemDTOList = new ArrayList<ItemDTO>();
+
+        for (int i = 1; i <= 10; i++) {
+            ItemDTO itemDTO = new ItemDTO();
+            itemDTO.setItemNm("테스트 상품" + i);
+            itemDTO.setItemDetail("테스트 상세 설명" + i);
+            itemDTO.setPrice(1000 * i);
+            itemDTO.setRegTime(LocalDateTime.now());
+            itemDTOList.add(itemDTO);
+        }
+        model.addAttribute("itemDTOList", itemDTOList);
+        return "thymeleafEx/thymeleafEx05";
+
+    }
+    @GetMapping("/ex06")
+    public String thymeleafExample06() {
+        return "thymeleafEx/thymeleafEx06";
+    }
+
+    @GetMapping("/ex07")
+    public String thymeleafExample07(String param1, String param2, Model model){
+        model.addAttribute("param1", param1);
+        model.addAttribute("param2", param2);
+        return "thymeleafEx/thymeleafEx07";
+    }
+
+    @GetMapping("/ex08")
+    public String thymeleafExample08(){
+        return "thymeleafEx/thymeleafEx08";
+    }
+}
Index: shop/shop/src/main/java/com/keduit/shop/dto/CartDetailDTO.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/shop/shop/src/main/java/com/keduit/shop/dto/CartDetailDTO.java b/shop/shop/src/main/java/com/keduit/shop/dto/CartDetailDTO.java
new file mode 100644
--- /dev/null	(revision 74a8b684730665ca64dd7cf129c1f96483c96c29)
+++ b/shop/shop/src/main/java/com/keduit/shop/dto/CartDetailDTO.java	(revision 74a8b684730665ca64dd7cf129c1f96483c96c29)
@@ -0,0 +1,25 @@
+package com.keduit.shop.dto;
+
+import lombok.Getter;
+import lombok.Setter;
+import lombok.ToString;
+
+@Getter
+@Setter
+@ToString
+public class CartDetailDTO {
+
+    private Long cartItemId;
+    private String itemNm;
+    private int price;
+    private int count;
+    private String imgUrl;
+
+    public CartDetailDTO(Long cartItemId, String itemNm, int price, int count, String imgUrl) {
+        this.cartItemId = cartItemId;
+        this.itemNm = itemNm;
+        this.price = price;
+        this.count = count;
+        this.imgUrl = imgUrl;
+    }
+}
Index: shop/shop/src/main/java/com/keduit/shop/dto/CartItemDTO.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/shop/shop/src/main/java/com/keduit/shop/dto/CartItemDTO.java b/shop/shop/src/main/java/com/keduit/shop/dto/CartItemDTO.java
new file mode 100644
--- /dev/null	(revision 74a8b684730665ca64dd7cf129c1f96483c96c29)
+++ b/shop/shop/src/main/java/com/keduit/shop/dto/CartItemDTO.java	(revision 74a8b684730665ca64dd7cf129c1f96483c96c29)
@@ -0,0 +1,19 @@
+package com.keduit.shop.dto;
+
+import lombok.Getter;
+import lombok.Setter;
+import lombok.ToString;
+
+import javax.validation.constraints.Min;
+import javax.validation.constraints.NotNull;
+
+@Setter
+@Getter
+@ToString
+public class CartItemDTO {
+    @NotNull(message = "상품 아이디는 필수 입력입니다")
+    private Long itemId;
+
+    @Min(value=1, message = "최소 1개 이상 담아주세요")
+    private int count;
+}
Index: shop/shop/src/main/java/com/keduit/shop/dto/CartOrderDTO.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/shop/shop/src/main/java/com/keduit/shop/dto/CartOrderDTO.java b/shop/shop/src/main/java/com/keduit/shop/dto/CartOrderDTO.java
new file mode 100644
--- /dev/null	(revision 74a8b684730665ca64dd7cf129c1f96483c96c29)
+++ b/shop/shop/src/main/java/com/keduit/shop/dto/CartOrderDTO.java	(revision 74a8b684730665ca64dd7cf129c1f96483c96c29)
@@ -0,0 +1,19 @@
+package com.keduit.shop.dto;
+
+import lombok.Getter;
+import lombok.Setter;
+import lombok.ToString;
+
+import java.util.List;
+
+@Getter
+@Setter
+@ToString
+public class CartOrderDTO {
+
+    // 장바구니에서 여러개의 상품을 주문하므로
+    // CartOrderDTO 클래스의 자기 자신을 List로 가지고 있는 cartorderDTOList를 선언함.
+
+    private Long cartItemId;
+    private List<CartOrderDTO> cartOrderDTOList;
+}
Index: shop/shop/src/main/java/com/keduit/shop/dto/ItemDTO.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/shop/shop/src/main/java/com/keduit/shop/dto/ItemDTO.java b/shop/shop/src/main/java/com/keduit/shop/dto/ItemDTO.java
new file mode 100644
--- /dev/null	(revision 74a8b684730665ca64dd7cf129c1f96483c96c29)
+++ b/shop/shop/src/main/java/com/keduit/shop/dto/ItemDTO.java	(revision 74a8b684730665ca64dd7cf129c1f96483c96c29)
@@ -0,0 +1,22 @@
+package com.keduit.shop.dto;
+
+import lombok.Getter;
+import lombok.Setter;
+import lombok.ToString;
+
+import java.time.LocalDateTime;
+
+@Setter
+@Getter
+@ToString
+public class ItemDTO {
+
+    private Long id;
+    private String itemNm;
+    private Integer price;
+    private String itemDetail;
+    private String sellStaCd;
+    private LocalDateTime regTime;
+    private LocalDateTime updateTime;
+
+}
Index: shop/shop/src/main/java/com/keduit/shop/dto/ItemFormDTO.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/shop/shop/src/main/java/com/keduit/shop/dto/ItemFormDTO.java b/shop/shop/src/main/java/com/keduit/shop/dto/ItemFormDTO.java
new file mode 100644
--- /dev/null	(revision 74a8b684730665ca64dd7cf129c1f96483c96c29)
+++ b/shop/shop/src/main/java/com/keduit/shop/dto/ItemFormDTO.java	(revision 74a8b684730665ca64dd7cf129c1f96483c96c29)
@@ -0,0 +1,50 @@
+package com.keduit.shop.dto;
+
+import com.keduit.shop.constant.ItemSellStatus;
+import com.keduit.shop.entity.Item;
+import lombok.Getter;
+import lombok.Setter;
+import lombok.ToString;
+import org.modelmapper.ModelMapper;
+
+import javax.validation.constraints.NotBlank;
+import javax.validation.constraints.NotNull;
+import java.time.LocalDateTime;
+import java.util.ArrayList;
+import java.util.List;
+
+@Getter
+@Setter
+@ToString
+public class ItemFormDTO {
+
+    private Long id;
+
+    @NotBlank(message = "상품명은 필수 입력입니다.")
+    private String itemNm;
+    @NotNull(message = "가격은 필수 입력입니다.")
+    private Integer price;
+    @NotBlank(message = "상품 상세 내용은 필수 입력입니다.")
+    private String itemDetail;
+
+    @NotNull(message = "재고수량은 필수 입력입니다.")
+    private Integer stockNumber;
+
+    private ItemSellStatus itemSellStatus;
+
+    private List<ItemImgDTO> itemImgDTOList = new ArrayList<>();
+
+    private List<Long> itemImgIds = new ArrayList<>();
+
+    private static ModelMapper modelMapper = new ModelMapper();
+
+    // ItemFormDTO -> Item
+    public Item createItem(){
+        return modelMapper.map(this, Item.class);
+    }
+
+    //  Item -> ItemFormDTO
+    public static ItemFormDTO of(Item item){
+        return modelMapper.map(item, ItemFormDTO.class);
+    }
+}
Index: shop/shop/src/main/java/com/keduit/shop/dto/ItemImgDTO.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/shop/shop/src/main/java/com/keduit/shop/dto/ItemImgDTO.java b/shop/shop/src/main/java/com/keduit/shop/dto/ItemImgDTO.java
new file mode 100644
--- /dev/null	(revision 74a8b684730665ca64dd7cf129c1f96483c96c29)
+++ b/shop/shop/src/main/java/com/keduit/shop/dto/ItemImgDTO.java	(revision 74a8b684730665ca64dd7cf129c1f96483c96c29)
@@ -0,0 +1,26 @@
+package com.keduit.shop.dto;
+
+import com.keduit.shop.entity.ItemImg;
+import lombok.Getter;
+import lombok.Setter;
+import lombok.ToString;
+import org.modelmapper.ModelMapper;
+
+@Getter
+@Setter
+@ToString
+public class ItemImgDTO {
+
+    private Long id;
+    private String imgName;
+    private String oriImgName;
+    private String imgUrl;
+    private String repimgYn;
+
+    // 멤버 변수로 modelmapper 객체를 추가함.
+    private static ModelMapper modelMapper = new ModelMapper();
+
+    public static ItemImgDTO of(ItemImg itemImg){
+        return modelMapper.map(itemImg, ItemImgDTO.class);
+    }
+}
Index: shop/shop/src/main/java/com/keduit/shop/dto/ItemSearchDTO.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/shop/shop/src/main/java/com/keduit/shop/dto/ItemSearchDTO.java b/shop/shop/src/main/java/com/keduit/shop/dto/ItemSearchDTO.java
new file mode 100644
--- /dev/null	(revision 74a8b684730665ca64dd7cf129c1f96483c96c29)
+++ b/shop/shop/src/main/java/com/keduit/shop/dto/ItemSearchDTO.java	(revision 74a8b684730665ca64dd7cf129c1f96483c96c29)
@@ -0,0 +1,30 @@
+package com.keduit.shop.dto;
+
+import com.keduit.shop.constant.ItemSellStatus;
+import lombok.Getter;
+import lombok.Setter;
+import lombok.ToString;
+
+@Getter
+@Setter
+@ToString
+public class ItemSearchDTO {
+
+
+    private String searchDateType;
+    // all: 전체
+    // 1d: 최근 하루동안 등록된 상품
+    // 1w: 최근 1주 "     "    "
+    // 1m: 최근 1달
+    // 6m: 최근 6개월 동안  ""
+
+    private ItemSellStatus searchSellStatus;
+
+    private String searchBy;
+    // itemNm: 상품명으로 조회
+    // createBy: 상품 등록자 아이디
+
+    private String searchQuery = ""; //???
+    // 조회할 검색어를 저장할 변수
+}
+
Index: shop/shop/src/main/java/com/keduit/shop/dto/MainItemDTO.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/shop/shop/src/main/java/com/keduit/shop/dto/MainItemDTO.java b/shop/shop/src/main/java/com/keduit/shop/dto/MainItemDTO.java
new file mode 100644
--- /dev/null	(revision 74a8b684730665ca64dd7cf129c1f96483c96c29)
+++ b/shop/shop/src/main/java/com/keduit/shop/dto/MainItemDTO.java	(revision 74a8b684730665ca64dd7cf129c1f96483c96c29)
@@ -0,0 +1,35 @@
+package com.keduit.shop.dto;
+
+import com.querydsl.core.annotations.QueryProjection;
+import lombok.Getter;
+import lombok.Setter;
+import lombok.ToString;
+
+@Getter
+@Setter
+@ToString
+public class MainItemDTO {
+
+
+    private Long id;
+
+    private String itemNm;
+
+    private String itemDetail;
+
+    private String itemUrl;
+
+    private Integer price;
+
+
+// QueryProjection 사용시 생성자는 QueryDsl에 의존.
+    // QueryDsl로 결과 조회 시 MainItemDTO 객체로 바로 받아 옴. // 메이븐 컴파일 할것.
+    @QueryProjection
+    public MainItemDTO(Long id, String itemNm, String itemDetail, String itemUrl, Integer price){
+        this.id = id;
+        this.itemNm = itemNm;
+        this.itemDetail = itemDetail;
+        this.itemUrl = itemUrl;
+        this.price = price;
+    }
+}
Index: shop/shop/src/main/java/com/keduit/shop/dto/MemberFormDTO.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/shop/shop/src/main/java/com/keduit/shop/dto/MemberFormDTO.java b/shop/shop/src/main/java/com/keduit/shop/dto/MemberFormDTO.java
new file mode 100644
--- /dev/null	(revision 74a8b684730665ca64dd7cf129c1f96483c96c29)
+++ b/shop/shop/src/main/java/com/keduit/shop/dto/MemberFormDTO.java	(revision 74a8b684730665ca64dd7cf129c1f96483c96c29)
@@ -0,0 +1,28 @@
+package com.keduit.shop.dto;
+
+import lombok.Getter;
+import lombok.Setter;
+import org.hibernate.validator.constraints.Length;
+
+import javax.validation.constraints.Email;
+import javax.validation.constraints.NotBlank;
+import javax.validation.constraints.NotEmpty;
+
+@Getter
+@Setter
+public class MemberFormDTO {
+
+    @NotBlank(message = "이름은 필수 입력입니다.")
+    private String name;
+
+    @NotEmpty(message = "이메일은 필수 입력입니다.")
+    @Email(message = "이메일 형식으로 입력해주세요.")
+    private String email;
+
+    @NotEmpty(message = "비밀번호는 필수 입력입니다.")
+    @Length(min = 8, max = 16, message = "비밀번호는 8자 이상, 16자 이하로 입력해주세요.")
+    private String password;
+
+    @NotEmpty(message = "주소는 필수 입력입니다.")
+    private String address;
+}
Index: shop/shop/src/main/java/com/keduit/shop/dto/OrderDTO.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/shop/shop/src/main/java/com/keduit/shop/dto/OrderDTO.java b/shop/shop/src/main/java/com/keduit/shop/dto/OrderDTO.java
new file mode 100644
--- /dev/null	(revision 74a8b684730665ca64dd7cf129c1f96483c96c29)
+++ b/shop/shop/src/main/java/com/keduit/shop/dto/OrderDTO.java	(revision 74a8b684730665ca64dd7cf129c1f96483c96c29)
@@ -0,0 +1,23 @@
+package com.keduit.shop.dto;
+
+import lombok.Getter;
+import lombok.Setter;
+import lombok.ToString;
+
+import javax.validation.constraints.Max;
+import javax.validation.constraints.Min;
+import javax.validation.constraints.NotNull;
+
+@Getter
+@Setter
+@ToString
+public class OrderDTO {
+
+    @NotNull(message = "상품 아이디는 필수 입력입니다.")
+    private Long itemId;
+
+    @Min(value = 1, message = "최소 주문 수량은 1개입니다.")
+    @Max(value = 999, message = "최대 주문 수량은 999개입니다.")
+    private int count;
+
+}
Index: shop/shop/src/main/java/com/keduit/shop/dto/OrderHistDTO.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/shop/shop/src/main/java/com/keduit/shop/dto/OrderHistDTO.java b/shop/shop/src/main/java/com/keduit/shop/dto/OrderHistDTO.java
new file mode 100644
--- /dev/null	(revision 74a8b684730665ca64dd7cf129c1f96483c96c29)
+++ b/shop/shop/src/main/java/com/keduit/shop/dto/OrderHistDTO.java	(revision 74a8b684730665ca64dd7cf129c1f96483c96c29)
@@ -0,0 +1,36 @@
+package com.keduit.shop.dto;
+
+import com.keduit.shop.constant.OrderStatus;
+import com.keduit.shop.entity.Order;
+import lombok.Getter;
+import lombok.Setter;
+import lombok.ToString;
+
+import java.time.format.DateTimeFormatter;
+import java.util.ArrayList;
+import java.util.List;
+
+@Setter
+@Getter
+@ToString
+public class OrderHistDTO {
+
+    private Long orderId;
+    private String orderDate;
+    private OrderStatus orderStatus;
+
+    // 기본 세터 아님. 체크.
+    public OrderHistDTO(Order order) {
+        this.orderId = order.getId();
+        this.orderDate = order.getOrderDate().format(DateTimeFormatter.ofPattern("yyyy-MM-dd HH:mm"));
+        this.orderStatus = order.getOrderStatus();
+    }
+
+    // 주문 상품 리스트
+    private List<OrderItemDTO> orderItemDTOList = new ArrayList<>();
+
+    // orderItemDTO를 주문 상품 리스트에 추가
+    public void addOrderItemDTO(OrderItemDTO orderItemDTO){
+        orderItemDTOList.add(orderItemDTO);
+    }
+}
Index: shop/shop/src/main/java/com/keduit/shop/dto/OrderItemDTO.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/shop/shop/src/main/java/com/keduit/shop/dto/OrderItemDTO.java b/shop/shop/src/main/java/com/keduit/shop/dto/OrderItemDTO.java
new file mode 100644
--- /dev/null	(revision 74a8b684730665ca64dd7cf129c1f96483c96c29)
+++ b/shop/shop/src/main/java/com/keduit/shop/dto/OrderItemDTO.java	(revision 74a8b684730665ca64dd7cf129c1f96483c96c29)
@@ -0,0 +1,36 @@
+package com.keduit.shop.dto;
+
+import com.keduit.shop.entity.OrderItem;
+import lombok.Getter;
+import lombok.Setter;
+import lombok.ToString;
+
+@Getter
+@Setter
+@ToString
+public class OrderItemDTO {
+
+    private String itemNm;
+
+    private int count;
+    private int orderPrice;
+    private String imgUrl;
+
+/*    public OrderItemDTO(OrderItem orderItem,String imgUrl) {
+        this.itemNm = itemNm;
+        this.count = count;
+        this.orderPrice = orderPrice;
+        this.imgUrl = imgUrl;
+    }*/
+
+    // 생성자를 호출하면 파라미터를 orderItem 객체와 ingUrl 자체로 받음.
+    // 그러므로 이건 화면에 뿌려주기 위한 전용 DTO? 뭔소리?
+    //
+public OrderItemDTO(OrderItem orderItem, String imgUrl){
+    this.itemNm = orderItem.getItem().getItemNm();
+    this.count = orderItem.getCount();
+    this.orderPrice = orderItem.getOrderPrice();
+    this.imgUrl = imgUrl;
+}
+
+}
Index: shop/shop/src/main/java/com/keduit/shop/entity/BaseEntity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/shop/shop/src/main/java/com/keduit/shop/entity/BaseEntity.java b/shop/shop/src/main/java/com/keduit/shop/entity/BaseEntity.java
new file mode 100644
--- /dev/null	(revision 74a8b684730665ca64dd7cf129c1f96483c96c29)
+++ b/shop/shop/src/main/java/com/keduit/shop/entity/BaseEntity.java	(revision 74a8b684730665ca64dd7cf129c1f96483c96c29)
@@ -0,0 +1,26 @@
+package com.keduit.shop.entity;
+
+import lombok.Getter;
+import org.springframework.data.annotation.CreatedBy;
+import org.springframework.data.annotation.LastModifiedBy;
+import org.springframework.data.jpa.domain.support.AuditingEntityListener;
+
+import javax.persistence.Column;
+import javax.persistence.EntityListeners;
+import javax.persistence.MappedSuperclass;
+
+
+@EntityListeners(value={AuditingEntityListener.class})  // Auditing기능을 적용
+@MappedSuperclass
+@Getter
+public abstract class BaseEntity extends BaseTimeEntity{
+    // 시간 2 작성or수정자 2 다 받고 싶으면 이거
+    // 시간 2 만 받고싶으면 baseTimeEntity
+
+    @CreatedBy
+    @Column(updatable = false)
+    private String createdBy;
+
+    @LastModifiedBy
+    private String modifiedBy;
+}
Index: shop/shop/src/main/java/com/keduit/shop/entity/BaseTimeEntity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/shop/shop/src/main/java/com/keduit/shop/entity/BaseTimeEntity.java b/shop/shop/src/main/java/com/keduit/shop/entity/BaseTimeEntity.java
new file mode 100644
--- /dev/null	(revision 74a8b684730665ca64dd7cf129c1f96483c96c29)
+++ b/shop/shop/src/main/java/com/keduit/shop/entity/BaseTimeEntity.java	(revision 74a8b684730665ca64dd7cf129c1f96483c96c29)
@@ -0,0 +1,26 @@
+package com.keduit.shop.entity;
+
+import lombok.Getter;
+import lombok.Setter;
+import org.springframework.data.annotation.CreatedDate;
+import org.springframework.data.annotation.LastModifiedDate;
+import org.springframework.data.jpa.domain.support.AuditingEntityListener;
+
+import javax.persistence.Column;
+import javax.persistence.EntityListeners;
+import javax.persistence.MappedSuperclass;
+import java.time.LocalDateTime;
+
+@EntityListeners(value={AuditingEntityListener.class})  // Auditing 적용 대상
+@MappedSuperclass  // 공통 매핑 정보가 필요할 때 사용. 자식클래스에게  상속정보를 제공하기위해 붙임.
+@Setter
+@Getter
+public abstract class BaseTimeEntity {
+
+    @CreatedDate
+    @Column(updatable = false) // 최초 등록일자는 업데이트되선 안됌.
+    private LocalDateTime regTime;
+
+    @LastModifiedDate
+    private LocalDateTime updateTime;
+}
Index: shop/shop/src/main/java/com/keduit/shop/entity/Cart.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/shop/shop/src/main/java/com/keduit/shop/entity/Cart.java b/shop/shop/src/main/java/com/keduit/shop/entity/Cart.java
new file mode 100644
--- /dev/null	(revision 74a8b684730665ca64dd7cf129c1f96483c96c29)
+++ b/shop/shop/src/main/java/com/keduit/shop/entity/Cart.java	(revision 74a8b684730665ca64dd7cf129c1f96483c96c29)
@@ -0,0 +1,31 @@
+package com.keduit.shop.entity;
+
+import lombok.*;
+
+import javax.persistence.*;
+
+@Entity
+@Getter
+@Setter
+@ToString
+@NoArgsConstructor
+@AllArgsConstructor
+public class Cart extends BaseEntity{
+
+    @Id
+    @Column(name = "cart_id")
+    @GeneratedValue(strategy = GenerationType.IDENTITY)
+    private Long id;
+
+    // EAGER : 즉시 로딩 전략 = cart를 읽을때 member를 바로 읽어옴.
+    // one to one, one to many 는 EAGER 전략이 default 임
+    @OneToOne(fetch = FetchType.LAZY) // 1:1 대응. 카트와 회원의 관계.
+    @JoinColumn(name="member_id") // 조인. 포링키? 외례키 지정
+    private Member member; // 1:1 대응이기에 행이 하나밖에 들어가지 못하는가?
+
+    public static Cart createCart(Member member){
+        Cart cart = new Cart();
+        cart.setMember(member);
+        return cart;
+    }
+}
Index: shop/shop/src/main/java/com/keduit/shop/entity/CartItem.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/shop/shop/src/main/java/com/keduit/shop/entity/CartItem.java b/shop/shop/src/main/java/com/keduit/shop/entity/CartItem.java
new file mode 100644
--- /dev/null	(revision 74a8b684730665ca64dd7cf129c1f96483c96c29)
+++ b/shop/shop/src/main/java/com/keduit/shop/entity/CartItem.java	(revision 74a8b684730665ca64dd7cf129c1f96483c96c29)
@@ -0,0 +1,46 @@
+package com.keduit.shop.entity;
+
+import lombok.Getter;
+import lombok.Setter;
+import lombok.ToString;
+
+import javax.persistence.*;
+
+@Entity
+@Getter
+@Setter
+@ToString
+@Table(name = "cart_item")
+public class CartItem extends BaseEntity {
+
+    @Id
+    @GeneratedValue(strategy = GenerationType.IDENTITY) // 비워두면 디폴트값 = 오토
+    @Column(name = "cart_item_id")
+    private Long id;
+
+    @ManyToOne(fetch = FetchType.LAZY) // 디폴트 값 eager
+    @JoinColumn(name = "cart_id")
+    private Cart cart;
+
+    @ManyToOne(fetch = FetchType.LAZY)
+    @JoinColumn(name = "item_id")
+    private Item item;
+
+    private int count;
+
+    public static CartItem createCartItem(Cart cart, Item item, int count) {
+        CartItem cartItem = new CartItem();
+        cartItem.setCart(cart);
+        cartItem.setItem(item);
+        cartItem.setCount(count);
+        return cartItem;
+    }
+
+    public void addCount(int count) {
+        this.count += count;
+    }
+
+    public void updateCount(int count) {
+        this.count = count;
+    }
+}
Index: shop/shop/src/main/java/com/keduit/shop/entity/Item.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/shop/shop/src/main/java/com/keduit/shop/entity/Item.java b/shop/shop/src/main/java/com/keduit/shop/entity/Item.java
new file mode 100644
--- /dev/null	(revision 74a8b684730665ca64dd7cf129c1f96483c96c29)
+++ b/shop/shop/src/main/java/com/keduit/shop/entity/Item.java	(revision 74a8b684730665ca64dd7cf129c1f96483c96c29)
@@ -0,0 +1,79 @@
+package com.keduit.shop.entity;
+
+import com.keduit.shop.constant.ItemSellStatus;
+import com.keduit.shop.dto.ItemFormDTO;
+import com.keduit.shop.exception.OutOfStockException;
+import lombok.*;
+import org.hibernate.annotations.CreationTimestamp;
+
+import javax.persistence.*;
+import java.time.LocalDateTime;
+
+@Entity
+@Getter
+@Setter
+@ToString
+@NoArgsConstructor
+@AllArgsConstructor
+public class Item extends BaseEntity{
+// 테이블으름은 이 클레스의 이름과 같다 다르게 할 수도는 있음.
+
+    // 여기서 칼럼명과 필드명을 다르게 한 이유는
+    // 그냥 다른대서도 id 쓸텐데 헷갈리니까. 같아도 상관은 없음.
+    // generatedValue 이부분은 1씩 증가하는 인덱스값
+    @Id
+    @GeneratedValue(strategy = GenerationType.IDENTITY)
+    @Column(name = "item_id")
+    private Long id; // 상품코드!!
+
+    // 낫널. 길이 50
+    @Column(nullable = false, length = 50)
+    private String itemNm; // 상품명!!
+
+
+
+    // 칼럼 내용의 디폴트 값은 변수이름. 대문자일 경우 자동으로 언더바가 붙기때문에 소문자로 하는게 좋음.
+    // 예. 칼럼 네임(직접 주기) 혹은 필드 명이 aBc 인 경우 db에선 a_bc로 받아들인다.
+    // 그래서 필드명은 그냥 모두 소문자로 쓰이는 경우도 있음. _ 붙이기 싫으니까
+    @Column(name="price", nullable = false)
+    private int price; // 가격!!
+
+    @Column(nullable = false)
+    private int stockNumber; // 재고수량!!
+
+    @Lob // lenth가 매우 긴 경우??
+    @Column(nullable = false)
+    private String itemDetail; // 상품상세설명
+
+    @Enumerated(EnumType.STRING)
+    private ItemSellStatus itemSellStatus;  // 상품 판매 현황
+
+    // 공부할 부분!
+    public void updateItem(ItemFormDTO itemFormDTO){
+        this.itemNm = itemFormDTO.getItemNm();
+        this.price = itemFormDTO.getPrice();
+        this.stockNumber = itemFormDTO.getStockNumber();
+        this.itemDetail = itemFormDTO.getItemDetail();
+        this.itemSellStatus = itemFormDTO.getItemSellStatus();
+    }
+
+    public void removeStock(int stockNumber){
+        int restStock = this.stockNumber - stockNumber;
+        if(restStock < 0){
+            throw new OutOfStockException("상품 재고가 부족합니다 (현재 재고 수량 : " + this.stockNumber + ")" );
+        }
+        this.stockNumber = restStock;
+    }
+
+    // 주문 취소 / 재고 증가
+    public void addStock(int stockNumber){
+        this.stockNumber += stockNumber;
+    }
+
+    // 따로 만든거 상속받아 쓰면 됌.
+/*    private LocalDateTime regDate; // 등록시간
+
+    @CreationTimestamp // 계속 업데이트될 수 있기 때문에 붙임.
+    private LocalDateTime updateTime; // 상품을 수정한 시간.*/
+
+}
Index: shop/shop/src/main/java/com/keduit/shop/entity/ItemImg.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/shop/shop/src/main/java/com/keduit/shop/entity/ItemImg.java b/shop/shop/src/main/java/com/keduit/shop/entity/ItemImg.java
new file mode 100644
--- /dev/null	(revision 74a8b684730665ca64dd7cf129c1f96483c96c29)
+++ b/shop/shop/src/main/java/com/keduit/shop/entity/ItemImg.java	(revision 74a8b684730665ca64dd7cf129c1f96483c96c29)
@@ -0,0 +1,35 @@
+package com.keduit.shop.entity;
+
+import lombok.Getter;
+import lombok.Setter;
+import lombok.ToString;
+
+import javax.persistence.*;
+
+@Entity
+@Table(name="item_img")
+@Getter
+@Setter@ToString
+public class ItemImg extends BaseEntity{
+
+    @Id
+    @Column(name = "item_img_id")
+    @GeneratedValue(strategy = GenerationType.IDENTITY)
+    private Long id;
+
+    private String imgName; // 이미지 파일명
+    private String oriImgName; // 원본 이미지 파일명
+    private String imgUrl;
+    private String repimgYn; // 대표 이미지 여부
+
+    @ManyToOne(fetch = FetchType.LAZY)
+    @JoinColumn(name = "item_id")
+    private  Item item;
+
+    //  이미지 정보를 업데이트하는 메소드
+    public void updateItemImg(String oriImgName, String imgName, String imgUrl){
+        this.oriImgName = oriImgName;
+        this.imgName = imgName;
+        this.imgUrl = imgUrl;
+    }
+}
\ No newline at end of file
Index: shop/shop/src/main/java/com/keduit/shop/entity/Member.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/shop/shop/src/main/java/com/keduit/shop/entity/Member.java b/shop/shop/src/main/java/com/keduit/shop/entity/Member.java
new file mode 100644
--- /dev/null	(revision 74a8b684730665ca64dd7cf129c1f96483c96c29)
+++ b/shop/shop/src/main/java/com/keduit/shop/entity/Member.java	(revision 74a8b684730665ca64dd7cf129c1f96483c96c29)
@@ -0,0 +1,49 @@
+package com.keduit.shop.entity;
+
+import com.keduit.shop.constant.Role;
+import com.keduit.shop.dto.MemberFormDTO;
+import lombok.Getter;
+import lombok.Setter;
+import lombok.ToString;
+import org.springframework.security.crypto.password.PasswordEncoder;
+
+import javax.persistence.*;
+
+@Entity
+@Getter
+@Setter
+@ToString
+public class Member extends BaseEntity{
+
+    @Id
+    @Column(name="member_id")
+    @GeneratedValue(strategy = GenerationType.IDENTITY)
+    private Long id;
+
+    private String name;
+
+    @Column(unique = true) // 중복허용 불가
+    private String email;
+
+    private String password;
+
+    private String address;
+
+    @Enumerated(EnumType.STRING)
+    private Role role;
+
+    // 테스트 인설트를 위한 편의 메서드?
+    public  static Member createMember(MemberFormDTO memberFormDTO,
+                                       PasswordEncoder passwordEncoder){
+        Member member = new Member();
+        member.setName(memberFormDTO.getName());
+        member.setEmail(memberFormDTO.getEmail());
+        member.setAddress(memberFormDTO.getAddress());
+        String password = passwordEncoder.encode(memberFormDTO.getPassword());
+        member.setPassword(password);
+        member.setRole(Role.USER);
+        return member;
+        // 이부분에서 db다 담을 member VO를 form으로 부터 받아 저장해 놓긴했지만
+        // 아직 db에 save 즉 insert를 한것은 아니다.
+    }
+}
Index: shop/shop/src/main/java/com/keduit/shop/entity/Order.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/shop/shop/src/main/java/com/keduit/shop/entity/Order.java b/shop/shop/src/main/java/com/keduit/shop/entity/Order.java
new file mode 100644
--- /dev/null	(revision 74a8b684730665ca64dd7cf129c1f96483c96c29)
+++ b/shop/shop/src/main/java/com/keduit/shop/entity/Order.java	(revision 74a8b684730665ca64dd7cf129c1f96483c96c29)
@@ -0,0 +1,88 @@
+package com.keduit.shop.entity;
+
+//import javax.persistence.*; 이렇게하면 persistence 관련해 다 데려옴
+
+import com.keduit.shop.constant.OrderStatus;
+import lombok.Getter;
+import lombok.Setter;
+import lombok.ToString;
+
+import javax.persistence.*;
+import java.time.LocalDateTime;
+import java.util.ArrayList;
+import java.util.List;
+
+@Entity
+@Table(name = "orders")
+@Getter
+@Setter
+@ToString
+public class Order extends BaseEntity {
+
+    @Id
+    @GeneratedValue(strategy = GenerationType.IDENTITY)
+    @Column(name = "order_id")
+    private Long id;
+
+    @ManyToOne(fetch = FetchType.LAZY)
+    @JoinColumn(name = "member_id")
+    private Member member;
+
+    private LocalDateTime orderDate; // 주문일
+
+    @Enumerated(EnumType.STRING)
+    private OrderStatus orderStatus; // 주문 상태.
+
+    // order 와 orderItem 은 1:다 의 연관 관계를 가짐.
+    // 외례키가 orderItem에 있음으므로 연관 관계의 주인은 orderItem이 됨 --> order는 주인이 아니므로 mapped by 걸어줌.
+    //cascade : 부모와 어떤 관계를 맺을지. 매우 중요함. 따로 공부. 지금 all 은 부모의 상태변화를 모두 물려받겠다.
+    // 하나만 참조중?
+    @OneToMany(mappedBy = "order", cascade = CascadeType.ALL,
+            orphanRemoval = true, fetch = FetchType.LAZY)
+    private List<OrderItem> orderItems = new ArrayList<>();
+    // 필드에 넣을 순 있지만 (당연히도?) 테이블에 추가되진 않는다. 그저 연결만 지어줄 뿐이다?
+    // orphanRemoval = true : 참조 중 이 orderItem을 하나 참조?
+
+
+    // orderItems에는 주문상품 정보를 추가함. orderItem 객체를 order 객체의 orderItems에 추가함.
+    // Order엔티티와 OrderItem 엔티티가 양방향 참조관계이므로 orderItem객체에도
+    public void addOrderItem(OrderItem orderItem) {
+        orderItems.add(orderItem);
+        orderItem.setOrder(this);
+    }
+
+    public static Order createOrder(Member member, List<OrderItem> orderItemList) {
+        Order order = new Order();
+        order.setMember(member);
+        for (OrderItem orderItem : orderItemList) {
+            order.addOrderItem(orderItem);
+        }
+        order.setOrderStatus(OrderStatus.ORDER);
+        order.setOrderDate(LocalDateTime.now());
+        return order;
+    }
+
+    public int getTotalPrice() {
+        int totalPrice = 0;
+        for (OrderItem orderItem : orderItems) {
+            totalPrice += orderItem.getTotalPrice();
+        }
+        // System.out.println(orderItems+"@@@@@@@@@@@@@@@@@@@@");
+        return totalPrice;
+    }
+
+    public void cancelOrder(){
+
+        // 주문 상태를 CANCEL로 변경.
+        this.orderStatus = OrderStatus.CANCLE;
+
+        // 주문 상품의 주문수량을 재고에서 증가시킴.
+        for(OrderItem orderItem : orderItems){
+            orderItem.cancel();
+        }
+    }
+
+//    private LocalDateTime regTime;
+//
+//    private LocalDateTime updateTime;
+}
Index: shop/shop/src/main/java/com/keduit/shop/entity/OrderItem.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/shop/shop/src/main/java/com/keduit/shop/entity/OrderItem.java b/shop/shop/src/main/java/com/keduit/shop/entity/OrderItem.java
new file mode 100644
--- /dev/null	(revision 74a8b684730665ca64dd7cf129c1f96483c96c29)
+++ b/shop/shop/src/main/java/com/keduit/shop/entity/OrderItem.java	(revision 74a8b684730665ca64dd7cf129c1f96483c96c29)
@@ -0,0 +1,53 @@
+package com.keduit.shop.entity;
+
+import lombok.Getter;
+import lombok.Setter;
+import lombok.ToString;
+
+import javax.persistence.*;
+import java.time.LocalDateTime;
+
+@Entity
+@Getter
+@Setter
+@ToString
+public class OrderItem extends BaseTimeEntity{
+
+    @Id
+    @GeneratedValue(strategy = GenerationType.IDENTITY)
+    @Column(name = "order_item_id")
+    private Long id;
+
+    @ManyToOne(fetch = FetchType.LAZY)
+    @JoinColumn(name = "item_id")
+    private Item item;
+
+    @ManyToOne(fetch = FetchType.LAZY)
+    @JoinColumn(name = "order_id")
+    private Order order;
+
+    private int orderPrice;
+    private int count;
+
+    public static OrderItem createOrderItem(Item item, int count){
+        OrderItem orderItem = new OrderItem();
+
+        orderItem.setItem(item);
+        orderItem.setCount(count);
+        orderItem.setOrderPrice(item.getPrice());
+        item.removeStock(count);
+
+        return orderItem;
+    }
+
+    public int getTotalPrice(){
+        return orderPrice * count;
+    }
+
+    // 주문 취소 시 재고 증가 시킴. 취소한 count 만큼!
+    public void cancel(){
+        this.getItem().addStock(count);
+    }
+//    private LocalDateTime regDate;
+//    private LocalDateTime updateDate;
+}
Index: shop/shop/src/main/java/com/keduit/shop/exception/OutOfStockException.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/shop/shop/src/main/java/com/keduit/shop/exception/OutOfStockException.java b/shop/shop/src/main/java/com/keduit/shop/exception/OutOfStockException.java
new file mode 100644
--- /dev/null	(revision 74a8b684730665ca64dd7cf129c1f96483c96c29)
+++ b/shop/shop/src/main/java/com/keduit/shop/exception/OutOfStockException.java	(revision 74a8b684730665ca64dd7cf129c1f96483c96c29)
@@ -0,0 +1,8 @@
+package com.keduit.shop.exception;
+
+public class OutOfStockException extends RuntimeException{
+
+    public OutOfStockException(String message){
+        super(message);
+    }
+}
Index: shop/shop/src/main/java/com/keduit/shop/repository/CartItemRepository.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/shop/shop/src/main/java/com/keduit/shop/repository/CartItemRepository.java b/shop/shop/src/main/java/com/keduit/shop/repository/CartItemRepository.java
new file mode 100644
--- /dev/null	(revision 74a8b684730665ca64dd7cf129c1f96483c96c29)
+++ b/shop/shop/src/main/java/com/keduit/shop/repository/CartItemRepository.java	(revision 74a8b684730665ca64dd7cf129c1f96483c96c29)
@@ -0,0 +1,42 @@
+package com.keduit.shop.repository;
+
+import com.keduit.shop.dto.CartDetailDTO;
+import com.keduit.shop.entity.CartItem;
+import org.springframework.data.jpa.repository.JpaRepository;
+import org.springframework.data.jpa.repository.Query;
+
+import java.util.List;
+
+public interface CartItemRepository extends JpaRepository<CartItem, Long> {
+
+    CartItem findByCartIdAndItemId(long cartId, long itemId);
+
+    // JPQL이란 ?관계형 데이터베이스 테이블이 아닌 엔티티 객체에 대한 쿼리를 작성할 때 사용됨.
+    //엔티티 클래스와 필드를 대상으로 쿼리를 작성한다.
+    //엔티티 간의 관계와 상속을 고려하여 쿼리를 작성할 수 있다.
+    //데이터베이스 벤더에 독립적이다. (JPA 구현체에 따라 지원되는 SQL이 달라지지 않는다)
+    //객체 지향적인 쿼리 작성을 지원하여 유연한 쿼리 작성이 가능하다.
+    //정적 쿼리와 동적 쿼리를 모두 작성할 수 있다.
+
+
+    // JPQL에서 연관 관계 지연로딩 LAZY 로 설정한 경우 엔티티에 매핑된 다른 엔티티를 조회할 때 추가적으로
+    // 쿼리문이 실행되는데 이때 성능 최적화를 위해 DTO의 생성자를 이용하여 반환값으로 DTO객체를 생성할 수 있다
+    //
+    // CartDetailDTO의 생성자를 이용하여 DTO를 반환: 패키지명을 포함한 DTO의 이름을 기술.
+    // 주의사항 : 생성자의 파라미터 순서는 꼭 지켜야함.
+    @Query("select new com.keduit.shop.dto.CartDetailDTO(ci.id, i.itemNm, i.price, ci.count, im.imgUrl)"+
+        "from CartItem ci, ItemImg im "+
+        "join ci.item i "+
+        "where ci.cart.id = :cartId "+
+        "and im.item.id = ci.item.id "+
+        "and im.repimgYn = 'Y' " +
+        "order by ci.regTime desc")
+
+    //  1. 파라미터 1개
+//  2. 파라미터 이름과 매핑명이  동일
+//  3. JPA 2.0 이상
+//  위의 세가지 조건이 만족할 때 @Param 는 생략 가능  @Param("cartId") Long cartId
+
+    List<CartDetailDTO> findCartDetailDTOList(Long cartId);
+}
+
Index: shop/shop/src/main/java/com/keduit/shop/repository/CartRepository.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/shop/shop/src/main/java/com/keduit/shop/repository/CartRepository.java b/shop/shop/src/main/java/com/keduit/shop/repository/CartRepository.java
new file mode 100644
--- /dev/null	(revision 74a8b684730665ca64dd7cf129c1f96483c96c29)
+++ b/shop/shop/src/main/java/com/keduit/shop/repository/CartRepository.java	(revision 74a8b684730665ca64dd7cf129c1f96483c96c29)
@@ -0,0 +1,10 @@
+package com.keduit.shop.repository;
+
+import com.keduit.shop.entity.Cart;
+import org.springframework.data.jpa.repository.JpaRepository;
+
+public interface CartRepository extends JpaRepository<Cart, Long> {
+
+    // 현재 로그인한 회원의 Cart 엔티티를 읽어 옴.
+    Cart findByMemberId(Long memberId);
+}
Index: shop/shop/src/main/java/com/keduit/shop/repository/ItemImgRepository.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/shop/shop/src/main/java/com/keduit/shop/repository/ItemImgRepository.java b/shop/shop/src/main/java/com/keduit/shop/repository/ItemImgRepository.java
new file mode 100644
--- /dev/null	(revision 74a8b684730665ca64dd7cf129c1f96483c96c29)
+++ b/shop/shop/src/main/java/com/keduit/shop/repository/ItemImgRepository.java	(revision 74a8b684730665ca64dd7cf129c1f96483c96c29)
@@ -0,0 +1,13 @@
+package com.keduit.shop.repository;
+
+import com.keduit.shop.entity.ItemImg;
+import org.springframework.data.jpa.repository.JpaRepository;
+
+import java.util.List;
+
+public interface ItemImgRepository extends JpaRepository<ItemImg,Long> {
+
+    List<ItemImg> findByItemIdOrderByIdAsc(Long itemId);
+
+    ItemImg findByItemIdAndRepimgYn(Long itemId, String repimgYn);
+}
Index: shop/shop/src/main/java/com/keduit/shop/repository/ItemRepository.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/shop/shop/src/main/java/com/keduit/shop/repository/ItemRepository.java b/shop/shop/src/main/java/com/keduit/shop/repository/ItemRepository.java
new file mode 100644
--- /dev/null	(revision 74a8b684730665ca64dd7cf129c1f96483c96c29)
+++ b/shop/shop/src/main/java/com/keduit/shop/repository/ItemRepository.java	(revision 74a8b684730665ca64dd7cf129c1f96483c96c29)
@@ -0,0 +1,39 @@
+package com.keduit.shop.repository;
+
+import com.keduit.shop.entity.Item;
+import org.springframework.data.jpa.repository.JpaRepository;
+import org.springframework.data.jpa.repository.Query;
+import org.springframework.data.querydsl.QuerydslPredicateExecutor;
+import org.springframework.data.repository.query.Param;
+
+import java.util.List;
+
+
+// QuerydslPredicateExecutor : 조건에 맞는 조회를 위해 추가.
+public interface ItemRepository extends JpaRepository<Item, Long>, QuerydslPredicateExecutor<Item>
+    , ItemRepositoryCustom{
+    // <> 이곳의 타입은 테이블의 이름과 프라이머리키의 타입이다.
+
+    // 여기서 함수 명이 곧 쿼리 메소드. jpa 의 핵심 기능 중 하나다.
+    // 레파지토리 인터페이스에 가단한 네이밍 룰을 이용하여 메소드를 작성하면 원하는 쿼리실행가능.
+    // ppt를 확인하자.
+
+    // queryDSL 은 동적쿼리를 다루기 위해 사용.
+    List<Item> findByItemNm(String itemNm);
+
+    List<Item> findByItemNmOrItemDetail(String itemNm, String itemDetail);
+
+    // 인티져 써야하는 이유?
+    List<Item> findItemNmByPriceLessThan(Integer price);
+
+    List<Item> findByPriceLessThanOrderByPriceDesc(Integer price);
+
+    @Query("select i from Item i where i.itemDetail like" +
+            " %:itemDetail% order by i.price desc")
+    List<Item> findByItemDetail(@Param("itemDetail") String itemDetail);
+
+    @Query(value = "select * from item i where i.item_detail like " +
+            "%:itemDetail% order by i.price desc", nativeQuery = true)
+    List<Item> findByItemDetailByNative(@Param("itemDetail") String itemDetail);
+
+}
Index: shop/shop/src/main/java/com/keduit/shop/repository/ItemRepositoryCustom.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/shop/shop/src/main/java/com/keduit/shop/repository/ItemRepositoryCustom.java b/shop/shop/src/main/java/com/keduit/shop/repository/ItemRepositoryCustom.java
new file mode 100644
--- /dev/null	(revision 74a8b684730665ca64dd7cf129c1f96483c96c29)
+++ b/shop/shop/src/main/java/com/keduit/shop/repository/ItemRepositoryCustom.java	(revision 74a8b684730665ca64dd7cf129c1f96483c96c29)
@@ -0,0 +1,13 @@
+package com.keduit.shop.repository;
+
+import com.keduit.shop.dto.ItemSearchDTO;
+import com.keduit.shop.dto.MainItemDTO;
+import com.keduit.shop.entity.Item;
+import org.springframework.data.domain.Page;
+import org.springframework.data.domain.Pageable;
+
+public interface ItemRepositoryCustom {
+  Page<Item> getAdminItemPage(ItemSearchDTO itemSearchDTO, Pageable pageable);
+
+  Page<MainItemDTO> getMainItemPage(ItemSearchDTO itemSearchDTO, Pageable pageable);
+}
Index: shop/shop/src/main/java/com/keduit/shop/repository/ItemRepositoryCustomImpl.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/shop/shop/src/main/java/com/keduit/shop/repository/ItemRepositoryCustomImpl.java b/shop/shop/src/main/java/com/keduit/shop/repository/ItemRepositoryCustomImpl.java
new file mode 100644
--- /dev/null	(revision 74a8b684730665ca64dd7cf129c1f96483c96c29)
+++ b/shop/shop/src/main/java/com/keduit/shop/repository/ItemRepositoryCustomImpl.java	(revision 74a8b684730665ca64dd7cf129c1f96483c96c29)
@@ -0,0 +1,126 @@
+package com.keduit.shop.repository;
+
+import com.keduit.shop.constant.ItemSellStatus;
+import com.keduit.shop.dto.ItemSearchDTO;
+import com.keduit.shop.dto.MainItemDTO;
+import com.keduit.shop.dto.QMainItemDTO;
+import com.keduit.shop.entity.Item;
+import com.keduit.shop.entity.QItem;
+import com.keduit.shop.entity.QItemImg;
+import com.querydsl.core.types.Predicate;
+import com.querydsl.core.types.dsl.BooleanExpression;
+import com.querydsl.core.types.dsl.Wildcard;
+import com.querydsl.jpa.impl.JPAQueryFactory;
+import org.springframework.data.domain.Page;
+import org.springframework.data.domain.PageImpl;
+import org.springframework.data.domain.Pageable;
+import org.thymeleaf.util.StringUtils;
+
+import javax.persistence.EntityManager;
+import java.time.LocalDateTime;
+import java.util.List;
+
+// ItemRepositoryCustom의 구현체에는 ~~~~~Impl을 붙여야 잘 작동 함.
+public class ItemRepositoryCustomImpl implements ItemRepositoryCustom{
+
+  //    동적 쿼리를 생성하기 위한 클래스
+  private JPAQueryFactory queryFactory; //jpaDLS 를 쓰지 않은 이유?
+
+//  ItemRepositoryCustomImpl 클래스는 EntityManager가 필요하고,
+//  queryFactory를 생성함.
+  public ItemRepositoryCustomImpl(EntityManager em){
+    this.queryFactory = new JPAQueryFactory(em);
+  }
+
+//  상품 판매 상태 조건이 전체이면 null을 리턴되고 결과값이 null이면 where절에서 해당 조건은 무시됨.
+//  상태조건이 있으면 해당 조건을 사용하여 where구문이 만들어짐.
+  private BooleanExpression searchSellStatuEq(ItemSellStatus searchSellStatus){
+    return searchSellStatus == null? null: QItem.item.itemSellStatus.eq(searchSellStatus);
+  }
+
+  private BooleanExpression regDtsAfter(String searchDateType){
+    LocalDateTime dateTime = LocalDateTime.now();
+    if (StringUtils.equals("all", searchDateType) || searchDateType == null) {
+      return null;
+    } else if(StringUtils.equals("1d", searchDateType)){
+      dateTime = dateTime.minusDays(1);
+    } else if(StringUtils.equals("1w", searchDateType)) {
+      dateTime = dateTime.minusWeeks(1);
+    } else if(StringUtils.equals("1m", searchDateType)) {
+      dateTime = dateTime.minusMonths(1);
+    } else if(StringUtils.equals("6m", searchDateType)){
+      dateTime = dateTime.minusMonths(6);
+    }
+    return QItem.item.regTime.after(dateTime);
+  }
+
+  private BooleanExpression searchByLike(String searchBy, String searchQuery){
+   if(StringUtils.equals("itemNm", searchBy)){
+     return QItem.item.itemNm.like("%" + searchQuery + "%");
+   } else if (StringUtils.equals("createBy", searchBy)){
+     return QItem.item.createdBy.like("%" + searchQuery + "%");
+   }
+   return null;
+  }
+  @Override
+  public Page<Item> getAdminItemPage(ItemSearchDTO itemSearchDTO, Pageable pageable) {
+
+    System.out.println("itemSearchDTO-----> " + itemSearchDTO);
+    System.out.println("pageable------> " + pageable);
+    List<Item> result = queryFactory
+        .selectFrom(QItem.item)
+        .where(regDtsAfter(itemSearchDTO.getSearchDateType()),
+            searchSellStatuEq(itemSearchDTO.getSearchSellStatus()),
+            searchByLike(itemSearchDTO.getSearchBy(),
+                itemSearchDTO.getSearchQuery())
+            )
+        .orderBy(QItem.item.id.desc())
+        .offset(pageable.getOffset())   // 데이터를 가지고 올 시작 인덱스
+        .limit(pageable.getPageSize())   // 한 번에 가지고 올 최대 갯수
+        .fetch();
+
+    long total = queryFactory
+        .select(Wildcard.count)
+        .from(QItem.item)
+        .where(regDtsAfter(itemSearchDTO.getSearchDateType()),
+            searchSellStatuEq(itemSearchDTO.getSearchSellStatus()),
+            searchByLike(itemSearchDTO.getSearchBy(),
+                itemSearchDTO.getSearchQuery()))
+        .fetchOne();    // 하나의 결과를 가져옴.
+
+    return new PageImpl<>(result, pageable, total);
+  }
+
+  @Override
+  public Page<MainItemDTO> getMainItemPage(ItemSearchDTO itemSearchDTO, Pageable pageable) {
+    QItem item = QItem.item;
+    QItemImg itemImg = QItemImg.itemImg;
+
+    List<MainItemDTO> result = queryFactory
+            .select(
+                    new QMainItemDTO(item.id, item.itemNm, item.itemDetail, itemImg.imgUrl, item.price)
+            ).from(itemImg)
+            .join(itemImg.item, item)
+            .where(itemImg.repimgYn.eq("Y"))
+            .where(itemNmlike(itemSearchDTO.getSearchQuery()))
+            .orderBy(item.id.desc())
+            .offset(pageable.getOffset())
+            .limit(pageable.getPageSize())
+            .fetch();
+
+            long total = queryFactory
+                    .select(Wildcard.count)
+                    .from(itemImg)
+                    .join(itemImg.item, item)
+                    .where(itemImg.repimgYn.eq("Y"))
+                    .where(itemNmlike(itemSearchDTO.getSearchQuery()))
+                    .fetchOne();
+
+    return new PageImpl<>(result, pageable, total);
+  }
+
+  private Predicate itemNmlike(String searchQuery) {
+    return StringUtils.isEmpty(searchQuery) ? null :
+            QItem.item.itemNm.like("%" + searchQuery + "%");
+  }
+}
Index: shop/shop/src/main/java/com/keduit/shop/repository/MemberRepository.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/shop/shop/src/main/java/com/keduit/shop/repository/MemberRepository.java b/shop/shop/src/main/java/com/keduit/shop/repository/MemberRepository.java
new file mode 100644
--- /dev/null	(revision 74a8b684730665ca64dd7cf129c1f96483c96c29)
+++ b/shop/shop/src/main/java/com/keduit/shop/repository/MemberRepository.java	(revision 74a8b684730665ca64dd7cf129c1f96483c96c29)
@@ -0,0 +1,9 @@
+package com.keduit.shop.repository;
+
+import com.keduit.shop.entity.Member;
+import org.springframework.data.jpa.repository.JpaRepository;
+
+public interface MemberRepository extends JpaRepository<Member, Long> {
+
+    Member findByEmail(String email);
+}
Index: shop/shop/src/main/java/com/keduit/shop/repository/OrderItemRepository.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/shop/shop/src/main/java/com/keduit/shop/repository/OrderItemRepository.java b/shop/shop/src/main/java/com/keduit/shop/repository/OrderItemRepository.java
new file mode 100644
--- /dev/null	(revision 74a8b684730665ca64dd7cf129c1f96483c96c29)
+++ b/shop/shop/src/main/java/com/keduit/shop/repository/OrderItemRepository.java	(revision 74a8b684730665ca64dd7cf129c1f96483c96c29)
@@ -0,0 +1,8 @@
+package com.keduit.shop.repository;
+
+import com.keduit.shop.entity.OrderItem;
+import org.springframework.data.jpa.repository.JpaRepository;
+
+public interface OrderItemRepository extends JpaRepository<OrderItem, Long> {
+
+}
Index: shop/shop/src/main/java/com/keduit/shop/repository/OrderRepository.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/shop/shop/src/main/java/com/keduit/shop/repository/OrderRepository.java b/shop/shop/src/main/java/com/keduit/shop/repository/OrderRepository.java
new file mode 100644
--- /dev/null	(revision 74a8b684730665ca64dd7cf129c1f96483c96c29)
+++ b/shop/shop/src/main/java/com/keduit/shop/repository/OrderRepository.java	(revision 74a8b684730665ca64dd7cf129c1f96483c96c29)
@@ -0,0 +1,23 @@
+package com.keduit.shop.repository;
+
+import com.keduit.shop.entity.Order;
+import org.springframework.data.domain.Pageable;
+import org.springframework.data.jpa.repository.JpaRepository;
+import org.springframework.data.jpa.repository.Query;
+import org.springframework.data.repository.query.Param;
+
+import java.util.List;
+
+public interface OrderRepository extends JpaRepository<Order,Long> {
+
+    //JPQL은 @Query에 기술하는데 select 대상이 객체임.
+
+    // 파라미터란 의미로 ' : ' 붙임. Order가 객체이므로 대문자 필수?
+    @Query("select o from Order o " +
+            "where o.member.email = :email " +
+            "order by o.orderDate desc")
+    List<Order> findOrders(@Param("email") String email, Pageable pageable);
+
+    @Query("select count(o) from Order o where o.member.email = :email")
+    Long countOrder(@Param("email") String email);
+}
Index: shop/shop/src/main/java/com/keduit/shop/service/CartService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/shop/shop/src/main/java/com/keduit/shop/service/CartService.java b/shop/shop/src/main/java/com/keduit/shop/service/CartService.java
new file mode 100644
--- /dev/null	(revision 74a8b684730665ca64dd7cf129c1f96483c96c29)
+++ b/shop/shop/src/main/java/com/keduit/shop/service/CartService.java	(revision 74a8b684730665ca64dd7cf129c1f96483c96c29)
@@ -0,0 +1,129 @@
+package com.keduit.shop.service;
+
+import com.keduit.shop.dto.CartDetailDTO;
+import com.keduit.shop.dto.CartItemDTO;
+import com.keduit.shop.dto.CartOrderDTO;
+import com.keduit.shop.dto.OrderDTO;
+import com.keduit.shop.entity.Cart;
+import com.keduit.shop.entity.CartItem;
+import com.keduit.shop.entity.Item;
+import com.keduit.shop.entity.Member;
+import com.keduit.shop.repository.*;
+import lombok.RequiredArgsConstructor;
+import org.springframework.stereotype.Service;
+import org.springframework.transaction.annotation.Transactional;
+import org.thymeleaf.util.StringUtils;
+
+import javax.persistence.EntityExistsException;
+import javax.persistence.EntityNotFoundException;
+import java.util.ArrayList;
+import java.util.List;
+
+@Service
+@RequiredArgsConstructor
+@Transactional
+public class CartService {
+
+    private final ItemRepository itemRepository;
+    private final MemberRepository memberRepository;
+    private final CartItemRepository cartItemRepository;
+    private final CartRepository cartRepository;
+    private final OrderService orderService;
+
+    // 장바구니 추가하기
+    public Long addCart(CartItemDTO cartItemDTO, String email) {
+
+        //  장바구니 넣을 상품 조회
+        Item item = itemRepository.findById(cartItemDTO.getItemId())
+                .orElseThrow(EntityExistsException::new);
+
+        // 로그인 한 회원 엔티티 조회
+        Member member = memberRepository.findByEmail(email);
+
+        // 현재 회원의 장바구니가 있는지 조회
+        Cart cart = cartRepository.findByMemberId(member.getId());
+
+        // 장바구니가 없으면 생성, 있으면 수량 증가 시킴.
+        if (cart == null) { // 장바구니에 상품이 있는지 없는지 확인. 없을 시 장바구니 만들어주기.
+            cart = Cart.createCart(member);
+            cartRepository.save(cart);
+        }
+        // 장바구니에 상품이 들어 있는지 확인 후 중복되면 수량 add, 없으면 장바구니 상품을 추가.
+        CartItem saveCartItem =
+                cartItemRepository.findByCartIdAndItemId(cart.getId(), item.getId());
+        if (saveCartItem != null) { // 장바구니에 상품이 이미 "동일한?" 있는 상태라면?
+            saveCartItem.addCount(cartItemDTO.getCount());
+            return saveCartItem.getId();
+        } else {
+            CartItem cartItem = CartItem.createCartItem(cart, item, cartItemDTO.getCount());
+
+            cartItemRepository.save(cartItem);
+            return cartItem.getId();
+        }
+    }
+
+    @Transactional(readOnly = true)
+    public List<CartDetailDTO> getCartList(String email) {
+
+        List<CartDetailDTO> cartDetailDTOList = new ArrayList<>();
+
+        Member member = memberRepository.findByEmail(email);
+        Cart cart = cartRepository.findByMemberId(member.getId());
+        if (cart == null) {
+            return cartDetailDTOList;
+        }
+        cartDetailDTOList = cartItemRepository.findCartDetailDTOList(cart.getId());
+        return cartDetailDTOList;
+    }
+
+    // 현재 로그인 한 회원과 장바구니에 상품을 저장한 회원을 체크하여 같으면 true 다르면 false
+    @Transactional(readOnly = true)
+    public boolean validateCartItem(Long cartItemId, String email){
+        Member member = memberRepository.findByEmail(email);
+
+        CartItem cartItem = cartItemRepository.findById(cartItemId)
+                .orElseThrow(EntityNotFoundException::new);
+
+        Member savedMember = cartItem.getCart().getMember();
+
+        if(!StringUtils.equals(member.getEmail(), savedMember.getEmail())){
+            return false;
+        }
+        return true;
+    }
+
+    public void updateCartItemCount(Long cartItemId, int count){
+        CartItem cartItem = cartItemRepository.findById(cartItemId)
+                .orElseThrow(EntityNotFoundException::new);
+        cartItem.updateCount(count);
+    }
+
+    public void deleteCartItem(Long cartItemId) {
+        CartItem cartItem = cartItemRepository.findById(cartItemId)
+                .orElseThrow(EntityNotFoundException::new);
+        cartItemRepository.delete(cartItem);
+    }
+
+    public Long orderCartItem(List<CartOrderDTO> cartOrderDTOList, String email) {
+
+        List<OrderDTO> orderDTOList = new ArrayList<>();
+        for (CartOrderDTO cartOrderDTO : cartOrderDTOList){
+            CartItem cartItem = cartItemRepository.findById(cartOrderDTO.getCartItemId())
+                    .orElseThrow(EntityNotFoundException::new);
+            OrderDTO orderDTO = new OrderDTO();
+            orderDTO.setItemId(cartItem.getItem().getId());
+            orderDTO.setCount(cartItem.getCount());
+            orderDTOList.add(orderDTO);
+        }
+        // 주문 로직을 호출하여 처리.
+        Long orderId = orderService.orders(orderDTOList, email);
+
+        // 주문이 완료된 상품을 장바구니에서 삭제하기.
+        for(CartOrderDTO cartOrderDTO: cartOrderDTOList){
+            CartItem cartItem =cartItemRepository.findById(cartOrderDTO.getCartItemId())
+                    .orElseThrow(EntityNotFoundException::new);
+            cartItemRepository.delete(cartItem);
+        }
+        return orderId;
+    }
+}
\ No newline at end of file
Index: shop/shop/src/main/java/com/keduit/shop/service/FileService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/shop/shop/src/main/java/com/keduit/shop/service/FileService.java b/shop/shop/src/main/java/com/keduit/shop/service/FileService.java
new file mode 100644
--- /dev/null	(revision 74a8b684730665ca64dd7cf129c1f96483c96c29)
+++ b/shop/shop/src/main/java/com/keduit/shop/service/FileService.java	(revision 74a8b684730665ca64dd7cf129c1f96483c96c29)
@@ -0,0 +1,41 @@
+package com.keduit.shop.service;
+
+import lombok.extern.java.Log;
+import org.springframework.stereotype.Service;
+
+import java.io.File;
+import java.io.FileOutputStream;
+import java.util.UUID;
+
+@Service
+@Log
+public class FileService {
+
+    public String uploadFile(String uploadPath, String originalFileName,
+                             byte[] fileData) throws Exception{
+
+        UUID uuid = UUID.randomUUID();
+        // Universally Unique Udentifier : 범용 고유 식별자를 의미하며 중복이 되지 않는 유일한 값을 구성하고자 할때 사용
+        String extension = originalFileName.substring(originalFileName.lastIndexOf("."));
+        String saveFileName = uuid.toString() + extension;
+        String fileUploadFullUrl = uploadPath + "/" + saveFileName;
+        FileOutputStream fos = new FileOutputStream(fileUploadFullUrl);
+        fos.write(fileData);
+        fos.close();
+
+        return saveFileName;
+    }
+
+    public void deleteFile(String filePath) throws Exception{
+        // 저장된 파일의 경로를 이용하여 파일 객체를 생성.
+        File deleteFile = new File(filePath);
+
+        // 해당 파일이 있으면 삭제.
+        if(deleteFile.exists()){
+            deleteFile.delete();
+            log.info("파일을 삭제하였습니다.");
+        }else {
+            log.info("파일이 존재하지 않습니다.");
+        }
+    }
+}
Index: shop/shop/src/main/java/com/keduit/shop/service/ItemImgService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/shop/shop/src/main/java/com/keduit/shop/service/ItemImgService.java b/shop/shop/src/main/java/com/keduit/shop/service/ItemImgService.java
new file mode 100644
--- /dev/null	(revision 74a8b684730665ca64dd7cf129c1f96483c96c29)
+++ b/shop/shop/src/main/java/com/keduit/shop/service/ItemImgService.java	(revision 74a8b684730665ca64dd7cf129c1f96483c96c29)
@@ -0,0 +1,68 @@
+package com.keduit.shop.service;
+
+import com.keduit.shop.entity.ItemImg;
+import com.keduit.shop.repository.ItemImgRepository;
+import lombok.RequiredArgsConstructor;
+import org.springframework.beans.factory.annotation.Value;
+import org.springframework.stereotype.Service;
+import org.springframework.transaction.annotation.Transactional;
+import org.springframework.web.multipart.MultipartFile;
+import org.thymeleaf.util.StringUtils;
+
+import javax.persistence.EntityNotFoundException;
+
+@Service
+@RequiredArgsConstructor
+@Transactional
+public class ItemImgService {
+
+    @Value("${itemImgLocation}")
+    private String itemImgLocation;
+
+    private final ItemImgRepository itemImgRepository;
+    private final FileService fileService;
+
+    public void saveItemImg(ItemImg itemImg, MultipartFile multipartFile)
+        throws Exception{
+        String oriImgName = multipartFile.getOriginalFilename();
+        String imgName = "";
+        String imgUrl  = "";
+
+        // 파일 업로드
+        // 등록여부를 확인후 서비스 업로드파일스 호출
+        // 이때 경로 이름 이미지파일의 바이트배열을 파라미터로 전달
+        if(!StringUtils.isEmpty(oriImgName)){
+            imgName = fileService.uploadFile(itemImgLocation, oriImgName,
+                    multipartFile.getBytes());
+
+            imgUrl = "/images/item/" + imgName;
+            //저장한 파일을 불러올 경로 설정
+            // webmvcconfig 클레스에서 "/imgase/**"로 설정했으며 업로드페치 프로퍼티 경로인
+            // f 샵 아래 item 폴더에 이미지를 저장하므로 상품이미지 경로는 /tem을 붙인다.
+        }
+        // 상품 이미지 정보 저장
+        itemImg.updateItemImg(oriImgName, imgName, imgUrl);
+        itemImgRepository.save(itemImg);
+    }
+
+    // 여기서부터 공부
+    public void updateItemImg(Long itemImgId, MultipartFile itemImgFile)
+            throws Exception{
+        if( !itemImgFile.isEmpty()){
+            ItemImg savedItemImg = itemImgRepository.findById(itemImgId)
+                    .orElseThrow(EntityNotFoundException::new);
+
+            // 기존 이미지 삭제
+            if(!StringUtils.isEmpty(savedItemImg.getImgName())){
+                fileService.deleteFile(itemImgLocation + "/"
+                        + savedItemImg.getImgName());
+            }
+
+            String oriImgName = itemImgFile.getOriginalFilename();
+            String imgName = fileService.uploadFile(
+                    itemImgLocation, oriImgName, itemImgFile.getBytes());
+            String imgUrl = "/images/item/" + imgName;
+            savedItemImg.updateItemImg(oriImgName, imgName, imgUrl);
+        }
+    }
+}
Index: shop/shop/src/main/java/com/keduit/shop/service/ItemService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/shop/shop/src/main/java/com/keduit/shop/service/ItemService.java b/shop/shop/src/main/java/com/keduit/shop/service/ItemService.java
new file mode 100644
--- /dev/null	(revision 74a8b684730665ca64dd7cf129c1f96483c96c29)
+++ b/shop/shop/src/main/java/com/keduit/shop/service/ItemService.java	(revision 74a8b684730665ca64dd7cf129c1f96483c96c29)
@@ -0,0 +1,102 @@
+package com.keduit.shop.service;
+
+import com.keduit.shop.dto.ItemFormDTO;
+import com.keduit.shop.dto.ItemImgDTO;
+import com.keduit.shop.dto.ItemSearchDTO;
+import com.keduit.shop.dto.MainItemDTO;
+import com.keduit.shop.entity.Item;
+import com.keduit.shop.entity.ItemImg;
+import com.keduit.shop.repository.ItemImgRepository;
+import com.keduit.shop.repository.ItemRepository;
+import lombok.RequiredArgsConstructor;
+import org.springframework.data.domain.Page;
+import org.springframework.data.domain.Pageable;
+import org.springframework.stereotype.Service;
+import org.springframework.transaction.annotation.Transactional;
+import org.springframework.web.multipart.MultipartFile;
+
+import javax.persistence.EntityNotFoundException;
+import java.util.ArrayList;
+import java.util.List;
+
+@Service
+@Transactional
+@RequiredArgsConstructor
+public class ItemService {
+
+    private final ItemImgRepository itemImgRepository;
+    private final ItemImgService itemImgService;
+    private final ItemRepository itemRepository;
+
+    public Long saveItem(ItemFormDTO itemFormDTO, List<MultipartFile> itemImgFileList) throws Exception {
+
+        //상품등록
+        Item item = itemFormDTO.createItem();
+        itemRepository.save(item);
+
+        // 이미지 등록
+        for (int i = 0; i < itemImgFileList.size(); i++) {
+            ItemImg itemImg = new ItemImg();
+
+            itemImg.setItem(item);
+
+            if (i == 0) {
+                itemImg.setRepimgYn("Y");
+            } else {
+                itemImg.setRepimgYn("N");
+            }
+            itemImgService.saveItemImg(itemImg, itemImgFileList.get(i));
+        }
+        return item.getId();
+    }
+    // 여기서부터 공부! 위에도
+    //  readOnly = true: 상품 데이터를 읽기만 하므로 JPA가 변경감지(더티체킹)를 하지 않아 성능상 이점이 있음.
+    @Transactional(readOnly = true)
+    public ItemFormDTO getItemDtl(Long itemId) {
+        List<ItemImg> itemImgList = itemImgRepository.findByItemIdOrderByIdAsc(itemId);
+        List<ItemImgDTO> itemImgDTOList = new ArrayList<>();
+        for (ItemImg itemImg : itemImgList) {
+            ItemImgDTO itemImgDTO = ItemImgDTO.of(itemImg);
+            itemImgDTOList.add(itemImgDTO);
+        }
+
+        Item item = itemRepository.findById(itemId)
+                .orElseThrow(EntityNotFoundException::new);
+        ItemFormDTO itemFormDTO = ItemFormDTO.of(item);
+        itemFormDTO.setItemImgDTOList(itemImgDTOList);
+
+        return itemFormDTO;
+    }
+
+    public Long updateItem(ItemFormDTO itemFormDTO,
+                           List<MultipartFile> itemImgFileList) throws Exception {
+        // 상품수정
+        Item item = itemRepository.findById(itemFormDTO.getId())
+                .orElseThrow(EntityNotFoundException::new);
+        item.updateItem(itemFormDTO);
+
+        List<Long> itemImgIds = itemFormDTO.getItemImgIds();
+
+
+        // 이미지 등록
+        for (int i = 0; i < itemImgFileList.size(); i++) {
+//      상품이미지를 업데이트 하기 위해
+//      updateItemImg()메소드에 상품이미지 아이디와 상품이미지 파일 정보를 파라미터로 전달 함.
+            itemImgService.updateItemImg(itemImgIds.get(i), itemImgFileList.get(i));
+        }
+        return item.getId();
+    }
+
+    @Transactional(readOnly = true)
+    public Page<Item> getAdminItemPage(ItemSearchDTO itemSearchDTO, Pageable pageable) {
+        return itemRepository.getAdminItemPage(itemSearchDTO, pageable);
+    }
+
+    // 더티체킹 x
+    @Transactional(readOnly = true)
+    public Page<MainItemDTO> getMainItemPage(ItemSearchDTO itemSearchDTO, Pageable pageable){
+        return itemRepository.getMainItemPage(itemSearchDTO,pageable);
+    }
+
+}
+
Index: shop/shop/src/main/java/com/keduit/shop/service/MemberService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/shop/shop/src/main/java/com/keduit/shop/service/MemberService.java b/shop/shop/src/main/java/com/keduit/shop/service/MemberService.java
new file mode 100644
--- /dev/null	(revision 74a8b684730665ca64dd7cf129c1f96483c96c29)
+++ b/shop/shop/src/main/java/com/keduit/shop/service/MemberService.java	(revision 74a8b684730665ca64dd7cf129c1f96483c96c29)
@@ -0,0 +1,52 @@
+package com.keduit.shop.service;
+
+import com.keduit.shop.entity.Member;
+import com.keduit.shop.repository.MemberRepository;
+import lombok.RequiredArgsConstructor;
+
+import org.springframework.security.core.userdetails.User;
+import org.springframework.security.core.userdetails.UserDetails;
+import org.springframework.security.core.userdetails.UserDetailsService;
+import org.springframework.security.core.userdetails.UsernameNotFoundException;
+import org.springframework.stereotype.Service;
+import org.springframework.transaction.annotation.Transactional;
+
+
+@Service
+@Transactional
+@RequiredArgsConstructor
+public class MemberService implements UserDetailsService {
+
+    private  final MemberRepository memberRepository;
+
+    // validateDuplicateMember를 통해 이메일 중복 확인을 한 후
+    // db에 등록한다.
+    public Member saveMember(Member member){
+        validateDuplicateMember(member);
+        return memberRepository.save(member);
+
+    }
+
+    private void validateDuplicateMember(Member member) {
+        Member findMember = memberRepository.findByEmail(member.getEmail());
+        if(findMember != null){
+            throw new IllegalStateException("이미 가입된 회원입니다.");
+        }
+    }
+
+    @Override
+    public UserDetails loadUserByUsername(String email) throws UsernameNotFoundException {
+        Member member = memberRepository.findByEmail(email);
+
+        if(member == null){
+            // 여기선 유저네임이지만 우린 파라미터를 이메일로 오버라이딩했다.
+            // email 에서 오류가 났다는 뜻. ()에 이메일이 들어가는 이유.
+            throw new UsernameNotFoundException(email+"안녕");
+        }
+        return User.builder()
+                .username(member.getEmail())
+                .password(member.getPassword())
+                .roles(member.getRole().toString())
+                .build();
+    }
+}
Index: shop/shop/src/main/java/com/keduit/shop/service/OrderService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/shop/shop/src/main/java/com/keduit/shop/service/OrderService.java b/shop/shop/src/main/java/com/keduit/shop/service/OrderService.java
new file mode 100644
--- /dev/null	(revision 74a8b684730665ca64dd7cf129c1f96483c96c29)
+++ b/shop/shop/src/main/java/com/keduit/shop/service/OrderService.java	(revision 74a8b684730665ca64dd7cf129c1f96483c96c29)
@@ -0,0 +1,119 @@
+package com.keduit.shop.service;
+
+import com.keduit.shop.dto.OrderDTO;
+import com.keduit.shop.dto.OrderHistDTO;
+import com.keduit.shop.dto.OrderItemDTO;
+import com.keduit.shop.entity.*;
+import com.keduit.shop.repository.ItemImgRepository;
+import com.keduit.shop.repository.ItemRepository;
+import com.keduit.shop.repository.MemberRepository;
+import com.keduit.shop.repository.OrderRepository;
+import lombok.RequiredArgsConstructor;
+import org.springframework.data.domain.Page;
+import org.springframework.data.domain.PageImpl;
+import org.springframework.data.domain.Pageable;
+import org.springframework.stereotype.Service;
+import org.springframework.transaction.annotation.Transactional;
+import org.thymeleaf.util.StringUtils;
+
+import javax.persistence.EntityNotFoundException;
+import java.util.ArrayList;
+import java.util.List;
+
+@Service
+@Transactional
+@RequiredArgsConstructor
+public class OrderService {
+
+    private final ItemRepository itemRepository;
+    private final MemberRepository memberRepository;
+    private final OrderRepository orderRepository;
+    private final ItemImgRepository itemImgRepository;
+
+    public Long order(OrderDTO orderDTO, String email) {
+        // 주문할 상품 조회
+        Item item = itemRepository.findById(orderDTO.getItemId())
+                .orElseThrow(EntityNotFoundException::new);
+
+        // 현재 로그인한 회원의 이메일 정보를 이용하여 회원조회
+        Member member = memberRepository.findByEmail(email);
+
+        List<OrderItem> orderItemList = new ArrayList<>();
+        // 주문 상품, 주문 수량을 이용하여 orderItem 엔티티를 생성.
+
+        OrderItem orderItem = OrderItem.createOrderItem(item, orderDTO.getCount());
+        orderItemList.add(orderItem);
+
+        Order order = Order.createOrder(member, orderItemList);
+        // 회원정보, 주문 상품 리스트를 이용하여 주문 엔티티를 생성
+        orderRepository.save(order);
+
+        return order.getId();
+
+    }
+
+    @Transactional(readOnly = true) // 더티뭐시기
+    public Page<OrderHistDTO> getOrderList(String email, Pageable pageable) {
+        List<Order> orders = orderRepository.findOrders(email, pageable);
+        Long totalCount = orderRepository.countOrder(email); // pageable을 위해 토탈 카운트를 가져옴.
+
+        List<OrderHistDTO> orderHistDTOs = new ArrayList<>();
+
+        for (Order order : orders) {
+            OrderHistDTO orderHistDTO = new OrderHistDTO(order);
+            List<OrderItem> orderItems = order.getOrderItems();
+            for (OrderItem orderItem : orderItems){
+                System.out.println(orderItem.getItem().getId().getClass()+"------------@@@@@@@@@@@@@@@@@@@@@@@@@@-------------------------");
+                ItemImg itemImg = itemImgRepository
+                        .findByItemIdAndRepimgYn(orderItem.getItem().getId(), "Y");
+                OrderItemDTO orderItemDTO = new OrderItemDTO(orderItem, itemImg.getImgUrl());// 여기에 넣을 값 그동안 만든것.
+                orderHistDTO.addOrderItemDTO(orderItemDTO);
+                orderHistDTO.getOrderStatus();
+            }
+            orderHistDTOs.add(orderHistDTO);
+        }
+        return new PageImpl<>(orderHistDTOs, pageable, totalCount);
+    }
+
+    // 주문 취소 전 이메일로 (로그인, 주문자) 일치여부 확인
+    // 여기선 뭐 하는게 없고 그냥 이메일 대조만 해서 리턴값 보냄.
+    @Transactional(readOnly = true) // 읽으려나보다
+    public boolean validateOrder(Long orderId, String email){
+        Member curMember = memberRepository.findByEmail(email);
+        Order order = orderRepository.findById(orderId)
+                .orElseThrow((EntityNotFoundException::new)); // findbyId 는 옵셔널타입이 디폴트이므로 null인경우 처리.필요.
+
+        Member savemember = order.getMember();
+        // StringUtils.equals 를 쓰는 이유는 null값이 들어가도 괜찮기에 쓴다
+
+        if(!StringUtils.equals(curMember.getEmail(), savemember.getEmail())){
+            return false;
+        }
+        return true;
+    }
+
+    public void cancelOrder(Long orderId){
+        Order order = orderRepository.findById(orderId)
+                .orElseThrow(EntityNotFoundException::new);
+
+        order.cancelOrder();
+
+    }
+
+    public Long orders(List<OrderDTO> orderDTOList, String email) {
+        Member member = memberRepository.findByEmail(email);
+        List<OrderItem> orderItemList = new ArrayList<>();
+
+        for (OrderDTO orderDTO : orderDTOList){
+            Item item = itemRepository.findById(orderDTO.getItemId())
+                    .orElseThrow(EntityNotFoundException::new);
+
+            OrderItem orderItem = OrderItem.createOrderItem(item, orderDTO.getCount());
+            orderItemList.add(orderItem);
+        }
+        Order order = Order.createOrder(member, orderItemList);
+        orderRepository.save(order);
+
+        return order.getId();
+    }
+}
\ No newline at end of file
Index: shop/shop/src/main/resources/application.properties
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>NATIVE_TO_ASCII_UTF-8
===================================================================
diff --git a/shop/shop/src/main/resources/application.properties b/shop/shop/src/main/resources/application.properties
new file mode 100644
--- /dev/null	(revision 74a8b684730665ca64dd7cf129c1f96483c96c29)
+++ b/shop/shop/src/main/resources/application.properties	(revision 74a8b684730665ca64dd7cf129c1f96483c96c29)
@@ -0,0 +1,41 @@
+spring.application.name=shop
+server.port=8181
+
+spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
+spring.datasource.url=jdbc:mysql://localhost:3306/sqldb
+spring.datasource.username=root
+spring.datasource.password=1234
+
+#실행되는 쿼리를 콘솔에 출력
+spring.jpa.properties.hibernate.show_sql=true
+
+#콘솔창에 출력되는 쿼리를 가독성이 좋게 포맷팅
+spring.jpa.properties.hibernate.format_sql=true
+
+#쿼리에 물음표로 출력되는 바인드 파라미터 출력
+logging.level.org.hibernate.type.descriptor.sql=trace
+
+#데이터베이스 초기화 전략 // ctreat 시 테이블을 항상 삭제하고 다시 만듬. 요소들 삭제.
+# none,ceate-drop 종료 시점에 테이블삭제. 등등 여러 개 있음.
+# validate : 엔티티와 테이블의 정상 매핑을 체크
+spring.jpa.hibernate.ddl-auto=validate
+spring.jpa.database-platform=org.hibernate.dialect.MySQL8Dialect
+
+#Live Reload 기능 활성화
+spring.devtolls.liversload.enabled=true
+
+#Thymeleaf cash 사용 중지
+spring.thymeleaf.cache=false
+
+# 파일 한 개당 최대 사이즈.
+spring.servlet.mutipart.max-file-size=20MB
+# 요청 당 최대 파일 크기.
+spring.servlet.mutipart.max-request-size=100MB
+# 상품 이미지 업로드 경로.
+itemImgLocation = F:/shop/item
+# 리소스 업로드 경로.
+uploadPath=file:///F:/shop/
+
+# 쿼리를 실행하여 조회할 때 한 번에 읽을 수 있는 사이즈를 지정.
+# join 을 할 때 in() 을 사용하여 필요한 것만 가져오도록 함.
+spring.jpa.properties.hibernate.default_batch_fetch_size=1000
\ No newline at end of file
Index: shop/shop/src/main/resources/static/css/layout1.css
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/shop/shop/src/main/resources/static/css/layout1.css b/shop/shop/src/main/resources/static/css/layout1.css
new file mode 100644
--- /dev/null	(revision 74a8b684730665ca64dd7cf129c1f96483c96c29)
+++ b/shop/shop/src/main/resources/static/css/layout1.css	(revision 74a8b684730665ca64dd7cf129c1f96483c96c29)
@@ -0,0 +1,23 @@
+html {
+    position: relative;
+    min-height: 100%;
+    margin: 0;
+}
+body {
+    min-height: 100%;
+}
+.footer {
+    position: absolute;
+    left: 0;
+    right: 0;
+    bottom: 0;
+    width: 100%;
+    padding: 15px 0;
+    text-align: center;
+}
+.content{
+    margin-bottom:100px;
+    margin-top: 50px;
+    margin-left: 200px;
+    margin-right: 200px;
+}
\ No newline at end of file
Index: shop/shop/src/main/resources/static/index.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/shop/shop/src/main/resources/static/index.html b/shop/shop/src/main/resources/static/index.html
new file mode 100644
--- /dev/null	(revision 74a8b684730665ca64dd7cf129c1f96483c96c29)
+++ b/shop/shop/src/main/resources/static/index.html	(revision 74a8b684730665ca64dd7cf129c1f96483c96c29)
@@ -0,0 +1,10 @@
+<!DOCTYPE html>
+<html lang="en">
+<head>
+    <meta charset="UTF-8">
+    <title>Title</title>
+</head>
+<body>
+    인덱스임
+</body>
+</html>
\ No newline at end of file
Index: shop/shop/src/main/resources/templates/cart/cartList.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/shop/shop/src/main/resources/templates/cart/cartList.html b/shop/shop/src/main/resources/templates/cart/cartList.html
new file mode 100644
--- /dev/null	(revision 74a8b684730665ca64dd7cf129c1f96483c96c29)
+++ b/shop/shop/src/main/resources/templates/cart/cartList.html	(revision 74a8b684730665ca64dd7cf129c1f96483c96c29)
@@ -0,0 +1,246 @@
+<!DOCTYPE html>
+<html lang="ko" xmlns:th="http://www.thymeleaf.org"
+      xmlns:layout=http://www.ultraq.net.nz/thymeleaf/layout
+      layout:decorate='~{layouts/layout1}'>
+<head>
+    <meta name="_csrf" th:content="${_csrf.token}"/>
+    <meta name="_csrf_header" th:content="${_csrf.headerName}"/>
+</head>
+
+<!--사용자 스크립트 추가-->
+<th:block layout:fragment="script">
+    <script th:inline="javascript">
+        $(document).ready(function(){
+          $("input[name=cartChkBox]").change(function(){
+              getOrderTotalPrice();
+          })
+        })
+
+        function getOrderTotalPrice(){
+            let orderTotalPrice = 0;
+            $("input[name=cartChkBox]:checked").each(function(){
+                const cartItemId = $(this).val();
+                const price = $("#price_"+ cartItemId).attr("data-price");
+                const count = $("#count_"+ cartItemId).val();
+                orderTotalPrice += price * count;
+            });
+            $("#orderTotalPrice").html(orderTotalPrice + '원');
+        }
+
+        function changeCount(obj){
+            const count = obj.value;
+            const cartItemId = obj.id.split("_")[1];
+            const price = $("#price_" + cartItemId).data('price');
+            const totalPrice = count*price;
+            $("#totalPrice_"+ cartItemId).html(totalPrice+ "원")
+            getOrderTotalPrice();
+            updateCartItemCount(cartItemId, count);
+        }
+
+        function checkAll(){
+            if($("#checkAll").prop("checked")){
+                $("input[name=cartChkBox]").prop("checked", true);
+            } else {
+                $("input[name=cartChkBox]").prop("checked", false);
+            }
+            getOrderTotalPrice();
+        }
+
+        function updateCartItemCount(cartItemId, count){
+            const token = $("meta[name='_csrf']").attr("content");
+            const header = $("meta[name='_csrf_header']").attr("content");
+
+            const url = "/cartItem/" + cartItemId + "?count=" + count;
+            $.ajax({
+                url: url,
+                type: "PATCH",
+                beforeSend: function(xhr){
+                    xhr.setRequestHeader(header, token);
+                },
+                dataType: "json",
+                cache: false,
+                success: function(result, status){
+                    console.log("cartItem count update success");
+                },
+                error: function(jqXHR, status, error){
+                    if(jqXHR.status == '401'){
+                        alert("로그인 후 이용해주세요.");
+                        location.href = '/members/login';
+                    } else {
+                        alert(jqXHR.responseText);
+                    }
+                }
+            })
+
+        }
+
+        function deleteCartItem(obj){
+            const cartItemId = obj.dataset.id;
+            const token = $("meta[name='_csrf']").attr("content");
+            const header = $("meta[name='_csrf_header']").attr("content");
+            const url = "/cartItem/" + cartItemId;
+
+            $.ajax({
+                url: url,
+                type: "DELETE",
+                beforeSend: function(xhr){
+                    xhr.setRequestHeader(header, token);
+                },
+                dataType: "json",
+                cache: false,
+                success: function(result, status){
+                    alert("장바구니 상품을 삭제했습니다.");
+                    location.href = '/cart';
+                },
+                error: function(jqXHR, status, error){
+                    if(jqXHR.status == '401'){
+                        alert("로그인 후 사용해주세요.");
+                        location.href = '/members/login';
+                    } else {
+                        alert(jqXHR.responseJSON.message)
+                    }
+                }
+            })
+        }
+       function orders(){
+        const token = $("meta[name='_csrf']").attr("content");
+        const header = $("meta[name='_csrf_header']").attr("content");
+
+        const url = "/cart/orders";
+        const dataList = new Array();
+        const paramData = new Object();
+
+        // 체크된 장바구니의 상품 아이디를 전달하기 위해서
+        // dataList배열에 장바구니 상품아이디를 객체로 만들어 저장함.
+        $("input[name=cartChkBox]:checked").each(function(){
+            const cartItemId = $(this).val();
+            const data = new Object();
+            data["cartItemId"] = cartItemId;
+            dataList.push(data);
+            console.log("===== dataList : " + dataList);
+        })
+
+        // 장바구니 상품 아이디를 저장해 둔 dataList배열을 paramData 객체에 추가함.
+        paramData['cartOrderDTOList']= dataList;
+
+        const param = JSON.stringify(paramData);
+
+        $.ajax({
+            url: url,
+            type: "POST",
+            contentType: "application/json",
+            data: param,
+            beforeSend: function(xhr){
+                xhr.setRequestHeader(header, token);
+            },
+            dataType: "json",
+            cache: false,
+            success: function(result, status){
+                alert("주문이 완료 되었습니다.");
+                location.href = "/orders";
+            },
+            error: function(jqXHR, status, error){
+                if(jqXHR.status == '401'){
+                    alert("로그인 후 이용해주세요.");
+                    location.href= "/members/login";
+                } else {
+                    alert(jqXHR.responseJSON.messages);
+                }
+            }
+        })
+
+    }
+    </script>
+</th:block>
+
+<!--사용자 CSS 추가-->
+<th:block layout:fragment="css">
+    <style>
+        .content-mg{
+            margin-left:25%;
+            margin-right:25%;
+            margin-top:2%;
+            margin-bottom:100px;
+        }
+        .repImgDiv{
+            margin-right:15px;
+            margin-left:15px;
+            height:auto;
+        }
+        .repImg{
+            height:100px;
+            width:100px;
+        }
+        .fs18{
+            font-size:18px
+        }
+        .fs24{
+            font-size:24px
+        }
+    </style>
+</th:block>
+<div layout:fragment="content" class="content-mg">
+    <h2 class="mb-4">장바구니 목록</h2>
+
+    <table class="table">
+        <thead>
+        <tr>
+            <td>
+                <input type="checkbox" id="checkAll" onclick="checkAll()">&nbsp; 전체선택
+            </td>
+            <td>상품정보</td>
+            <td>상품금액</td>
+        </tr>
+        </thead>
+        <tbody>
+        <tr th:each="cartItem : ${cartItems}">
+            <td class="text-center align-middle">
+                <input type="checkbox" name="cartChkBox"
+                       th:value="${cartItem.cartItemId}">
+            </td>
+            <td class="d-flex">
+                <div class="repImgDiv align-self-center">
+                    <img th:src="${cartItem.imgUrl}"
+                         th:alt="${cartItem.itemNm}"
+                         class="rounded repImg">
+
+                </div>
+                <div class="align-self-center">
+          <span class="fs24 font-weight-bold"
+                th:text="${cartItem.itemNm}"></span>
+
+                    <div class="fs18 font-weight-light">
+            <span class="input-group mt-2">
+              <span class="align-self-center mr-2"
+                    th:id="'price_' + ${cartItem.cartItemId}"
+                    th:data-price="${cartItem.price}"
+                    th:text="${cartItem.price} + '원'"></span>
+              <input type="number" name="count"
+                     th:id="'count_' + ${cartItem.cartItemId}"
+                     th:value="${cartItem.count}" min="1"
+                     onchange="changeCount(this)"
+                     class="form-control mr-2">
+              <button class="close" type="button" aria-label="Close">
+                <span aria-hidden="true" th:data-id="${cartItem.cartItemId}"
+                      onclick="deleteCartItem(this)">&times;</span>
+              </button>
+            </span>
+                    </div>
+                </div>
+            </td>
+            <td class="text-center align-middle">
+        <span th:id="'totalPrice_' + ${cartItem.cartItemId}"
+              name="totalPrice"
+              th:text="${cartItem.price * cartItem.count} + '원'"></span>
+            </td>
+        </tr>
+        </tbody>
+    </table>
+    <h2 class="text-center">
+        총 주문 금액 : <span id="orderTotalPrice" class="text-danger">0원</span>
+    </h2>
+    <div class="text-center mt-3">
+        <button type="button" class="btn btn-primary btn-lg" onclick="orders()">주문하기</button>
+    </div>
+</div>
+</html>
\ No newline at end of file
Index: shop/shop/src/main/resources/templates/fragments/footer.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/shop/shop/src/main/resources/templates/fragments/footer.html b/shop/shop/src/main/resources/templates/fragments/footer.html
new file mode 100644
--- /dev/null	(revision 74a8b684730665ca64dd7cf129c1f96483c96c29)
+++ b/shop/shop/src/main/resources/templates/fragments/footer.html	(revision 74a8b684730665ca64dd7cf129c1f96483c96c29)
@@ -0,0 +1,81 @@
+<!DOCTYPE html>
+<html lang="ko" xmlns:th="https://www.thymeleaf.org">
+
+<!-- 이곳을 부를때의 이름. footer.-->
+<div th:fragment="footer" class="footer">
+    <footer id="footerType" class="footer__wrap footersection gmarket gray">
+        <h2 class="ir_so">푸터 영역</h2>
+        <div class="footer__inner footerContainer">
+            <div class="footer__logo">
+                <h3>Webstoryboy</h3>
+                <p>
+                    안녕하세요!<br>
+                    문의사항은 메일로 부탁드립니다.<br>
+                    <a href="mailto:webstoryboy@naver.com">webstoryboy@naver.com</a>
+                </p>
+                <div class="sns">
+                    <ul>
+                        <li><a href="#"><span class="ir_pm">페이스북</span></a></li>
+                        <li><a href="#"><span class="ir_pm">인스타</span></a></li>
+                        <li><a href="#"><span class="ir_pm">유튜브</span></a></li>
+                        <li><a href="#"><span class="ir_pm">깃헙</span></a></li>
+                        <li><a href="#"><span class="ir_pm">디스코드</span></a></li>
+                    </ul>
+                </div>
+            </div>
+            <div class="footer__menu">
+                <div>
+                    <h3>레이아웃 영역</h3>
+                    <ul>
+                        <li><a href="#">레이아웃 유형01</a></li>
+                        <li><a href="#">레이아웃 유형02</a></li>
+                        <li><a href="#">레이아웃 유형03</a></li>
+                        <li><a href="#">레이아웃 유형04</a></li>
+                        <li><a href="#">레이아웃 유형05</a></li>
+                    </ul>
+                </div>
+                <div>
+                    <h3>메인 영역</h3>
+                    <ul>
+                        <li><a href="#">이미지 유형01</a></li>
+                        <li><a href="#">동영상 유형02</a></li>
+                        <li><a href="#">슬라이드 유형03</a></li>
+                    </ul>
+                </div>
+                <div>
+                    <h3>컨텐츠 영역</h3>
+                    <ul>
+                        <li><a href="#">텍스트 유형01</a></li>
+                        <li><a href="#">이미지 유형02</a></li>
+                        <li><a href="#">이미지/텍스트03</a></li>
+                        <li><a href="#">카드 유형04</a></li>
+                        <li><a href="#">배너 유형05</a></li>
+                    </ul>
+                </div>
+                <div>
+                    <h3>푸터 영역</h3>
+                    <ul>
+                        <li><a href="#">컨택트 유형01</a></li>
+                        <li><a href="#">푸터 유형02</a></li>
+                    </ul>
+                </div>
+                <div>
+                    <h3>사이트 영역</h3>
+                    <ul>
+                        <li><a href="#">웹표준 사이트</a></li>
+                        <li><a href="#">반응형 사이트</a></li>
+                        <li><a href="#">패럴랙스 사이트</a></li>
+                        <li><a href="#">포트폴리오 사이트</a></li>
+                    </ul>
+                </div>
+            </div>
+            <address class="footer__right">
+                ©2022 webstroyboy. All rights reserved.
+            </address>
+        </div>
+    </footer>
+
+
+</div>
+
+</html>
\ No newline at end of file
Index: shop/shop/src/main/resources/templates/fragments/header.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/shop/shop/src/main/resources/templates/fragments/header.html b/shop/shop/src/main/resources/templates/fragments/header.html
new file mode 100644
--- /dev/null	(revision 74a8b684730665ca64dd7cf129c1f96483c96c29)
+++ b/shop/shop/src/main/resources/templates/fragments/header.html	(revision 74a8b684730665ca64dd7cf129c1f96483c96c29)
@@ -0,0 +1,61 @@
+<!DOCTYPE html>
+<html lang="ko" xmlns:th="https://www.thymeleaf.org"
+      xmlns:sec="http://www.thymeleaf.org/extras/spring-security">
+
+<div th:fragment="header">
+
+    <nav class="navbar navbar-expand-lg navbar-dark bg-dark">
+        <a class="navbar-brand" href="/">Shop</a>
+        <button class="navbar-toggler" type="button" data-toggle="collapse"
+                data-target="#navbarSupportedContent" aria-controls="navbarSupportedContent"
+                aria-expanded="false" aria-label="Toggle navigation">
+            <span class="navbar-toggler-icon"></span>
+        </button>
+
+        <div class="collapse navbar-collapse" id="navbarSupportedContent">
+            <ul class="navbar-nav mr-auto">
+                <li class="nav-item active" sec:authorize="hasAnyAuthority('ROLE_ADMIN')">
+                    <a class="nav-link" href="/admin/item/new">상품등록</a>
+                </li>
+                <li class="nav-item" sec:authorize="hasAnyAuthority('ROLE_ADMIN')">
+                    <a class="nav-link" href="/admin/items">상품관리</a>
+                </li>
+                <li class="nav-item" sec:authorize="isAuthenticated()">
+                    <a class="nav-link" href="/cart">장바구니</a>
+                </li>
+                <li class="nav-item" sec:authorize="isAuthenticated()">
+                    <a class="nav-link" href="/orders">구매이력</a>
+                </li>
+                <li class="nav-item" sec:authorize="isAnonymous()">
+                    <a class="nav-link" href="/members/login">로그인</a>
+                </li>
+                <li class="nav-item" sec:authorize="isAuthenticated()">
+                    <a class="nav-link" href="/members/logout">로그아웃</a>
+                </li><!--
+                        <li class="nav-item dropdown">
+                            <a class="nav-link dropdown-toggle" href="#" id="navbarDropdown" role="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
+                                Dropdown
+                            </a>
+                            <div class="dropdown-menu" aria-labelledby="navbarDropdown">
+                                <a class="dropdown-item" href="#">Action</a>
+                                <a class="dropdown-item" href="#">Another action</a>
+                                <div class="dropdown-divider"></div>
+                                <a class="dropdown-item" href="#">Something else here</a>
+                            </div>
+                        </li>
+                        <li class="nav-item">
+                            <a class="nav-link disabled" href="#" tabindex="-1" aria-disabled="true">Disabled</a>
+                        </li>-->
+            </ul>
+            <form class="form-inline my-2 my-lg-0" th:action="@{/}" method="get">
+                <input name="searchQuery" class="form-control mr-sm-2" type="search" placeholder="Search" aria-label="Search">
+                <button class="btn btn-outline-success my-2 my-sm-0" type="submit">Search</button>
+            </form>
+        </div>
+    </nav>
+    <!-- Navbar content -->
+
+
+</div>
+
+</html>
\ No newline at end of file
Index: shop/shop/src/main/resources/templates/fragments/myHeader.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/shop/shop/src/main/resources/templates/fragments/myHeader.html b/shop/shop/src/main/resources/templates/fragments/myHeader.html
new file mode 100644
--- /dev/null	(revision 74a8b684730665ca64dd7cf129c1f96483c96c29)
+++ b/shop/shop/src/main/resources/templates/fragments/myHeader.html	(revision 74a8b684730665ca64dd7cf129c1f96483c96c29)
@@ -0,0 +1,189 @@
+<!DOCTYPE html>
+<html lang="ko" xmlns:th="https://www.thymeleaf.org"
+      xmlns:sec="http://www.thymeleaf.org/extras/spring-security">
+
+<div th:fragment="header">
+    <link rel="stylesheet"
+          href="https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined:opsz,wght,FILL,GRAD@20..48,100..700,0..1,-50..200"/>
+    <link rel="stylesheet" href="nav2.css">
+
+    </head>
+    <nav>
+        <div class="top-area">
+            <div class="top-areaInner">
+                <a href="#">★SALE EVENT★</a>
+            </div>
+        </div>
+
+        <!-- <div class="top-area">
+              <div class="inner">
+                  <a href="#">마이페이지</a>
+                  <a href="#">로그인</a>
+              </div>
+          </div> -->
+        <div class="container1">
+            <div class="section">
+                <a href="/2pro/ProjectMenu/ProjectMenu/1/hyo/hyo/main.html">
+                    <img src="/2pro/myPage/로고2.png" alt="" style="width: 60px; width: 120px;">
+                </a>
+            </div>
+            <div class="section2">
+                <div class="search-bar">
+                    <input type="text" class="inp" placeholder="">
+                    <!-- <button type="submit" class="btn icon search"><span>검색</span></button> -->
+                    <i class="fas fa-search search-icon" id="searchIcon"></i>
+
+                </div>
+                <i class="fas fa-search search-icon searchIcon123" id="searchIcon2"></i>
+                <input type="text" id="searchInput" placeholder="Search here..." style="display: none;">
+            </div>
+            <div class="section" id="icon-box">
+                <li class="nav-item active" sec:authorize="hasAnyAuthority('ROLE_ADMIN')">
+                    <a class="nav-link" href="/admin/item/new">상품등록</a>
+                </li>
+                <li class="nav-item" sec:authorize="isAuthenticated()">
+                    <a class="nav-link" href="/members/logout">로그아웃</a>
+                </li>
+                <a href="#">
+        <span class="material-symbols-outlined">
+          person_add
+        </span>
+                </a>
+                <a href="#">
+        <span class="material-symbols-outlined">
+          login
+        </span>
+                </a>
+                <li class="nav-item" sec:authorize="isAnonymous()">
+                    <a href=""/members/login"">
+                    <span class="material-symbols-outlined">
+          person
+        </span>
+                    </a>
+                </li>
+                <li class="nav-item" sec:authorize="isAuthenticated()">
+                    <a class="nav-link" href="/orders">구매이력</a>
+                </li>
+                <li class="nav-item" sec:authorize="isAuthenticated()">
+                    <a href="/cart">
+<span class="material-symbols-outlined">
+          shopping_bag
+        </span>
+                    </a>
+                </li>
+
+
+            </div>
+        </div>
+        <div class="Category-container">
+            <div class="dropdownAll">
+                <div class="dropdown" id="phoneBt">
+                    <button id="mainCategoryBtn">메인 카테고리</button>
+                    <ul class="dropdown-menu">
+                        <li>
+                            <a href="#">Top</a>
+                            <ul class="sub-dropdown-menu">
+                                <li><a href="#">블라우스</a></li>
+                                <li><a href="#">셔츠</a></li>
+                                <li><a href="#">맨투맨/후드</a></li>
+                                <li style="padding-bottom: 80px;"><a href="#">니트/스웨터</a></li>
+                            </ul>
+                        </li>
+                        <li>
+                            <a href="#">Outer</a>
+                            <ul class="sub-dropdown-menu">
+                                <li><a href="#">패딩</a></li>
+                                <li><a href="#">코트</a></li>
+                                <li><a href="#">재킷</a></li>
+                                <li style="padding-bottom: 80px;"><a href="#">집업</a></li>
+                            </ul>
+                        </li>
+                        <li>
+                            <a href="#">Pants</a>
+                            <ul class="sub-dropdown-menu">
+                                <li><a href="#">슬랙스</a></li>
+                                <li><a href="#">청바지</a></li>
+                                <li style="padding-bottom: 80px;"><a href="#">트레이닝/레깅스</a></li>
+                            </ul>
+                        </li>
+                        <li>
+                            <a href="#">Skirt/Dress</a>
+                            <ul class="sub-dropdown-menu">
+                                <li><a href="#">미니</a></li>
+                                <li><a href="#">미디</a></li>
+                                <li style="padding-bottom: 95px;"><a href="#">롱</a></li>
+                            </ul>
+                        </li>
+                        <li>
+                            <a href="#">Shoes</a>
+                            <ul class="sub-dropdown-menu">
+                                <li><a href="#">부츠</a></li>
+                                <li><a href="#">힐/로퍼</a></li>
+                                <li><a href="#">운동화</a></li>
+                                <li style="padding-bottom: 80px;"><a href="#">슬리퍼</a></li>
+                            </ul>
+                        </li>
+                    </ul>
+                </div>
+                <div class="dropdown" id="pcBt">
+                    <button id="categoryBtn1">Top</button>
+                    <ul class="dropdown-menu">
+                        <li><a href="#">블라우스</a></li>
+                        <li><a href="#">셔츠</a></li>
+                        <li><a href="#">맨투맨/후드</a></li>
+                        <li><a href="#">니트/스웨터</a></li>
+                    </ul>
+                </div>
+
+                <div class="dropdown" id="pcBt">
+                    <button id="categoryBtn2">Outer</button>
+                    <ul class="dropdown-menu">
+                        <li><a href="#">패딩</a></li>
+                        <li><a href="#">코트</a></li>
+                        <li><a href="#">재킷</a></li>
+                        <li><a href="#">집업</a></li>
+                    </ul>
+                </div>
+
+                <div class="dropdown" id="pcBt">
+                    <button id="categoryBtn3">Pants</button>
+                    <ul class="dropdown-menu">
+                        <li><a href="#">슬랙스</a></li>
+                        <li><a href="#">청바지</a></li>
+                        <li><a href="#">트레이닝/레깅스</a></li>
+                    </ul>
+                </div>
+
+                <div class="dropdown" id="pcBt">
+                    <button id="categoryBtn4">Skirt/Dress</button>
+                    <ul class="dropdown-menu">
+                        <li><a href="#">미니</a></li>
+                        <li><a href="#">미디</a></li>
+                        <li><a href="#">롱</a></li>
+                    </ul>
+                </div>
+
+                <div class="dropdown" id="pcBt">
+                    <button id="categoryBtn5">Shoes</button>
+                    <ul class="dropdown-menu">
+                        <li><a href="#">부츠</a></li>
+                        <li><a href="#">힐/로퍼</a></li>
+                        <li><a href="#">운동화</a></li>
+                        <li><a href="#">슬리퍼</a></li>
+                    </ul>
+                </div>
+            </div>
+            <div class="links">
+                <a href="#">NEW</a>
+                <a href="#">RANK</a>
+                <a href="#">SALE</a>
+            </div>
+        </div>
+        <form class="form-inline my-2 my-lg-0" th:action="@{/}" method="get">
+            <input name="searchQuery" class="form-control mr-sm-2" type="search" placeholder="Search"
+                   aria-label="Search">
+            <button class="btn btn-outline-success my-2 my-sm-0" type="submit">Search</button>
+        </form>
+    </nav>
+</div>
+</html>
Index: shop/shop/src/main/resources/templates/item/itemDtl.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/shop/shop/src/main/resources/templates/item/itemDtl.html b/shop/shop/src/main/resources/templates/item/itemDtl.html
new file mode 100644
--- /dev/null	(revision 74a8b684730665ca64dd7cf129c1f96483c96c29)
+++ b/shop/shop/src/main/resources/templates/item/itemDtl.html	(revision 74a8b684730665ca64dd7cf129c1f96483c96c29)
@@ -0,0 +1,194 @@
+<!DOCTYPE html>
+<html lang="ko" xmlns:th="http://www.thymeleaf.org"
+      xmlns:layout=http://www.ultraq.net.nz/thymeleaf/layout
+      layout:decorate='~{layouts/layout1}'>
+
+<head>
+    <meta name="_csrf" th:content="${_csrf.token}"/>
+    <meta name="_csrf_header" th:content="${_csrf.headerName}"/>
+
+</head>
+
+<!-- 사용자 스크립트 추가 -->
+<th:block layout:fragment="script">
+    <script th:inline="javascript" >
+        $(document).ready(function(){
+            calculateTotalPrice();
+
+            $("#count").change(function(){
+                calculateTotalPrice();
+            });
+        });
+
+        function calculateTotalPrice(){
+            const count = $("#count").val();
+            const price = $("#price").val();
+            const totalPrice = price * count;
+            $("#totalPrice").html(totalPrice + "원");
+        }
+        function order(){
+         // csrf 토큰값을 가져옴.
+            const token = $("meta[name='_csrf']").attr("content");
+            const header= $("meta[name='_csrf_header']").attr("content");
+            const url = "/order";
+            const paramData = {
+                              itemId: $("#itemId").val(),
+                              count: $("#count").val()
+            };
+            const param = JSON.stringify(paramData);
+            $.ajax({
+                    url: url,
+                    type:"POST",
+                    contentType: "application/json",
+                    data: param,
+                    beforeSend: function(xhr){
+                       // 데이터를 전송하기 전 헤더에 csrf 값을 생성
+                       xhr.setRequestHeader(header, token);
+                    },
+                    dataType:"json",
+                    cache: false,
+                    success: function(result, status){
+                            alert("주문이 완료되었습니다.");
+                            location.href='/';
+                    },
+                    error: function(jqXHR,status,error){
+                            if(jqXHR.status == '401'){
+                                alert("로그인 후 이용해주세요.");
+                                location.href='/member/login';
+                            }else{
+                            // 해당 메시지를 출력
+                                alert(jqXHR.responseText);
+                            }
+                    }
+            })
+
+        }
+
+        function addCart(){
+         // csrf 토큰값을 가져옴.
+            const token = $("meta[name='_csrf']").attr("content");
+            const header= $("meta[name='_csrf_header']").attr("content");
+            const url = "/cart";
+            const paramData = {
+                              itemId: $("#itemId").val(),
+                              count: $("#count").val()
+            };
+            const param = JSON.stringify(paramData);
+            $.ajax({
+                    url: url,
+                    type:"POST",
+                    contentType: "application/json",
+                    data: param,
+                    beforeSend: function(xhr){
+                       // 데이터를 전송하기 전 헤더에 csrf 값을 생성
+                       xhr.setRequestHeader(header, token);
+                    },
+                    dataType:"json",
+                    cache: false,
+                    success: function(result, status){
+                            alert("장바구니 담기 완료되었습니다.");
+                            location.href='/';
+                    },
+                    error: function(jqXHR,status,error){
+                            if(jqXHR.status == '401'){
+                                alert("로그인 후 이용해주세요.");
+                                location.href='/member/login';
+                            }else{
+                            // 해당 메시지를 출력
+                                alert(jqXHR.responseText);
+                            }
+                    }
+            })
+
+        }
+    </script>
+</th:block>
+
+<!-- 사용자 CSS 추가 -->
+<th:block layout:fragment="css">
+    <style>
+        .mgb-15{
+            margin-bottom:15px;
+        }
+        .mgt-30{
+            margin-top:30px;
+        }
+        .mgt-50{
+            margin-top:50px;
+        }
+        .repImgDiv{
+            margin-right:15px;
+            height:auto;
+            width:50%;
+        }
+        .repImg{
+            width:100%;
+            height:400px;
+        }
+        .wd50{
+            height:auto;
+            width:50%;
+        }
+    </style>
+</th:block>
+
+<div layout:fragment="content" style="margin-left:25%; margin -right:25%">
+    <input type="hidden" id="itemId" th:value="${item.id}">
+    <div class="d-flex">
+        <div class="d-flex">
+            <!-- [0] 은 대표이미지-->
+            <img th:src="${item.itemImgDTOList[0].imgUrl}"
+                 th:alt="${item.itemNm}" class="rounded repImg">
+        </div>
+        <div class="wd50">
+            <span th:if="${item.itemSellStatus == T(com.keduit.shop.constant.ItemSellStatus).SELL}"
+                  class="bagdge nadge-primary mgb-15">판매중</span>
+            <!--   타입리프 문법. unless 의 경우도 조건을 같게 줘야함.  -->
+            <span th:unless="${item.itemSellStatus == T(com.keduit.shop.constant.ItemSellStatus).SELL}"
+                  class="badge btn-danger mgb-15">품절</span>
+            <div class="h4" th:text="${item.itemNm}"></div>
+            <hr class="my-4">
+            <div class="text-right">
+                <div class="4h text-danger text-left">
+                    <input type="hidden" th:value="${item.price}" id="price" name="price">
+                    <span th:text="${item.price}"></span>
+                </div>
+                <div class="input-group w-50">
+                    <div class="input-group-preprnd">
+                        <span class="input-group-text">수량</span>
+                        <input type="number" name="count" id="count" class="form-control" value="1" min="1">
+                    </div>
+                </div>
+                <hr class="my-4">
+                <div class="text-right mgt-50">
+                    <h5>결제금액</h5>
+                    <h3 name="totalPrice" id="totalPrice" class="font-weight-bold"></h3>
+                </div>
+                <div th:if="${item.itemSellStatus == T(com.keduit.shop.constant.ItemSellStatus).SELL}"
+                     class="text-right">
+                    <button type="button" class="btn btn-light border-primary btn-lg" onclick="addCart()">장바구니 담기</button>
+                    <button type="button" class="btn btn-primary btn-lg" onclick="order()">주문하기</button>
+                </div>
+                <div th:unless="${item.itemSellStatus == T(com.keduit.shop.constant.ItemSellStatus).SELL}"
+                     class="text-right">
+                    <button type="button" class="btn btn-danger btn-lg>">품절</button>
+                </div>
+            </div>
+        </div>
+    </div>
+    <div class="jumbotron jumbotron-fluid mgt-30">
+        <div class="container">
+            <h4 class="display-5">상품 상세 설명</h4>
+            <hr calss="my-4">
+            <p class="lead" th:text="${item.itemDetail}"></p>
+        </div>
+    </div>
+
+    <div th:each="itemImg : ${item.itemImgDTOList}" class="text-center">
+
+        <img th:if="${not #strings.isEmpty(itemImg.ImgUrl)}"
+             th:src="${itemImg.imgUrl}" th:alt="${item.itemNm}"
+             class="rounded mgb-15" width="100%">
+    </div>
+</div>
+</html>
\ No newline at end of file
Index: shop/shop/src/main/resources/templates/item/itemForm.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/shop/shop/src/main/resources/templates/item/itemForm.html b/shop/shop/src/main/resources/templates/item/itemForm.html
new file mode 100644
--- /dev/null	(revision 74a8b684730665ca64dd7cf129c1f96483c96c29)
+++ b/shop/shop/src/main/resources/templates/item/itemForm.html	(revision 74a8b684730665ca64dd7cf129c1f96483c96c29)
@@ -0,0 +1,154 @@
+<!DOCTYPE html>
+<!-- layout:decorate 속성을 사용하여 해당 HTML 문서가 레이아웃 템플릿인 layouts/layout1을 사용한다는 것을 명시 -->
+<html lang="ko" xmlns:th="https://www.thymeleaf.org"
+      xmlns:layout=https://www.ultraq.net.nz/thymeleaf/layout
+      layout:decorate='~{layouts/layout1}'>
+
+<!-- 사용자 스크립트 추가 -->
+<th:block layout:fragment="script">
+    <script th:inline="javascript">
+        $(document).ready(function(){
+            const errorMessage = [[${errorMessage}]]
+
+            if(errorMessage){
+                alert(erroorMessage);
+            }
+
+            bindDomEvent();
+        })
+
+        function bindDomEvent(){
+            $(".custom-file-input").on("change", function(){
+                let fileName = $(this).val().split("\\").pop();
+                let fileExt = fileName.substring(fileName.lastIndexOf(".")+1);
+
+                console.log("fileName =====> ", fileName);
+                console.log("fileExt =====> ", fileExt);
+
+                fileExt = fileExt.toLowerCase();
+
+                if(fileExt != "jpg" && fileExt != "jpeg" && fileExt != "gif" && fileExt != "png" && fileExt != "bmp"){
+                    alert("이미지 파일만 등록이 가능합니다.");
+
+                    return;
+                }
+
+                $(this).siblings(".custom-file-label").html(fileName);
+            })
+        }
+    </script>
+</th:block>
+
+<!-- 사용자 CSS 추가 -->
+<th:block layout:fragment="css">
+    <style>
+        .input-group{
+            margin-bottom: 15px
+        }
+
+        .img-div{
+            margin-bottom: 10px
+        }
+
+        .fieldError{
+            color: #bd2130;
+        }
+    </style>
+</th:block>
+
+<!-- 레이아웃 템플릿에서 "content" fragment를 채우기 위한 공간 -->
+<div layout:fragment="content">
+    <!-- enctype="multipart/form-data"는 파일 업로드를 위해 폼 데이터가 인코딩되는 방식을 지정.
+         th:object="${itemFormDTO}"는 폼 데이터가 바인딩될 객체를 지정 -->
+    <form role="form" method="post" enctype="multipart/form-data" th:object="${itemFormDTO}">
+        <p class="h2">상품 등록</p>
+
+        <!-- th:field="*{id}": name="id" -->
+        <!-- 상품 ID를 저장하는 숨은 입력 필드. 이 필드는 사용자가 직접 입력하지 않고, 서버에서 처리. -->
+        <input type="hidden" th:field="*{id}">
+
+        <div class="form-group">
+            <select th:field="*{itemSellStatus}" class="custom-select">
+                <option value="SELL">판매중</option>
+                <option value="SOLD_OUT">품절</option>
+            </select>
+        </div>
+
+        <div class="input-group">
+            <div class="input-group-prepend">
+                <span class="input-group-text">상품명</span>
+            </div>
+
+            <input type="text" th:field="*{itemNm}" class="form-control" placeholder="상품명을 입력해주세요">
+        </div>
+
+        <p th:if="${#fields.hasErrors('itemNm')}" th:errors="*{itemNm}" class="fieldError">Incorrect data</p>
+
+        <div class="input-group">
+            <div class="input-group-prepend">
+                <span class="input-group-text">가격</span>
+            </div>
+
+            <input type="text" th:field="*{price}" class="form-control" placeholder="상품 가격을 입력해주세요">
+        </div>
+
+        <p th:if="${#fields.hasErrors('price')}" th:errors="*{price}" class="fieldError">Incorrect data</p>
+
+        <div class="input-group">
+            <div class="input-group-prepend">
+                <span class="input-group-text">재고</span>
+            </div>
+
+            <input type="number" th:field="*{stockNumber}" class="form-control" placeholder="상품 재고를 입력해주세요">
+        </div>
+
+        <p th:if="${#fields.hasErrors('stockNumber')}" th:errors="*{stockNumber}" class="fieldError">Incorrect data</p>
+
+        <div class="input-group">
+            <div class="input-group-prepend">
+                <span class="input-group-text">상품 상세 내용</span>
+            </div>
+
+            <textarea class="form-control" aria-label="With textarea" th:field="*{itemDetail}"></textarea>
+        </div>
+
+        <p th:if="${#fields.hasErrors('itemDetail')}" th:errors="*{itemDetail}" class="fieldError">Incorrect data</p>
+
+        <!-- #lists: 타임리프에서 유틸리티 객체로써 컬렉션 list를 나타냄. #sets, #maps도 있음. -->
+        <div th:if="${#lists.isEmpty(itemFormDTO.itemImgDTOList)}">
+            <div class="form-group" th:each="num: ${#numbers.sequence(1,5)}">
+                <div class="custom-file img-div">
+                    <input type="file" class="custom-file-input" name="itemImgFile">
+
+                    <label class="custom-file-label" th:text="상품이미지 + ${num}"></label>
+                </div>
+            </div>
+        </div>
+
+        <div th:if="${not #lists.isEmpty(itemFormDTO.itemImgDTOList)}">
+            <div class="form-group" th:each="itemImgDTO, status: ${itemFormDTO.itemImgDTOList}">
+                <div class="custom-file img-div">
+                    <input type="file" class="custom-file-input" name="itemImgFile">
+
+                    <input type="hidden" name="itemImgIds" th:value="${itemImgDTO.id}">
+
+                    <!-- #strings: 문자 관련 유틸리티 객체 -->
+                    <label class="custom-file-label"
+                           th:text="${not #strings.isEmpty(itemImgDTO.oriImgName)} ? ${itemImgDTO.oriImgName} : '상품이미지' + ${status.index+1}"></label>
+                </div>
+            </div>
+        </div>
+
+        <div th:if="${#strings.isEmpty(itemFormDTO.id)}" style="text-align: center">
+            <!-- th:formaction -> submit 버튼의 action 태그에 해당함 -->
+            <button th:formaction="@{/admin/item/new}" type="submit" class="btn btn-primary">저장</button>
+        </div>
+
+        <div th:unless="${#strings.isEmpty(itemFormDTO.id)}" style="text-align:center">
+            <button th:formaction="@{'/admin/item/' + ${itemFormDTO.id}}" type="submit" class="btn btn-primary">수정</button>
+        </div>
+
+        <input type="hidden" th:name="${_csrf.parameterName}" th:value="${_csrf.token}">
+    </form>
+</div>
+</html>
\ No newline at end of file
Index: shop/shop/src/main/resources/templates/item/itemMng.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/shop/shop/src/main/resources/templates/item/itemMng.html b/shop/shop/src/main/resources/templates/item/itemMng.html
new file mode 100644
--- /dev/null	(revision 74a8b684730665ca64dd7cf129c1f96483c96c29)
+++ b/shop/shop/src/main/resources/templates/item/itemMng.html	(revision 74a8b684730665ca64dd7cf129c1f96483c96c29)
@@ -0,0 +1,126 @@
+<!DOCTYPE html>
+<html lang="ko" xmlns:th="http://www.thymeleaf.org"
+      xmlns:layout=http://www.ultraq.net.nz/thymeleaf/layout
+      layout:decorate='~{layouts/layout1}'>
+
+<!--사용자 스크립트 추가-->
+<th:block layout:fragment="script">
+  <script th:inline="javascript">
+      $(document).ready(function(){
+          $('#searchBtn').on("click", function(e){
+              e.preventDefault();
+              page(0);
+          })
+      });
+
+      function page(page){
+          const searchDateType = $("#searchDateType").val();  // 상품 등록 기간
+          const searchSellStatus = $("#searchSellStatus").val();  // 판매 상태
+          const searchBy = $("#searchBy").val();          // 조회 유형
+          const searchQuery = $("#searchQuery").val();    // 검색어
+
+          location.href="/admin/items/" + page + "?searchDateType=" + searchDateType
+              + "&searchSellStatus=" + searchSellStatus
+              + "&searchBy=" + searchBy
+              + "&searchQuery=" + searchQuery;
+      }
+  </script>
+</th:block>
+
+<!-- 사용자 CSS 추가 -->
+<th:block layout:fragment="css">
+  <style>
+      select {
+          margin-right : 10px
+      }
+
+  </style>
+</th:block>
+
+<div layout:fragment="content">
+<form th:action="@{'/admin/items/' + ${items.number}}"
+      role="form" method="get" th:object="${items}">
+  <table class="table">
+    <thead>
+    <tr>
+      <td>상품아이디</td>
+      <td>상품명</td>
+      <td>상태</td>
+      <td>등록자</td>
+      <td>등록일</td>
+    </tr>
+    </thead>
+    <tbody>  <!-- items.getContnt() : items가 Page 객체이므로
+                  상품 entity 를 가져옴. -->
+    <tr th:each="item, status: ${items.getContent()}">
+      <td th:text="${item.id}"></td>
+      <td>
+        <a th:href="'/admin/item/'+${item.id}" th:text="${item.itemNm}"></a>
+      </td>
+      <td th:text="${item.itemSellStatus ==
+                   T(com.keduit.shop.constant.ItemSellStatus).SELL} ? '판매중' : '품절'"></td>
+      <td th:text="${item.createdBy}"></td>
+      <td th:text="${item.regTime}"></td>
+    </tr>
+    </tbody>
+  </table>
+  <hr>
+
+  <!-- start : (현재페이지 번호 / 보여줄 페이지 수) * 보여줄 페이지수 + 1
+        end : 현재 화명에서 보여줄 마지막 페이지 번호 -->
+  <div th:with="start=${(items.number/maxPage)*maxPage + 1},
+                  end=(${(items.totalPages == 0) ? 1 :
+                  (start + (maxPage - 1) <
+                  items.totalPages ? start + (maxPage - 1) :
+                  items.totalPages)})" >
+    <ul class="pagination justify-content-center">
+
+      <li class="page-item" th:classappend="${items.first}?'disabled'">
+        <a th:onclick="'javascript:page(' + ${items.number - 1} + ')'"
+           aria-label='Previous' class="page-link">
+          <span aria-hidden='true'>Previous</span>
+        </a>
+      </li>
+        <!-- page 객체에서 number 는 현재 페이지를 나타냄
+              [[${page}]] : 타임리프에서 html 콘텐츠 영역안에 직접 데이터를 출력할 때 사용
+               Page 객체에서 시작페이지는 0부터 해당 페이지를 호출할 때에는 page -1 을 해야함.-->
+      <li class="page-item" th:each="page: ${#numbers.sequence(start, end)}"
+          th:classappend="${items.number eq page - 1}?'active':''">
+        <a th:onclick="'javascript:page(' + ${page - 1} + ')'"
+           th:inline="text" class="page-link">[[${page}]]</a>
+      </li>
+
+      <li class="page-item" th:classappend="${items.last}?'disabled'">
+        <a th:onclick="'javascript:page(' + ${items.number + 1} + ')'"
+           aria-label='Next' class="page-link">
+          <span aria-hidden='true'>Next</span>
+        </a>
+      </li>
+
+    </ul>
+  </div>
+
+  <div class="form-inline justify-content-center" th:object="${itemSearchDTO}">
+    <select th:field="*{searchDateType}" class="form-control" style="width:auto;">
+      <option value="all">전체기간</option>
+      <option value="1d">1일</option>
+      <option value="1w">1주</option>
+      <option value="1m">1개월</option>
+      <option value="6m">6개월</option>
+    </select>
+    <select th:field="*{searchSellStatus}" class="form-control" style="width:auto;">
+      <option value="">판매상태(전체)</option>
+      <option value="SELL">판매</option>
+      <option value="SOLD_OUT">품절</option>
+    </select>
+    <select th:field="*{searchBy}" class="form-control" style="width:auto;">
+      <option value="itemNm">상품명</option>
+      <option value="createdBy">등록자</option>
+    </select>
+    <input th:field="*{searchQuery}" type="text" class="form-control"
+           placeholder="검색어를 입력해주세요">
+    <button id="searchBtn" type="submit" class="btn btn-primary">검색</button>
+  </div>
+</form>
+</div>
+</html>
\ No newline at end of file
Index: shop/shop/src/main/resources/templates/layouts/layout1.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/shop/shop/src/main/resources/templates/layouts/layout1.html b/shop/shop/src/main/resources/templates/layouts/layout1.html
new file mode 100644
--- /dev/null	(revision 74a8b684730665ca64dd7cf129c1f96483c96c29)
+++ b/shop/shop/src/main/resources/templates/layouts/layout1.html	(revision 74a8b684730665ca64dd7cf129c1f96483c96c29)
@@ -0,0 +1,38 @@
+<!DOCTYPE html>
+<html lang="ko" xmlns:th="https://www.thymeleaf.org"
+      xmlns:layout="https://www.ultraq.net.nz/thymeleaf/layout">
+<head>
+    <meta charset="UTF-8">
+    <title>Title</title>
+
+    <!-- 부트스트랩 css-->
+
+    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@4.5.3/dist/css/bootstrap.min.css"
+          integrity="sha384-TX8t27EcRE3e/ihU7zmQxVncDAy5uIKz4rEkgIXeMed4M0jlfIDPvg6uqKI2xXr2" crossorigin="anonymous">
+    <script th:src="@{/js/header.js}"></script>
+    <!-- 부트스트랩 js -->
+
+    <link rel="stylesheet" th:href="@{/css/layout1.css}">
+    <!--<link rel="stylesheet" th:href="@{/css/footer.css}">-->
+    <link rel="stylesheet" th:href="@{/css/header.css}">
+
+    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
+    <script src="https://cdn.jsdelivr.net/npm/popper.js@1.16.1/dist/umd/popper.min.js"
+            integrity="sha384-9/reFTGAW83EW2RDu2S0VKaIzap3H66lZH81PoYlFhbGU+6BZp6G7niu735Sk7lN"
+            crossorigin="anonymous"></script>
+    <script src="https://cdn.jsdelivr.net/npm/bootstrap@4.5.3/dist/js/bootstrap.min.js"
+            integrity="sha384-w1Q4orYjBQndcko6MimVbzY0tgp4pWB4lZ7lr30WKz0vr/aWKhXdBNmNb5D92v7s"
+            crossorigin="anonymous"></script>
+    <th:block layout:fragment="script"></th:block>
+    <th:block layout:fragment="css"></th:block>
+</head>
+<body>
+<!-- fra / A : B    여기선 A.html 에 있는 B 를 가져와줘 라는 뜻.-->
+<div th:replace="fragments/header::header"></div>
+<div layout:fragment="content" class="content">
+
+</div>
+<!--<div th:replace="fragments/footer::footer"></div>-->
+
+</body>
+</html>
\ No newline at end of file
Index: shop/shop/src/main/resources/templates/main.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/shop/shop/src/main/resources/templates/main.html b/shop/shop/src/main/resources/templates/main.html
new file mode 100644
--- /dev/null	(revision 74a8b684730665ca64dd7cf129c1f96483c96c29)
+++ b/shop/shop/src/main/resources/templates/main.html	(revision 74a8b684730665ca64dd7cf129c1f96483c96c29)
@@ -0,0 +1,133 @@
+<!DOCTYPE html>
+<html lang="ko" xmlns:th="http://www.thymeleaf.org"
+      xmlns:layout=http://www.ultraq.net.nz/thymeleaf/layout
+      layout:decorate='~{layouts/layout1}'>
+
+<th:block layout:fragment="css">
+    <style>
+        .carousel-inner > .item {
+            height: 350px;
+        }
+        .margin{
+            margin-bottom:30px;
+        }
+        .banner{
+            height: 300px;
+        }
+        .card-text{
+            text-overflow: ellipsis;
+            white-space: nowrap;
+            overflow: hidden;
+        }
+        a:hover{
+            text-decoration:none;
+        }
+        .center{
+            text-align:center;
+        }
+        .banner{
+            position: absolute; top:0; left: 0;
+            width: 100%;
+            height: 100%;
+        }
+    </style>
+</th:block>
+<th:block layout:fragment="script">
+    <script th:inline="javascript">
+        $(document).ready(function(){
+            $('#searchBtn').on("click", function(e){
+                e.preventDefault();
+                page(0);
+            })
+        });
+
+        function page(page){
+            const searchDateType = $("#searchDateType").val();  // 상품 등록 기간
+            const searchSellStatus = $("#searchSellStatus").val();  // 판매 상태
+            const searchBy = $("#searchBy").val();          // 조회 유형
+            const searchQuery = $("#searchQuery").val();    // 검색어
+
+            location.href="/?%20" +"searchQuery=" + searchQuery+"&page="+page
+           ;
+
+        }
+    </script>
+</th:block>
+
+<div layout:fragment="content">
+
+    <div id="carouselControls" class="carousel slide margin" data-ride="carousel">
+        <div class="carousel-inner">
+            <div class="carousel-item active item">
+                <img class="d-block w-100 banner"
+                     src="https://user-images.githubusercontent.com/13268420/112147492-1ab76200-8c20-11eb-8649-3d2f282c3c02.png"
+                     alt="First slide">
+            </div>
+        </div>
+    </div>
+    <input type="hidden" name="searchQuery" th:value="${itemSearchDTO.searchQuery}">
+    <div th:if="${not #strings.isEmpty(itemSearchDTO.searchQuery)}" class="center">
+        <p class="h3 font-weight-bold" th:text="${itemSearchDTO.searchQuery} + '검색 결과'"></p>
+    </div>
+    <div class="row">
+        <th:block th:each="item, status: ${items.getContent()}">
+            <div class="col-md-4 margin">
+                <div class="card">
+                    <a th:href="'/item/'+${item.id}" class="text-dark">
+                        <img th:src="${item.itemUrl}" class="card-img-top"
+                             th:alt="${item.itemNm}" height="400">
+                        <div class="card-body">
+                            <h4 class="card_title">
+                                <!-- 태그 사이에 그냥 출력 할 때 문법.-->
+                                [[${item.itemNm}]]
+                            </h4>
+                            <p class="cart-text">[[${item.itemDetail}]]</p>
+                            <h3 class="cart-title text-danger">[[${item.price}]]원</h3>
+                        </div>
+
+                    </a>
+                </div>
+            </div>
+        </th:block>
+    </div>
+
+    <div th:with="start=${(items.number/maxPage)*maxPage + 1},
+                  end=(${(items.totalPages == 0) ? 1 :
+                  (start + (maxPage - 1) <
+                  items.totalPages ? start + (maxPage - 1) :
+                  items.totalPages)})">
+        <ul class="pagination justify-content-center">
+
+            <li class="page-item" th:classappend="${items.first}?'disabled'">
+                <!--<a th:onclick="'javascript:page(' + ${items.number - 1} + ')'"
+                   aria-label='Previous' class="page-link">-->
+                <a th:href="@{'/'+'?searchQuery=' + ${itemSearchDTO.searchQuery} + '&page=' + ${items.number - 1}} "
+                   aria-label='Previous' class="page-link">
+                    <span aria-hidden='true'>Previous</span>
+                </a>
+            </li>
+            <!-- page 객체에서 number 는 현재 페이지를 나타냄
+                  [[${page}]] : 타임리프에서 html 콘텐츠 영역안에 직접 데이터를 출력할 때 사용
+                   Page 객체에서 시작페이지는 0부터 해당 페이지를 호출할 때에는 page -1 을 해야함.-->
+            <li class="page-item" th:each="page: ${#numbers.sequence(start, end)}"
+                th:classappend="${items.number eq page - 1}?'active':''">
+                <!--???-->
+                <a th:href="@{'/'+'?searchQuery=' + ${itemSearchDTO.searchQuery}
+                + '&page=' + ${page - 1}}" th:inline="text" class="page-link">
+                    [[${page}]]
+                </a>
+                <!--                <a th:onclick="'javascript:page(' + ${page - 1} + ')'"
+                                   th:inline="text" class="page-link">[[${page}]]</a>-->
+            </li>
+
+            <li class="page-item" th:classappend="${items.last}?'disabled'">
+                <a th:onclick="'javascript:page(' + ${items.number + 1} + ')'"
+                   aria-label='Next' class="page-link">
+                    <span aria-hidden='true'>Next</span>
+                </a>
+            </li>
+        </ul>
+    </div>
+
+</div>
+</html>
\ No newline at end of file
Index: shop/shop/src/main/resources/templates/member/memberForm.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/shop/shop/src/main/resources/templates/member/memberForm.html b/shop/shop/src/main/resources/templates/member/memberForm.html
new file mode 100644
--- /dev/null	(revision 74a8b684730665ca64dd7cf129c1f96483c96c29)
+++ b/shop/shop/src/main/resources/templates/member/memberForm.html	(revision 74a8b684730665ca64dd7cf129c1f96483c96c29)
@@ -0,0 +1,70 @@
+<!DOCTYPE html>
+<html lang="ko" xmlns:th="http://www.thymeleaf.org"
+      xmlns:layout=http://www.ultraq.net.nz/thymeleaf/layout
+      layout:decorate='~{layouts/layout1}'>
+
+<th:block layout:fragment="css">
+    <style>
+        .fieldError {
+            color: #bd2130;
+        }
+    </style>
+</th:block>
+<th:block layout:fragment="script">
+    <script th:inline="javascript">
+        $(document).ready(function(){
+            const errorMessage = [[${errorMessage}]]
+            if(errorMessage != null){
+                alert(errorMessage);
+            }
+        })
+    </script>
+</th:block>
+
+<div layout:fragment="content">
+    <!--  th:action="@{/members/new}" == action="/members/new"   -->
+    <!--  th:object="${memberFormDTO}" : memberFormDTO 객체가 값을 받음 -->
+    <!--  th:field="*{name}"  ==  <input name="name"> 과 같음-->
+    <!--   ${#fields.hasErrors('email')} ==> name field 에서 error 발생시
+            타임리프 스프링 검증 오류 기능 BindingResult 사용 #fields: 검증 오류에 접근,
+             th:errors : 오류 있을때 태그를 출력해준다
+           th:if="${#fields.hasErrors('name')}" 는  controller 에서 BindingResult 에 의해
+           에러가 잡히면 발생
+           https://www.thymeleaf.org/doc/tutorials/3.0/thymeleafspring.html#validation-and-error-messages -->
+
+    <!-- memberformDTO에 담아서 new 로 보낸다? 이 과정에서 저절로 DTO 객체에 담기는지?  -->
+    <!-- 즉, 하나하나 param을 set하는 과정이 필요 없는지? -->
+    <form action="/members/new" role="form" method="post" th:object="${memberFormDTO}">
+        <div class="form-group">
+            <label th:for="name">이름</label>
+            <input type="text" class="form-control" th:field="*{name}" placeholder="이름을 입력해주세요">
+            <p th:if="${#fields.hasErrors('name')}"
+               th:errors="*{name}" class="fieldError">Incorect date 잘못된 정보입니다.</p>
+        </div>
+        <div class="form-group">
+            <label th:for="email">이메일</label>
+            <input type="text" class="form-control" th:field="*{email}" placeholder="이메일을 입력해주세요.">
+            <p th:if="${#fields.hasErrors('email')}"
+               th:errors="*{email}" class="fieldError">Incorect date 잘못된 정보입니다.</p>
+        </div>
+
+        <div class="form-group">
+            <label th:for="password">비밀번호</label>
+            <input type="text" class="form-control" th:field="*{password}" placeholder="비밀번호를 입력해주세요">
+            <p th:if="${#fields.hasErrors('password')}"
+               th:errors="*{password}" class="fieldError">Incorect date 잘못된 정보입니다.</p>
+        </div>
+        <div class="form-group">
+            <label th:for="address">주소</label>
+            <input type="text" class="form-control" th:field="*{address}" placeholder="주소를 입력해주세요.">
+            <p th:if="${#fields.hasErrors('address')}"
+               th:errors="*{address}" class="fieldError">Incorrect data 잘못된 정보입니다.</p>
+        </div>
+
+            <button type="submit" class="btn btn-primary">회원가입</button>
+
+        <input type="hidden" th:name="${_csrf.parameterName}"
+               th:value="${_csrf.token}">
+    </form>
+</div>
+</html>
\ No newline at end of file
Index: shop/shop/src/main/resources/templates/member/memberLoginForm.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/shop/shop/src/main/resources/templates/member/memberLoginForm.html b/shop/shop/src/main/resources/templates/member/memberLoginForm.html
new file mode 100644
--- /dev/null	(revision 74a8b684730665ca64dd7cf129c1f96483c96c29)
+++ b/shop/shop/src/main/resources/templates/member/memberLoginForm.html	(revision 74a8b684730665ca64dd7cf129c1f96483c96c29)
@@ -0,0 +1,38 @@
+<!DOCTYPE html>
+<html lang="ko" xmlns:th="http://www.thymeleaf.org"
+      xmlns:layout=http://www.ultraq.net.nz/thymeleaf/layout
+      layout:decorate='~{layouts/layout1}'>
+
+<th:block layout:fragment="css">
+    <style>
+        .fieldError {
+            color: #bd2130;
+        }
+    </style>
+</th:block>
+
+<div layout:fragment="content">
+    <form action="/members/login" role="form" method="post">
+        <div class="form-group">
+            <label th:for="email">이메일 주소</label>
+            <input type="email" class="form-control" name="email" placeholder="이메일을 입력해주세요">
+        </div>
+        <div class="form-group">
+            <label th:for="password">비밀번호</label>
+            <input type="password" class="form-control" name="password" placeholder="비밀번호를 입력해주세요">
+        </div>
+        <!--text = value? 태그 사이 문자열은 없어도 됌. errorMsg가 정상적으로 뜨지 않을경우 -->
+        <p th:if="${loginErrorMsg}"
+        th:text="${loginErrorMsg}" class="error"> Incorrect date 잘못된 정보입니다. </p>
+
+        <button class="btn btn-primary">로그인</button>
+        <button class="btn btn-primary" type="button"
+            onclick = location.href='/members/new' >회원가입</button>
+
+        <!-- _csrf 는 시큐리티에 있는 기능. 이 데이터를 받고 다른 페이지로 가는 것을 방지.-->
+        <input type="hidden" th:name="${_csrf.parameterName}"
+                             th:value="${_csrf.token}">
+
+    </form>
+</div>
+</html>
\ No newline at end of file
Index: shop/shop/src/main/resources/templates/member/modify.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/shop/shop/src/main/resources/templates/member/modify.html b/shop/shop/src/main/resources/templates/member/modify.html
new file mode 100644
--- /dev/null	(revision 74a8b684730665ca64dd7cf129c1f96483c96c29)
+++ b/shop/shop/src/main/resources/templates/member/modify.html	(revision 74a8b684730665ca64dd7cf129c1f96483c96c29)
@@ -0,0 +1,34 @@
+<!DOCTYPE html>
+<html lang="ko" xmlns:th="http://www.thymeleaf.org"
+      xmlns:layout="http://www.ultraq.net.nz/thymeleaf/layout"
+      layout:decorate='~{layouts/layout1}'>
+
+<div layout:fragment="content">
+    <h1>관리자 유저 수정페이지</h1>
+    <form method="post" action="/admin/modify">
+        <input type="hidden" th:field="${member.id}" name="id"/>
+        <div>
+            <label for="name">이름:</label>
+            <input type="text" id="name" th:value="${member.name}" name="name"/>
+        </div>
+        <div>
+            <label for="email">이메일:</label>
+            <input type="email" id="email" th:value="${member.email}" name="email"/>
+        </div>
+        <div>
+            <label for="address">주소:</label>
+            <input type="text" id="address" th:value="${member.address}" name="address"/>
+        </div>
+        <div>
+            <label for="role">권한:</label>
+            <select id="role" name="role">
+                <option th:each="role : ${T(com.keduit.shop.constant.Role).values()}"
+                        th:value="${role}" th:text="${role}" th:selected="${role == member.role}"></option>
+            </select>
+        </div>
+        <button type="submit" th:formaction="@{/admin/modify(id=${member.id})}">수정하기</button>
+    </form>
+    <a th:href="@{/admin/view(id=${member.id})}">상세 정보 보기</a>
+    <a th:href="@{/admin/list}">목록</a>
+</div>
+</html>
Index: shop/shop/src/main/resources/templates/order/orderHist.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/shop/shop/src/main/resources/templates/order/orderHist.html b/shop/shop/src/main/resources/templates/order/orderHist.html
new file mode 100644
--- /dev/null	(revision 74a8b684730665ca64dd7cf129c1f96483c96c29)
+++ b/shop/shop/src/main/resources/templates/order/orderHist.html	(revision 74a8b684730665ca64dd7cf129c1f96483c96c29)
@@ -0,0 +1,140 @@
+<!DOCTYPE html>
+<html lang="ko" xmlns:th="http://www.thymeleaf.org"
+      xmlns:layout=http://www.ultraq.net.nz/thymeleaf/layout
+      layout:decorate='~{layouts/layout1}'>
+
+<head>
+    <meta name="_csrf" th:content="${_csrf.token}"/>
+    <meta name="_csrf_header" th:content="${_csrf.headerName}"/>
+</head>
+
+<th:block layout:fragment="script">
+    <script th:inline="javascript">
+        function cancelOrder(orderId){
+            const token = $("meta[name='_csrf']").attr("content");
+            const header = $("meta[name='_csrf_header']").attr("content");
+
+            const url="/order/" + orderId + "/cancel";
+            const paramData = {orderId : orderId}
+            const param = JSON.stringify(paramData);
+
+            $.ajax({
+                url: url,
+                type: "POST",
+                contentType: "application/json",
+                data: param,
+                beforeSend: function (xhr) {
+                    xhr.setRequestHeader(header, token);
+                },
+                dataType: "json",
+                cache: false,
+                success: function(result, status){
+                    alert("주문이 취소되었습니다");
+                    location.href="/orders/" + [[${page}]];
+                },
+                error: function(jqXHR, status, error){
+                    if(jqXHR.status == '401'){
+                        alert("로그인 후 이용해주세요.")
+                        location.href="/member/login";
+                } else {
+                    alert(jqXHR.responseText)
+                }
+            }
+        })
+     }
+
+    </script>
+</th:block>
+!-- 사용자 CSS 추가 -->
+
+<th:block layout:fragment="css">
+    <style>
+        .content-mg{
+            margin-left:30%;
+            margin-right:30%;
+            margin-top:2%;
+            margin-bottom:100px;
+        }
+        .repImgDiv{
+            margin-right:15px;
+            margin-left:15px;
+            height:auto;
+        }
+        .repImg{
+            height:100px;
+            width:100px;
+        }
+        .card{
+            width:750px;
+            height:100%;
+            padding:30px;
+            margin-bottom:20px;
+        }
+        .fs18{
+            font-size:18px
+        }
+        .fs24{
+            font-size:24px
+        }
+    </style>
+</th:block>
+<div layout:fragment="content" class="content-mg">
+    <h2>구매 이력</h2>
+
+    <div th:each="order : ${orders.getContent()}">
+        <div class="d-flex mb-3 align-self-center">
+            <h4 th:text="${order.orderDate} + '주문'"></h4>
+            <div class="ml-3">
+                <th:block th:if="${order.orderStatus == T(com.keduit.shop.constant.OrderStatus).ORDER}">
+                    <button type="button" class="btn btn-outline-secondary"
+                            th:value="${order.orderId}" onclick="cancelOrder(this.value)">
+                        주문 취소
+                    </button>
+                </th:block>
+                <th:block th:unless="${order.orderStatus == T(com.keduit.shop.constant.OrderStatus).ORDER}">
+                    <h4>(취소완료)</h4>
+                </th:block>
+            </div>
+        </div>
+
+        <div class="card d-flex">
+            <div th:each="orderItem : ${order.orderItemDTOList}" class="d-flex mb-3">
+                <div class="repImgDiv">
+                    <img th:src="${orderItem.imgUrl}" class="rounded repImg">
+                    <!--th:alt="${orderItem.imgNm}"-->
+                </div>
+                <div class="align-self-cent w-75">
+                    <span th:text="${orderItem.itemNm}" class="fs24 font-weight-bold"></span>
+                    <div class="fs18 font-weight-light">
+                        <span th:text="${orderItem.orderPrice} + '원'"></span>
+                        <span th:text="${orderItem.count} + '개'"></span>
+                    </div>
+                </div>
+            </div>
+        </div>
+    </div>
+    <div th:with="start=${(orders.number/maxPage)*maxPage + 1},
+    end=(${(orders.totalPages == 0) ? 1 : (start + (maxPage - 1) < orders.totalPages ? start + (maxPage - 1) : orders.totalPages)})">
+        <ul class="pagination justify-content-center">
+
+            <li class="page-item" th:classappend="${orders.number eq 0}?'disabled':''">
+                <a th:href="@{'/orders/' + ${orders.number -1}}" aria-label='Previous' class="page-link">
+                    <span aria-hidden='true'>Previous</span>
+                </a>
+            </li>
+
+            <li class="page-item" th:each="page: ${#numbers.sequence(start, end)}"
+                th:classappend="${orders.number eq page -1}?'active':''">
+                <a th:href="@{'/orders/' + ${page -1}}" th:inline="text" class="page-link">[[${page}]]</a>
+            </li>
+
+            <li class="page-item" th:classappend="${orders.number+1 ge orders.totalPages}?'disabled':''">
+                <a th:href="@{'/orders/' + ${orders.number+1}}" aria-label='Next' class="page-link">
+                    <span aria-hidden='true'>Next</span>
+                </a>
+            </li>
+
+        </ul>
+    </div>
+</div>
+</html>
\ No newline at end of file
Index: shop/shop/src/main/resources/templates/template.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/shop/shop/src/main/resources/templates/template.html b/shop/shop/src/main/resources/templates/template.html
new file mode 100644
--- /dev/null	(revision 74a8b684730665ca64dd7cf129c1f96483c96c29)
+++ b/shop/shop/src/main/resources/templates/template.html	(revision 74a8b684730665ca64dd7cf129c1f96483c96c29)
@@ -0,0 +1,8 @@
+<!DOCTYPE html>
+<html lang="ko" xmlns:th="http://www.thymeleaf.org"
+      xmlns:layout=http://www.ultraq.net.nz/thymeleaf/layout
+      layout:decorate='~{layouts/layout1}'>
+<div layout:fragment="content">
+    <h1>메인 페이지입니다.</h1>
+</div>
+</html>
\ No newline at end of file
Index: shop/shop/src/main/resources/templates/thymeleafEx/thymeleafEx01.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/shop/shop/src/main/resources/templates/thymeleafEx/thymeleafEx01.html b/shop/shop/src/main/resources/templates/thymeleafEx/thymeleafEx01.html
new file mode 100644
--- /dev/null	(revision 74a8b684730665ca64dd7cf129c1f96483c96c29)
+++ b/shop/shop/src/main/resources/templates/thymeleafEx/thymeleafEx01.html	(revision 74a8b684730665ca64dd7cf129c1f96483c96c29)
@@ -0,0 +1,10 @@
+<!DOCTYPE html>
+<html lang="ko" xmlns:th="http://www.thymeleaf.org">
+<head>
+    <meta charset="UTF-8">
+    <title>Title</title>
+</head>
+<body>
+    <p th:text="${data}">Hello thymeleaf! </p>
+</body>
+</html>
\ No newline at end of file
Index: shop/shop/src/main/resources/templates/thymeleafEx/thymeleafEx02.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/shop/shop/src/main/resources/templates/thymeleafEx/thymeleafEx02.html b/shop/shop/src/main/resources/templates/thymeleafEx/thymeleafEx02.html
new file mode 100644
--- /dev/null	(revision 74a8b684730665ca64dd7cf129c1f96483c96c29)
+++ b/shop/shop/src/main/resources/templates/thymeleafEx/thymeleafEx02.html	(revision 74a8b684730665ca64dd7cf129c1f96483c96c29)
@@ -0,0 +1,22 @@
+<!DOCTYPE html>
+<html lang="ko" xmlns:th="http://www.thymeleaf.org">
+<head>
+    <meta charset="UTF-8">
+    <title>Title</title>
+</head>
+<body>
+    <h1>상품 데이터 출력 예제</h1>
+    <div>
+        상품명 : <span th:text="${itemDTO.itemNm}" ></span>
+    </div>
+    <div>
+        상품 상세 설명 : <span th:text="${itemDTO.itemDetail}"></span>ddddddddddddddd
+    </div>
+    <div>
+        상품 등록 일자 : <span th:text="${itemDTO.regTime}"></span>
+    </div>
+    <div>
+        상품 가격 : <span th:text="${itemDTO.price}"></span>
+    </div>
+</body>
+</html>
\ No newline at end of file
Index: shop/shop/src/main/resources/templates/thymeleafEx/thymeleafEx03.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/shop/shop/src/main/resources/templates/thymeleafEx/thymeleafEx03.html b/shop/shop/src/main/resources/templates/thymeleafEx/thymeleafEx03.html
new file mode 100644
--- /dev/null	(revision 74a8b684730665ca64dd7cf129c1f96483c96c29)
+++ b/shop/shop/src/main/resources/templates/thymeleafEx/thymeleafEx03.html	(revision 74a8b684730665ca64dd7cf129c1f96483c96c29)
@@ -0,0 +1,32 @@
+<!DOCTYPE html>
+<html lang="ko" xmlns:th="http://thymeleaf.org">
+<head>
+    <meta charset="UTF-8">
+    <title>Ex03</title>
+</head>
+<body>
+<h1>상품 리스트 출력</h1>
+<table>
+    <thead>
+    <th>
+    <td>순번</td>
+    <td>상품명</td>
+    <td>상품설명</td>
+    <td>가격</td>
+    <td>상품등록일</td>
+    </th>
+    </thead>
+    <tbody>
+    <tr th:each="itemDTO, status: ${itemDTOList}">
+    <td th:text="${status.index}"></td>
+    <td th:text="${itemDTO.itemNm}"></td>
+    <td th:text="${itemDTO.itemDetail}"></td>
+    <td th:text="${itemDTO.price}"></td>
+    <td th:text="${itemDTO.regTime}"></td>
+    </tr>
+    </tbody>
+
+</table>
+
+</body>
+</html>
\ No newline at end of file
Index: shop/shop/src/main/resources/templates/thymeleafEx/thymeleafEx04.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/shop/shop/src/main/resources/templates/thymeleafEx/thymeleafEx04.html b/shop/shop/src/main/resources/templates/thymeleafEx/thymeleafEx04.html
new file mode 100644
--- /dev/null	(revision 74a8b684730665ca64dd7cf129c1f96483c96c29)
+++ b/shop/shop/src/main/resources/templates/thymeleafEx/thymeleafEx04.html	(revision 74a8b684730665ca64dd7cf129c1f96483c96c29)
@@ -0,0 +1,34 @@
+<!DOCTYPE html>
+<html lang="ko" xmlns:th="http://thymeleaf.org">
+<head>
+    <meta charset="UTF-8">
+    <title>Ex03</title>
+</head>
+<body>
+<h1>상품 리스트 출력</h1>
+<table border="1">
+    <thead>
+    <th>
+    <td>순번</td>
+    <td>상품명</td>
+    <td>상품설명</td>
+    <td>가격</td>
+    <td>상품등록일</td>
+    </th>
+    </thead>
+    <tbody>
+    <tr th:each="itemDTO, status: ${itemDTOList}">
+        <!-- 만약 status 가 짝수 일 경우?-->
+        <td th:if="${status.even}" th:text="짝수"></td>
+        <td th:unless="${status.even}" th:text="홀수"></td>
+        <td th:text="${itemDTO.itemNm}"></td>
+        <td th:text="${itemDTO.itemDetail}"></td>
+        <td th:text="${itemDTO.price}"></td>
+        <td th:text="${itemDTO.regTime}"></td>
+    </tr>
+    </tbody>
+
+</table>
+
+</body>
+</html>
\ No newline at end of file
Index: shop/shop/src/main/resources/templates/thymeleafEx/thymeleafEx05.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/shop/shop/src/main/resources/templates/thymeleafEx/thymeleafEx05.html b/shop/shop/src/main/resources/templates/thymeleafEx/thymeleafEx05.html
new file mode 100644
--- /dev/null	(revision 74a8b684730665ca64dd7cf129c1f96483c96c29)
+++ b/shop/shop/src/main/resources/templates/thymeleafEx/thymeleafEx05.html	(revision 74a8b684730665ca64dd7cf129c1f96483c96c29)
@@ -0,0 +1,36 @@
+<!DOCTYPE html>
+<html lang="ko" xmlns:th="http://thymeleaf.org">
+<head>
+    <meta charset="UTF-8">
+    <title>Ex03</title>
+</head>
+<body>
+<h1>상품 리스트 출력</h1>
+<table border="1">
+    <thead>
+    <th>
+    <td>순번</td>
+    <td>상품명</td>
+    <td>상품설명</td>
+    <td>가격</td>
+    <td>상품등록일</td>
+    </th>
+    </thead>
+    <tbody>
+    <tr th:each="itemDTO, status: ${itemDTOList}">
+        <!-- 만약 status 가 짝수 일 경우?-->
+        <td th:switch="${status.even}">
+            <span th:case=true>짝수</span>
+            <span th:case=false>홀수</span>
+        </td>
+        <td th:text="${itemDTO.itemNm}"></td>
+        <td th:text="${itemDTO.itemDetail}"></td>
+        <td th:text="${itemDTO.price}"></td>
+        <td th:text="${itemDTO.regTime}"></td>
+    </tr>
+    </tbody>
+
+</table>
+
+</body>
+</html>
\ No newline at end of file
Index: shop/shop/src/main/resources/templates/thymeleafEx/thymeleafEx06.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/shop/shop/src/main/resources/templates/thymeleafEx/thymeleafEx06.html b/shop/shop/src/main/resources/templates/thymeleafEx/thymeleafEx06.html
new file mode 100644
--- /dev/null	(revision 74a8b684730665ca64dd7cf129c1f96483c96c29)
+++ b/shop/shop/src/main/resources/templates/thymeleafEx/thymeleafEx06.html	(revision 74a8b684730665ca64dd7cf129c1f96483c96c29)
@@ -0,0 +1,19 @@
+<!DOCTYPE html>
+<html lang="ko" xmlns:th="http://thymeleaf.org">
+<head>
+    <meta charset="UTF-8">
+    <title>Thymeleaf 링크처리 예제</title>
+</head>
+<body>
+<h1>Thymeleaf 링크 처리 예제</h1>
+<div>
+    <a th:href="@{/thymeleaf/ex01}">예제1 페이지 이동</a>
+</div>
+<div>
+    <a th:href="@{https://www.thymeleaf.org}">thymeleaf 공식페이지로 이동</a>
+</div>
+<div>
+    <a th:href="@{/thymeleaf/ex07(param1='파라미터 1',param2 ='파라미터2')}">파라미터 전달</a>
+</div>
+</body>
+</html>
\ No newline at end of file
Index: shop/shop/src/main/resources/templates/thymeleafEx/thymeleafEx07.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/shop/shop/src/main/resources/templates/thymeleafEx/thymeleafEx07.html b/shop/shop/src/main/resources/templates/thymeleafEx/thymeleafEx07.html
new file mode 100644
--- /dev/null	(revision 74a8b684730665ca64dd7cf129c1f96483c96c29)
+++ b/shop/shop/src/main/resources/templates/thymeleafEx/thymeleafEx07.html	(revision 74a8b684730665ca64dd7cf129c1f96483c96c29)
@@ -0,0 +1,14 @@
+<!DOCTYPE html>
+<html lang="ko" xmlns:th="https://thymeleaf.org">
+<head>
+    <meta charset="UTF-8">
+    <title>Title</title>
+</head>
+<body>
+    <h1>데이터 담긴 링크 예제 - 파라미터 전달 예제</h1>
+    <div>
+        <p th:text="${param1}"></p>
+        <p th:text="${param2}"></p>
+    </div>
+</body>
+</html>
\ No newline at end of file
Index: shop/shop/src/main/resources/templates/thymeleafEx/thymeleafEx08.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/shop/shop/src/main/resources/templates/thymeleafEx/thymeleafEx08.html b/shop/shop/src/main/resources/templates/thymeleafEx/thymeleafEx08.html
new file mode 100644
--- /dev/null	(revision 74a8b684730665ca64dd7cf129c1f96483c96c29)
+++ b/shop/shop/src/main/resources/templates/thymeleafEx/thymeleafEx08.html	(revision 74a8b684730665ca64dd7cf129c1f96483c96c29)
@@ -0,0 +1,10 @@
+<!DOCTYPE html>
+<html lang="ko" xmlns:th="https://www.thymeleaf.org"
+                xmlns:layout=https://www.ultraq.net.nz/thymeleaf/layout
+                layout:decorate='~{layouts/layout1}'>
+
+    <div layout:fragment="content">
+        본문 영역입니다.
+    </div>
+
+</html>
\ No newline at end of file
Index: shop/shop/src/test/java/com/keduit/shop/ShopApplicationTests.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/shop/shop/src/test/java/com/keduit/shop/ShopApplicationTests.java b/shop/shop/src/test/java/com/keduit/shop/ShopApplicationTests.java
new file mode 100644
--- /dev/null	(revision 74a8b684730665ca64dd7cf129c1f96483c96c29)
+++ b/shop/shop/src/test/java/com/keduit/shop/ShopApplicationTests.java	(revision 74a8b684730665ca64dd7cf129c1f96483c96c29)
@@ -0,0 +1,13 @@
+package com.keduit.shop;
+
+import org.junit.jupiter.api.Test;
+import org.springframework.boot.test.context.SpringBootTest;
+
+@SpringBootTest
+class ShopApplicationTests {
+
+	@Test
+	void contextLoads() {
+	}
+
+}
Index: shop/shop/src/test/java/com/keduit/shop/controller/ItemControllerTests.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/shop/shop/src/test/java/com/keduit/shop/controller/ItemControllerTests.java b/shop/shop/src/test/java/com/keduit/shop/controller/ItemControllerTests.java
new file mode 100644
--- /dev/null	(revision 74a8b684730665ca64dd7cf129c1f96483c96c29)
+++ b/shop/shop/src/test/java/com/keduit/shop/controller/ItemControllerTests.java	(revision 74a8b684730665ca64dd7cf129c1f96483c96c29)
@@ -0,0 +1,39 @@
+package com.keduit.shop.controller;
+
+import org.junit.jupiter.api.DisplayName;
+import org.junit.jupiter.api.Test;
+import org.springframework.beans.factory.annotation.Autowired;
+import org.springframework.boot.test.autoconfigure.web.servlet.AutoConfigureMockMvc;
+import org.springframework.boot.test.context.SpringBootTest;
+import org.springframework.security.test.context.support.WithMockUser;
+import org.springframework.test.web.servlet.MockMvc;
+import org.springframework.test.web.servlet.request.MockMvcRequestBuilders;
+
+import static org.springframework.test.web.servlet.result.MockMvcResultHandlers.print;
+import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.status;
+
+@SpringBootTest
+@AutoConfigureMockMvc
+public class ItemControllerTests {
+    
+    @Autowired
+    MockMvc mockMvc;
+    
+    @Test
+    @DisplayName("상품 등록 페이지 권한 테스트")
+    @WithMockUser(username = "admin", roles = "ADMIN")
+    public void itemFormTest() throws Exception{
+        mockMvc.perform(MockMvcRequestBuilders.get("/admin/item/new"))
+                .andDo(print())  // console창에 출력
+                .andExpect(status().isOk()); // 응답 코드가 200(OK) 인지 확인하겠다는 의미.
+    }
+
+    @Test
+    @DisplayName("상품 등록 페이지 일반회원 접근 테스트")
+    @WithMockUser(username = "user", roles="USER")
+    public void itemFormNotAdminTest() throws Exception{
+        mockMvc.perform(MockMvcRequestBuilders.get("/admin/item/new"))
+                .andDo(print())
+                .andExpect(status().isForbidden());
+    }
+}
Index: shop/shop/src/test/java/com/keduit/shop/controller/MemberControllerTests.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/shop/shop/src/test/java/com/keduit/shop/controller/MemberControllerTests.java b/shop/shop/src/test/java/com/keduit/shop/controller/MemberControllerTests.java
new file mode 100644
--- /dev/null	(revision 74a8b684730665ca64dd7cf129c1f96483c96c29)
+++ b/shop/shop/src/test/java/com/keduit/shop/controller/MemberControllerTests.java	(revision 74a8b684730665ca64dd7cf129c1f96483c96c29)
@@ -0,0 +1,76 @@
+package com.keduit.shop.controller;
+
+import com.keduit.shop.dto.MemberFormDTO;
+import com.keduit.shop.entity.Member;
+import com.keduit.shop.service.MemberService;
+import org.junit.jupiter.api.DisplayName;
+import org.junit.jupiter.api.Test;
+import org.springframework.beans.factory.annotation.Autowired;
+import org.springframework.boot.test.autoconfigure.web.servlet.AutoConfigureMockMvc;
+import org.springframework.boot.test.context.SpringBootTest;
+import org.springframework.security.crypto.password.PasswordEncoder;
+import org.springframework.security.test.web.servlet.response.SecurityMockMvcResultMatchers;
+import org.springframework.test.web.servlet.MockMvc;
+import org.springframework.transaction.annotation.Transactional;
+
+import static org.springframework.security.test.web.servlet.request.SecurityMockMvcRequestBuilders.formLogin;
+
+@SpringBootTest
+@AutoConfigureMockMvc
+@Transactional
+public class MemberControllerTests {
+
+    @Autowired
+    private MemberService memberService;
+
+    @Autowired
+    private MockMvc mockMvc;
+
+    @Autowired
+    PasswordEncoder passwordEncoder;
+
+    public Member createMember(String email, String password){
+
+        MemberFormDTO memberFormDTO = new MemberFormDTO();
+        memberFormDTO.setEmail(email);
+        memberFormDTO.setName("song");
+        memberFormDTO.setAddress("paju");
+        memberFormDTO.setPassword(password);
+
+//        위에걸로 만들고.
+        Member member = Member.createMember(memberFormDTO,passwordEncoder);
+
+        // db에 저장.
+        return memberService.saveMember(member);
+    }
+
+    // 트렌젝셔널때문에 db에 직접 담기지는 않음.
+    @Test
+    @DisplayName("로그인 성공")
+    public void loginSuccessTest() throws Exception{
+        String email = "123123@naver.com";
+        String password = "12345678";
+        this.createMember(email, password);
+
+        mockMvc.perform(formLogin().userParameter("email")
+                .loginProcessingUrl("/members/login")
+                .user(email).password(password))
+                .andExpect(SecurityMockMvcResultMatchers.authenticated());
+
+    }
+
+    // 트렌젝셔널때문에 db에 직접 담기지는 않음.
+    @Test
+    @DisplayName("로그인 실패 테스트")
+    public void loginFailTest() throws Exception{
+        String email = "123123@naver.com";
+        String password = "12345678";
+        this.createMember(email, password);
+
+        mockMvc.perform(formLogin().userParameter("email")
+                        .loginProcessingUrl("/members/login")
+                        .user(email).password(password+123))
+                .andExpect(SecurityMockMvcResultMatchers.unauthenticated());
+                                                    // unauthenticated() 위에서 이부분만 바꿈. 실패되길 기대함.
+    }
+}
Index: shop/shop/src/test/java/com/keduit/shop/entity/MemberTests.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/shop/shop/src/test/java/com/keduit/shop/entity/MemberTests.java b/shop/shop/src/test/java/com/keduit/shop/entity/MemberTests.java
new file mode 100644
--- /dev/null	(revision 74a8b684730665ca64dd7cf129c1f96483c96c29)
+++ b/shop/shop/src/test/java/com/keduit/shop/entity/MemberTests.java	(revision 74a8b684730665ca64dd7cf129c1f96483c96c29)
@@ -0,0 +1,43 @@
+package com.keduit.shop.entity;
+
+import com.keduit.shop.repository.MemberRepository;
+import org.junit.jupiter.api.DisplayName;
+import org.junit.jupiter.api.Test;
+import org.springframework.beans.factory.annotation.Autowired;
+import org.springframework.boot.test.context.SpringBootTest;
+import org.springframework.security.test.context.support.WithMockUser;
+import org.springframework.transaction.annotation.Transactional;
+
+import javax.persistence.EntityManager;
+import javax.persistence.EntityNotFoundException;
+import javax.persistence.PersistenceContext;
+
+@SpringBootTest
+@Transactional
+public class MemberTests {
+
+  @Autowired
+  MemberRepository memberRepository;
+
+  @PersistenceContext
+  EntityManager em;
+
+  @Test
+  @DisplayName("Auditing테스트")
+  @WithMockUser(username="gildong", roles="USER")   // role이 user인 사용자 gildong이 로그인했다고 가정
+  public void auditingTest(){
+    Member member = new Member();
+    memberRepository.save(member);
+
+    em.flush();
+    em.clear();
+
+    Member tmember = memberRepository.findById(member.getId())
+        .orElseThrow(EntityNotFoundException::new);
+
+    System.out.println("등록일: " + tmember.getRegTime());
+    System.out.println("수정일: " + tmember.getUpdateTime());
+    System.out.println("등록자: " + tmember.getCreatedBy());
+    System.out.println("수정자: " + tmember.getModifiedBy());
+  }
+}
Index: shop/shop/src/test/java/com/keduit/shop/entity/OrderTests.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/shop/shop/src/test/java/com/keduit/shop/entity/OrderTests.java b/shop/shop/src/test/java/com/keduit/shop/entity/OrderTests.java
new file mode 100644
--- /dev/null	(revision 74a8b684730665ca64dd7cf129c1f96483c96c29)
+++ b/shop/shop/src/test/java/com/keduit/shop/entity/OrderTests.java	(revision 74a8b684730665ca64dd7cf129c1f96483c96c29)
@@ -0,0 +1,144 @@
+package com.keduit.shop.entity;
+
+import com.keduit.shop.constant.ItemSellStatus;
+import com.keduit.shop.repository.ItemRepository;
+import com.keduit.shop.repository.MemberRepository;
+import com.keduit.shop.repository.OrderItemRepository;
+import com.keduit.shop.repository.OrderRepository;
+import org.junit.jupiter.api.DisplayName;
+import org.junit.jupiter.api.Test;
+import org.springframework.beans.factory.annotation.Autowired;
+import org.springframework.boot.test.context.SpringBootTest;
+import org.springframework.transaction.annotation.Transactional;
+
+import javax.persistence.EntityManager;
+import javax.persistence.EntityNotFoundException;
+import javax.persistence.PersistenceContext;
+import java.time.LocalDateTime;
+
+import static org.junit.jupiter.api.Assertions.assertEquals;
+
+@SpringBootTest
+@Transactional
+public class OrderTests {
+
+    @Autowired
+    OrderRepository orderRepository;
+    @Autowired
+    ItemRepository itemRepository;
+    @PersistenceContext
+    EntityManager em;
+    @Autowired
+    MemberRepository memberRepository;
+    @Autowired
+    OrderItemRepository orderItemRepository;
+
+    public Item createItem(){
+        Item item = new Item();
+        item.setItemNm("order 상품");
+        item.setPrice(10000);
+        item.setItemDetail("order 상품 상세 설명(페이지)");
+        item.setItemSellStatus(ItemSellStatus.SELL);
+        item.setStockNumber(100);
+      // item.setRegDate(LocalDateTime.now()); // 아이탬 테이블이 생기는 순간의 시간.
+
+        return item; // 넣진않고 toString 만 사용
+    }
+
+    public Order createOrder(){
+        Order order = new Order();
+
+        for (int i = 0; i < 3; i++) {
+            Item item = createItem();
+            itemRepository.save(item);
+
+            OrderItem orderItem = new OrderItem();
+            orderItem.setItem(item);
+            orderItem.setCount(10);
+            orderItem.setOrderPrice(10000);
+            orderItem.setOrder(order);
+            order.getOrderItems().add(orderItem);
+        }
+        Member member = new Member();
+        memberRepository.save(member);
+
+        order.setMember(member);
+        orderRepository.save(order);
+        return order;
+    }
+
+    @Test
+    @DisplayName("영속성 전이 테스트")
+    public void cascadeTest(){
+
+        Order order = new Order();
+
+        for (int i = 0; i < 5; i++) {
+            Item item = this.createItem();
+            itemRepository.save(item); // 100개 db 저장
+
+            OrderItem orderItem = new OrderItem();
+            orderItem.setItem(item);
+            orderItem.setCount(10);
+            orderItem.setOrderPrice(10000);
+            orderItem.setOrder(order);
+           // orderItem.setRegDate(item.getRegDate());
+
+            // 아직 영속성 컨텍스트에 저장되지 않은 orderItem 엔티티를 order엔티티에 담아줌.
+            order.getOrderItems().add(orderItem);
+        }
+        // order 엔티티를 저장하면서 강제로 flush를 호출하여 영속성 컨텍스트에 있는 객체들을 db에 반영.
+        // oders 테이블 왜 제대로 들어가지 않았는지 확인할것!
+//        orderRepository.saveAndFlush(order);
+        orderRepository.save(order);
+
+//        em.clear(); // 영속성 컨텍스트의 상태 초기화
+
+        Order saveOrder = orderRepository.findById(order.getId())
+                .orElseThrow(EntityNotFoundException::new);
+
+//        assertEquals(5, saveOrder.getOderItems().size());
+    }
+
+    @Test
+    @DisplayName("고아 객체 제거 테스트")
+    public void orphanRemovalTest(){
+        Order order = this.createOrder();
+
+        order.getOrderItems().remove(0); // 첫번째 리스트 행을 제거한다.
+        em.flush();
+        // 트렌젠셕이라 실제 테이블에서 확인할 순 없지만 콘솔창에서 delete가 실행됫엇다는 것을 알 수 있음.
+    }
+
+    @Test
+    @DisplayName("지연 로딩 테스트")
+    public void lazyLoadingTest(){
+        Order order = this.createOrder();
+
+        // 첫번째 id를 가져오라
+        Long orderItemId = order.getOrderItems().get(0).getId();
+        System.out.println("================" + orderItemId); // 값 존재함
+        em.flush();
+        em.clear();
+
+        OrderItem orderItem = orderItemRepository.findById(orderItemId)
+                .orElseThrow(EntityNotFoundException::new);
+
+//        System.out.println(orderItem+"--------------------------------------");
+
+        // 한번 읽어보는 것?
+        System.out.println("Order Class : " + orderItem.getOrder().getClass()); // orderItem 이 널값 인 이유.
+
+        System.out.println("==================================");
+        orderItem.getOrder().getOrderDate();
+        System.out.println("==================================");
+    }
+
+    @Test
+    public void orderItemListTest(){
+        OrderItem orderItem = new OrderItem();
+
+        System.out.println("----------------------"+ orderItemRepository.findAll());
+
+    }
+}
Index: shop/shop/src/test/java/com/keduit/shop/repository/CartRepositoryTests.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/shop/shop/src/test/java/com/keduit/shop/repository/CartRepositoryTests.java b/shop/shop/src/test/java/com/keduit/shop/repository/CartRepositoryTests.java
new file mode 100644
--- /dev/null	(revision 74a8b684730665ca64dd7cf129c1f96483c96c29)
+++ b/shop/shop/src/test/java/com/keduit/shop/repository/CartRepositoryTests.java	(revision 74a8b684730665ca64dd7cf129c1f96483c96c29)
@@ -0,0 +1,67 @@
+package com.keduit.shop.repository;
+
+
+import com.keduit.shop.dto.MemberFormDTO;
+import com.keduit.shop.entity.Cart;
+import com.keduit.shop.entity.Member;
+import org.junit.jupiter.api.DisplayName;
+import org.junit.jupiter.api.Test;
+import org.springframework.beans.factory.annotation.Autowired;
+import org.springframework.boot.test.context.SpringBootTest;
+import org.springframework.security.crypto.password.PasswordEncoder;
+import org.springframework.transaction.annotation.Transactional;
+
+import javax.persistence.EntityManager;
+import javax.persistence.EntityNotFoundException;
+import javax.persistence.PersistenceContext;
+
+import static org.junit.jupiter.api.Assertions.assertEquals;
+
+@SpringBootTest
+@Transactional
+public class CartRepositoryTests {
+
+    @Autowired
+    CartRepository cartRepository;
+    @Autowired
+    MemberRepository memberRepository;
+    @Autowired
+    PasswordEncoder passwordEncoder;
+
+    // 쿼리 DSL
+    @PersistenceContext
+    EntityManager em;
+
+    public Member createMember() {
+
+        MemberFormDTO memberFormDTO = new MemberFormDTO();
+        memberFormDTO.setEmail("rhaehfdl99997@naver.com");
+        memberFormDTO.setName("송진영");
+        memberFormDTO.setAddress("파주시");
+        memberFormDTO.setPassword("12345678");
+
+        return Member.createMember(memberFormDTO,passwordEncoder);
+    }
+
+    @Test
+    @DisplayName("장바구니 회원 entity mapping 조회 테스트")
+    public void findCartAndMemberTest(){
+        Member member = createMember(); // 위 메서드 활용해 하나 만듬.
+        memberRepository.save(member);
+
+        Cart cart = new Cart();
+        cart.setMember(member);
+        cartRepository.save(cart);
+
+        // db에 실제 반영. 하지만 트렌젹션이 있기에 최종 완료 후 다시 삭제.
+        // 엔티티 메니저가 db에 반영.
+        // 엔티티메니저를 왜 썻는가? 플러쉬와 클리어의 기능 확인.
+        em.flush();
+        em.clear();
+
+        Cart saveCart = cartRepository.findById(cart.getId())
+                .orElseThrow(EntityNotFoundException::new);
+
+        assertEquals(saveCart.getMember().getId(), member.getId());
+    }
+}
Index: shop/shop/src/test/java/com/keduit/shop/repository/ItemRepositoryTests.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/shop/shop/src/test/java/com/keduit/shop/repository/ItemRepositoryTests.java b/shop/shop/src/test/java/com/keduit/shop/repository/ItemRepositoryTests.java
new file mode 100644
--- /dev/null	(revision 74a8b684730665ca64dd7cf129c1f96483c96c29)
+++ b/shop/shop/src/test/java/com/keduit/shop/repository/ItemRepositoryTests.java	(revision 74a8b684730665ca64dd7cf129c1f96483c96c29)
@@ -0,0 +1,181 @@
+package com.keduit.shop.repository;
+
+import com.keduit.shop.constant.ItemSellStatus;
+import com.keduit.shop.entity.Item;
+import com.keduit.shop.entity.QItem;
+import com.querydsl.core.BooleanBuilder;
+import com.querydsl.jpa.impl.JPAQueryFactory;
+import org.junit.jupiter.api.DisplayName;
+import org.junit.jupiter.api.Test;
+import org.springframework.beans.factory.annotation.Autowired;
+import org.springframework.boot.test.context.SpringBootTest;
+import org.springframework.data.domain.Page;
+import org.springframework.data.domain.PageRequest;
+import org.springframework.data.domain.Pageable;
+import org.thymeleaf.util.StringUtils;
+
+import javax.persistence.EntityManager;
+import javax.persistence.PersistenceContext;
+import java.time.LocalDateTime;
+import java.util.List;
+
+import static org.junit.jupiter.api.Assertions.*;
+
+@SpringBootTest
+class ItemRepositoryTests {
+
+    @Autowired
+    ItemRepository itemRepository;
+
+    // 쿼리DSL
+    @PersistenceContext
+    EntityManager em;
+
+    @Test
+    @DisplayName("상품 저장 테스트") // 별 기능은 없고 가독성을 높이기 위함.
+    // 좌측 하단 보면 어떤 메서드가 실행되었는지 확인가능.
+    public void createItemTest() {
+        Item item = new Item();
+        item.setItemNm("테스트 상품");
+        item.setPrice(10000);
+        item.setItemDetail("상품 상세 설명(페이지)");
+        item.setItemSellStatus(ItemSellStatus.SELL);
+        item.setStockNumber(100);
+        //item.setRegDate(LocalDateTime.now()); // 아이탬 테이블이 생기는 순간의 시간.
+        Item savedItem = itemRepository.save(item);
+
+        System.out.println(savedItem);
+
+    }
+
+    @Test
+    @DisplayName("상품명 조회 테스트")
+    public void findByItemNm() {
+        List<Item> itemList = itemRepository.findByItemNm("테스트 상품");
+
+        for (Item item : itemList) {
+            System.out.println(item);
+            System.out.println();
+        }
+
+    }
+
+    @Test
+    @DisplayName("상품 저장 목록 테스트") // 뿌려줌.
+    public void createItemListTest() { // 많이 생성해보자.
+
+        for (int i = 1; i <= 10; i++) {
+            Item item = new Item();
+            item.setItemNm("테스트 상품" + i);
+            item.setPrice(10000 + i* 1000);
+            item.setItemDetail("상품 상세 설명(페이지)" + i);
+            item.setItemSellStatus(ItemSellStatus.SELL);
+            item.setStockNumber(100);
+           // item.setRegDate(LocalDateTime.now()); // 아이탬 테이블이 생기는 순간의 시간.
+            Item savedItem = itemRepository.save(item);
+
+            System.out.println(savedItem);
+        }
+    }
+
+    @Test
+    @DisplayName("상품명, 상품상세 설명 or 테스트")
+    public void findByItemNmOrItemDetailTest() {
+        List<Item> itemList =
+                itemRepository.findByItemNmOrItemDetail(
+                        "테스트 상품 1", "테스트 상품 상세 설명 10");
+        for (Item item : itemList) {
+            System.out.println(" 아이탬 입니다 : " + item);
+        }
+    }
+
+    @Test
+    @DisplayName("가격 LessThan 테스트")
+    public void findByPriceLessThanTest() {
+        List<Item> itemList =
+                itemRepository.findItemNmByPriceLessThan(10001);
+        for (Item item : itemList) {
+            // find는 일단 모든 칼럼 값을 가져온다?
+            System.out.println("가격이 만일원 이하인 아이탬 이름 목록 : " + item.getItemNm());
+        }
+    }
+
+    @Test
+    @DisplayName("가격 내림차순 조회 테스트")
+    public void findByPriceLessThanOrderByPriceDescTests() {
+        List<Item> itemList =
+                itemRepository.findByPriceLessThanOrderByPriceDesc(18000);
+        for (Item item : itemList) {
+            System.out.println(item);
+
+        }
+
+    }
+
+    @Test
+    @DisplayName("@Query를 이용한 삼풍 조회 테스트")
+    public void findByItemDetailTests() {
+        List<Item> itemList = itemRepository.findByItemDetail("상품");
+        for (Item item : itemList){
+            System.out.println(item);
+        }
+    }
+
+    @Test
+    @DisplayName("native 속성을 이용한 삼품조회 테스트")
+    public void findByItemDetailByNativeTests(){
+        List<Item> itemList = itemRepository.findByItemDetailByNative("상품 상세");
+        for (Item item : itemList){
+            System.out.println(item);
+        }
+    }
+    
+    // 동적 쿼리를 짤 떈 queryDSL을 많이 쓴다
+    @Test
+    @DisplayName("QueryDsl테스트")
+    public void queryDslTest(){
+        JPAQueryFactory queryFactory = new JPAQueryFactory(em);
+        QItem qItem = QItem.item;
+
+        List<Item> list = queryFactory
+                .select(qItem)
+                .from(qItem)
+                .where(qItem.itemSellStatus.eq(ItemSellStatus.SELL))
+                .where(qItem.itemDetail.like("%" + "상품" + "%"))
+                .orderBy(qItem.price.desc())
+                .fetch();
+        for (Item item : list){
+            System.out.println("item = " + item);
+        }
+    }
+    
+    @Test
+    @DisplayName("상품 quertDsl 조회 테스트 2 (조건에 맞는 검색) ")
+    public void queryDslTest2(){
+        // 쿼리에 들어갈 조건을 ?
+        BooleanBuilder booleanBuilder = new BooleanBuilder();
+
+        QItem qItem = QItem.item; // 싱글톤패턴을 사용
+        String itemDetail = "상품 상세";
+        int price = 11000;
+        String itemSellStat = "SELL";
+
+        booleanBuilder.and(qItem.itemDetail.like("%" + itemDetail +"%"));
+        booleanBuilder.and(qItem.price.gt(price));
+
+        // 타임리프의 stringUtils
+        if(StringUtils.equals(itemSellStat, ItemSellStatus.SELL)){
+            booleanBuilder.and(qItem.itemSellStatus.eq(ItemSellStatus.SELL));
+        }
+
+        Pageable pageable = PageRequest.of(0,5);
+        Page<Item> itemPageResult = itemRepository.findAll(booleanBuilder, pageable);
+        System.out.println("total elements : " +
+                itemPageResult.getTotalElements());
+        List<Item> resultItemList = itemPageResult.getContent();
+        for(Item resultItem : resultItemList){
+            System.out.println(resultItem);
+        }
+
+    }
+}
\ No newline at end of file
Index: shop/shop/src/test/java/com/keduit/shop/service/CartServiceTests.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/shop/shop/src/test/java/com/keduit/shop/service/CartServiceTests.java b/shop/shop/src/test/java/com/keduit/shop/service/CartServiceTests.java
new file mode 100644
--- /dev/null	(revision 74a8b684730665ca64dd7cf129c1f96483c96c29)
+++ b/shop/shop/src/test/java/com/keduit/shop/service/CartServiceTests.java	(revision 74a8b684730665ca64dd7cf129c1f96483c96c29)
@@ -0,0 +1,72 @@
+package com.keduit.shop.service;
+
+import com.keduit.shop.constant.ItemSellStatus;
+import com.keduit.shop.dto.CartItemDTO;
+import com.keduit.shop.entity.CartItem;
+import com.keduit.shop.entity.Item;
+import com.keduit.shop.entity.Member;
+import com.keduit.shop.repository.CartItemRepository;
+import com.keduit.shop.repository.ItemRepository;
+import com.keduit.shop.repository.MemberRepository;
+import org.junit.jupiter.api.DisplayName;
+import org.junit.jupiter.api.Test;
+import org.springframework.beans.factory.annotation.Autowired;
+import org.springframework.boot.test.context.SpringBootTest;
+import org.springframework.transaction.annotation.Transactional;
+
+import javax.persistence.EntityNotFoundException;
+
+import static org.junit.jupiter.api.Assertions.assertEquals;
+
+@SpringBootTest
+@Transactional
+public class CartServiceTests {
+
+    @Autowired
+    ItemRepository itemRepository;
+
+    @Autowired
+    MemberRepository memberRepository;
+
+    @Autowired
+    CartService cartService;
+
+    @Autowired
+    CartItemRepository cartItemRepository;
+
+    public Item saveItem() {
+        Item item = new Item();
+        item.setItemNm("테스트 상품");
+        item.setPrice(50000);
+        item.setItemDetail("상품 상세 이미지 테스트");
+        item.setItemSellStatus(ItemSellStatus.SELL);
+        item.setStockNumber(100);
+
+        return itemRepository.save(item);
+    }
+    public Member saveMember() {
+        Member member = new Member();
+        member.setEmail("test@test.com");
+        return memberRepository.save(member); // 가능한 이유? 유효성 검사한게 자바라서?
+    }
+
+    @Test 
+    @DisplayName("장바구니 담기 테스트")
+    public void addCart(){
+        Item item = saveItem();
+        Member member = saveMember();
+
+        CartItemDTO cartItemDTO = new CartItemDTO();
+        cartItemDTO.setCount(50);
+        cartItemDTO.setItemId(item.getId());
+
+        Long cartItemid = cartService.addCart(cartItemDTO, member.getEmail());
+
+        CartItem cartItem = cartItemRepository.findById(cartItemid)
+                .orElseThrow(EntityNotFoundException::new);
+        System.out.println(cartItem+"@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@");
+        assertEquals(item.getId(), cartItem.getItem().getId());
+        assertEquals(cartItemDTO.getCount(), cartItem.getCount());
+    }
+
+}
Index: shop/shop/src/test/java/com/keduit/shop/service/ItemServiceTests.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/shop/shop/src/test/java/com/keduit/shop/service/ItemServiceTests.java b/shop/shop/src/test/java/com/keduit/shop/service/ItemServiceTests.java
new file mode 100644
--- /dev/null	(revision 74a8b684730665ca64dd7cf129c1f96483c96c29)
+++ b/shop/shop/src/test/java/com/keduit/shop/service/ItemServiceTests.java	(revision 74a8b684730665ca64dd7cf129c1f96483c96c29)
@@ -0,0 +1,82 @@
+package com.keduit.shop.service;
+
+import com.keduit.shop.constant.ItemSellStatus;
+import com.keduit.shop.dto.ItemFormDTO;
+import com.keduit.shop.entity.Item;
+import com.keduit.shop.entity.ItemImg;
+import com.keduit.shop.repository.ItemImgRepository;
+import com.keduit.shop.repository.ItemRepository;
+import org.junit.jupiter.api.DisplayName;
+import org.junit.jupiter.api.Test;
+import org.springframework.beans.factory.annotation.Autowired;
+import org.springframework.boot.test.context.SpringBootTest;
+import org.springframework.mock.web.MockMultipartFile;
+import org.springframework.security.test.context.support.WithMockUser;
+import org.springframework.transaction.annotation.Transactional;
+import org.springframework.web.multipart.MultipartFile;
+
+import javax.persistence.EntityNotFoundException;
+import java.util.ArrayList;
+import java.util.List;
+
+import static org.junit.jupiter.api.Assertions.assertEquals;
+
+@SpringBootTest
+@Transactional
+public class ItemServiceTests {
+
+    @Autowired
+    ItemService itemService;
+
+    @Autowired
+    ItemRepository itemRepository;
+
+    @Autowired
+    ItemImgRepository itemImgRepository;
+
+    List<MultipartFile> createMultipartFiles(){
+
+        List<MultipartFile> multipartFiles = new ArrayList<>();
+
+        for (int i = 0; i < 5; i++) {
+            String path = "F:/shop/item/";
+            String imageName = "image" + i + ".jpg";
+            MockMultipartFile multipartFile = new MockMultipartFile(path, imageName, "image/jpg", new byte[]{1,2,3,4});
+
+            multipartFiles.add(multipartFile);
+        }
+        return multipartFiles;
+    }
+
+    @Test
+    @DisplayName("상품등록 테스트")
+    @WithMockUser(username = "admin", roles = "ADMIN")
+    void saveItem() throws Exception{
+        ItemFormDTO itemFormDTO = new ItemFormDTO();
+
+        itemFormDTO.setItemNm("테스트 상품");
+        itemFormDTO.setItemSellStatus(ItemSellStatus.SELL);
+        itemFormDTO.setItemDetail("테스트 상세설명이미지");
+        itemFormDTO.setPrice(100000);
+        itemFormDTO.setStockNumber(100);
+
+        List<MultipartFile> multipartFileList = createMultipartFiles();
+
+        Long itemId = itemService.saveItem(itemFormDTO, multipartFileList); // 멀티파트가 뭘까
+
+        List<ItemImg> itemImgList = itemImgRepository.findByItemIdOrderByIdAsc(itemId);
+        System.out.println("itemImgList --------");
+        System.out.println(itemImgList);
+
+        Item item = itemRepository.findById(itemId)
+                .orElseThrow(EntityNotFoundException::new); // 옵셔널 처리
+        System.out.println("item ==================");
+        System.out.println(item);
+        assertEquals(itemFormDTO.getItemNm(), item.getItemNm());
+        assertEquals(itemFormDTO.getItemSellStatus(), item.getItemSellStatus());
+        assertEquals(itemFormDTO.getItemDetail(), item.getItemDetail());
+        assertEquals(itemFormDTO.getPrice(), item.getPrice());
+        assertEquals(itemFormDTO.getStockNumber(), item.getStockNumber());
+        assertEquals(multipartFileList.get(0).getOriginalFilename(), itemImgList.get(0).getOriImgName());
+    }
+}
Index: shop/shop/src/test/java/com/keduit/shop/service/MemberServiceTests.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/shop/shop/src/test/java/com/keduit/shop/service/MemberServiceTests.java b/shop/shop/src/test/java/com/keduit/shop/service/MemberServiceTests.java
new file mode 100644
--- /dev/null	(revision 74a8b684730665ca64dd7cf129c1f96483c96c29)
+++ b/shop/shop/src/test/java/com/keduit/shop/service/MemberServiceTests.java	(revision 74a8b684730665ca64dd7cf129c1f96483c96c29)
@@ -0,0 +1,67 @@
+package com.keduit.shop.service;
+
+import com.keduit.shop.dto.MemberFormDTO;
+import com.keduit.shop.entity.Member;
+import org.junit.jupiter.api.DisplayName;
+import org.junit.jupiter.api.Test;
+import org.springframework.beans.factory.annotation.Autowired;
+import org.springframework.boot.test.context.SpringBootTest;
+import org.springframework.security.crypto.password.PasswordEncoder;
+import org.springframework.transaction.annotation.Transactional;
+
+import static org.junit.jupiter.api.Assertions.assertEquals;
+import static org.junit.jupiter.api.Assertions.assertThrows;
+
+
+@SpringBootTest
+//@Transactional
+public class MemberServiceTests {
+    @Autowired
+    MemberService memberService;
+
+    @Autowired
+    PasswordEncoder passwordEncoder;
+
+    public Member createMember(){
+        MemberFormDTO memberFormDTO = new MemberFormDTO();
+        memberFormDTO.setEmail("tesdt@song.com");
+        memberFormDTO.setName("song");
+        memberFormDTO.setAddress("paju");
+        memberFormDTO.setPassword("1234");
+
+        // 여기서 Member은 entity의  Member 이다. 만들어놨던것.
+        return Member.createMember(memberFormDTO, passwordEncoder);
+    }
+    
+    @Test
+    @DisplayName("회원 가입 테스트")
+    // 이부분은 지금까지의 메서드가 문제 없다면 (이메일 중복이 없다면) 항상 true인 메서드이다
+    // db에 저장된 정보와 (saveMember) db에 담기 전 VO인 member.get를 비교.
+    // saveMember 를 통과했다면 반드시 같을 수 밖에 없음.
+    public void saveMemberTest(){
+        Member member = createMember();
+        Member saveMember = memberService.saveMember(member);
+
+        // 등록된 엔티티와 등록 전? 멤버가 제대로 맞는지
+        assertEquals(member.getEmail(),saveMember.getEmail());
+        assertEquals(member.getName(),saveMember.getName());
+        assertEquals(member.getAddress(),saveMember.getAddress());
+        assertEquals(member.getPassword(),saveMember.getPassword());
+        assertEquals(member.getRole(),saveMember.getRole());
+    }
+
+    @Test
+    @DisplayName("중복 회원 가입 테스트")
+    public void saveDuplicateMemberTest(){
+        Member member1 = createMember();
+        Member member2 = createMember();
+        memberService.saveMember(member1);
+
+        // 오류가 발생 시 이메일이 동일
+        Throwable e = assertThrows(IllegalStateException.class,
+                () -> {memberService.saveMember(member2);});
+        assertEquals("이미 가입된 회원입니다.", e.getMessage());
+    }
+}
+
+    
\ No newline at end of file
Index: shop/shop/src/test/java/com/keduit/shop/service/OrderServiceTests.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/shop/shop/src/test/java/com/keduit/shop/service/OrderServiceTests.java b/shop/shop/src/test/java/com/keduit/shop/service/OrderServiceTests.java
new file mode 100644
--- /dev/null	(revision 74a8b684730665ca64dd7cf129c1f96483c96c29)
+++ b/shop/shop/src/test/java/com/keduit/shop/service/OrderServiceTests.java	(revision 74a8b684730665ca64dd7cf129c1f96483c96c29)
@@ -0,0 +1,79 @@
+package com.keduit.shop.service;
+
+import com.keduit.shop.constant.ItemSellStatus;
+import com.keduit.shop.dto.OrderDTO;
+import com.keduit.shop.entity.Item;
+import com.keduit.shop.entity.Member;
+import com.keduit.shop.entity.Order;
+import com.keduit.shop.entity.OrderItem;
+import com.keduit.shop.repository.ItemRepository;
+import com.keduit.shop.repository.MemberRepository;
+import com.keduit.shop.repository.OrderRepository;
+import org.junit.jupiter.api.DisplayName;
+import org.junit.jupiter.api.Test;
+import org.springframework.beans.factory.annotation.Autowired;
+import org.springframework.boot.test.context.SpringBootTest;
+import org.springframework.transaction.annotation.Transactional;
+
+import javax.persistence.EntityNotFoundException;
+import java.util.List;
+
+import static org.junit.jupiter.api.Assertions.assertEquals;
+
+@SpringBootTest
+@Transactional
+public class OrderServiceTests {
+
+    @Autowired
+    private OrderService orderService;
+
+    @Autowired
+    private OrderRepository orderRepository;
+
+    @Autowired
+    private ItemRepository itemRepository;
+
+    @Autowired
+    MemberRepository memberRepository;
+
+    public Item saveItem() {
+        Item item = new Item();
+        item.setItemNm("테스트 상품");
+        item.setPrice(50000);
+        item.setItemDetail("상품 상세 이미지 테스트");
+        item.setItemSellStatus(ItemSellStatus.SELL);
+        item.setStockNumber(100);
+
+        return itemRepository.save(item);
+
+    }
+
+    public Member saveMember() {
+        Member member = new Member();
+        member.setEmail("test@test.com");
+        return memberRepository.save(member); // 가능한 이유? 유효성 검사한게 자바라서?
+    }
+
+    @Test
+    @DisplayName("주문 테스트")
+    public void order() {
+        Item item = saveItem();
+        Member member = saveMember();
+
+        OrderDTO orderDTO = new OrderDTO();
+        orderDTO.setCount(10);
+        orderDTO.setItemId(item.getId());
+
+        Long orderId = orderService.order(orderDTO, member.getEmail());
+
+        Order order = orderRepository.findById(orderId)
+                .orElseThrow(EntityNotFoundException::new);
+
+        List<OrderItem> orderItems = order.getOrderItems();
+
+        int totalPrice = orderDTO.getCount() * item.getPrice();
+
+        assertEquals(totalPrice, order.getTotalPrice());
+
+    }
+}
diff --git a/bpro00/.mvn/wrapper/maven-wrapper.jar b/bpro00/.mvn/wrapper/maven-wrapper.jar
new file mode 100644
index 0000000000000000000000000000000000000000..cb28b0e37c7d206feb564310fdeec0927af4123a
GIT binary patch
literal 62547
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
b_49{|xgB~}0Tu035d!~x4+q;$pC0`m*U2I8

diff --git a/shop/shop/.mvn/wrapper/maven-wrapper.jar b/shop/shop/.mvn/wrapper/maven-wrapper.jar
new file mode 100644
index 0000000000000000000000000000000000000000..cb28b0e37c7d206feb564310fdeec0927af4123a
GIT binary patch
literal 62547
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
b_49{|xgB~}0Tu035d!~x4+q;$pC0`m*U2I8

